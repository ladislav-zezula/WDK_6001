#
# UMDF_VERSION controls the headers that the driver uses.
# UMDF_VERSION + UMDF_MINOR_VERSION control which version 
# of UMDF the driver is bound to in the INF and which 
# update coinstaller it requires (through stampinf). 
#

UMDF_VERSION=1
UMDF_MINOR_VERSION=7

KMDF_VERSION=1
KMDF_MINOR_VERSION=7


TARGETNAME=UMDFSkeleton
TARGETTYPE=DYNLINK

USE_MSVCRT=1

C_DEFINES = $(C_DEFINES)  /D_UNICODE /DUNICODE

WIN32_WINNT_VERSION=$(LATEST_WIN32_WINNT_VERSION)
_NT_TARGET_VERSION=$(_NT_TARGET_VERSION_WINXP)
NTDDI_VERSION=$(LATEST_NTDDI_VERSION)

DLLENTRY=_DllMainCRTStartup
DLLDEF=exports.def

SOURCES=\
    Skeleton.rc                 \
    dllsup.cpp                  \
    comsup.cpp                  \
    driver.cpp                  \
    device.cpp

TARGETLIBS=\
        $(SDK_LIB_PATH)\strsafe.lib     \
        $(SDK_LIB_PATH)\kernel32.lib    \
        $(SDK_LIB_PATH)\advapi32.lib

NTTARGETFILES=$(OBJ_PATH)\$(O)\UMDFSkeleton_Root.inf \
              $(OBJ_PATH)\$(O)\UMDFSkeleton_OSR.inf


MISCFILES=$(NTTARGETFILES)

#
# This sets up the WPP preprocessor and tells it to scan internal.h to find
# the trace function definition that's in there.
#

RUN_WPP= $(SOURCES) -dll -scan:internal.h

