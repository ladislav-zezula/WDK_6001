

#if !defined (_iris_REG_HEADER)
#define _iris_REG_HEADER
/*
*		iris_registers.h
*
*	Register Spec Release:  Chip Spec 1.160
*
*
*	 (c) 2000 ATI Technologies Inc.  (unpublished)
*
*	 All rights reserved.
*	 The year included in the foregoing notice is the year of creation of the work.
*
*/ 

	union GENENB {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     BLK_IO_BASE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     BLK_IO_BASE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MM_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         MM_ADDR : 31;
		unsigned int                         MM_APER : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         MM_APER : 1;
		unsigned int                         MM_ADDR : 31;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MM_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         MM_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         MM_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BUS_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  BUS_DBL_RESYNC : 1;
		unsigned int                  BUS_MSTR_RESET : 1;
		unsigned int                   BUS_FLUSH_BUF : 1;
		unsigned int                BUS_STOP_REQ_DIS : 1;
		unsigned int             BUS_READ_COMBINE_EN : 1;
		unsigned int              BUS_WRT_COMBINE_EN : 1;
		unsigned int                  BUS_MASTER_DIS : 1;
		unsigned int                 BIOS_ROM_WRT_EN : 1;
		unsigned int               BUS_PREFETCH_MODE : 2;
		unsigned int             BUS_VGA_PREFETCH_EN : 1;
		unsigned int            BUS_SGL_READ_DISABLE : 1;
		unsigned int                    BIOS_DIS_ROM : 1;
		unsigned int           BUS_PCI_READ_RETRY_EN : 1;
		unsigned int          BUS_AGP_AD_STEPPING_EN : 1;
		unsigned int            BUS_PCI_WRT_RETRY_EN : 1;
		unsigned int                    BUS_RETRY_WS : 4;
		unsigned int                BUS_MSTR_RD_MULT : 1;
		unsigned int                BUS_MSTR_RD_LINE : 1;
		unsigned int                     BUS_SUSPEND : 1;
		unsigned int                         LAT_16X : 1;
		unsigned int               BUS_RD_DISCARD_EN : 1;
		unsigned int                       ENFRCWRDY : 1;
		unsigned int                     BUS_MSTR_WS : 1;
		unsigned int                 BUS_PARKING_DIS : 1;
		unsigned int          BUS_MSTR_DISCONNECT_EN : 1;
		unsigned int                         SERR_EN : 1;
		unsigned int                  BUS_READ_BURST : 1;
		unsigned int                BUS_RDY_READ_DLY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                BUS_RDY_READ_DLY : 1;
		unsigned int                  BUS_READ_BURST : 1;
		unsigned int                         SERR_EN : 1;
		unsigned int          BUS_MSTR_DISCONNECT_EN : 1;
		unsigned int                 BUS_PARKING_DIS : 1;
		unsigned int                     BUS_MSTR_WS : 1;
		unsigned int                       ENFRCWRDY : 1;
		unsigned int               BUS_RD_DISCARD_EN : 1;
		unsigned int                         LAT_16X : 1;
		unsigned int                     BUS_SUSPEND : 1;
		unsigned int                BUS_MSTR_RD_LINE : 1;
		unsigned int                BUS_MSTR_RD_MULT : 1;
		unsigned int                    BUS_RETRY_WS : 4;
		unsigned int            BUS_PCI_WRT_RETRY_EN : 1;
		unsigned int          BUS_AGP_AD_STEPPING_EN : 1;
		unsigned int           BUS_PCI_READ_RETRY_EN : 1;
		unsigned int                    BIOS_DIS_ROM : 1;
		unsigned int            BUS_SGL_READ_DISABLE : 1;
		unsigned int             BUS_VGA_PREFETCH_EN : 1;
		unsigned int               BUS_PREFETCH_MODE : 2;
		unsigned int                 BIOS_ROM_WRT_EN : 1;
		unsigned int                  BUS_MASTER_DIS : 1;
		unsigned int              BUS_WRT_COMBINE_EN : 1;
		unsigned int             BUS_READ_COMBINE_EN : 1;
		unsigned int                BUS_STOP_REQ_DIS : 1;
		unsigned int                   BUS_FLUSH_BUF : 1;
		unsigned int                  BUS_MSTR_RESET : 1;
		unsigned int                  BUS_DBL_RESYNC : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HI_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                        AGP_BUSY : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                        AGP_BUSY : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BUS_CNTL1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PMI_IO_DISABLE : 1;
		unsigned int                 PMI_MEM_DISABLE : 1;
		unsigned int                  PMI_BM_DISABLE : 1;
		unsigned int                 PMI_INT_DISABLE : 1;
		unsigned int      BUS2_WBF_DURING_REG_WRT_EN : 1;
		unsigned int      BUS2_IMMEDIATE_PMI_DISABLE : 1;
		unsigned int                                 : 2;
		unsigned int      BUS2_VGA_REG_COHERENCY_DIS : 1;
		unsigned int      BUS2_VGA_MEM_COHERENCY_DIS : 1;
		unsigned int      BUS2_HDP_REG_COHERENCY_DIS : 1;
		unsigned int BUS2_GUI_INITIATOR_COHERENCY_DIS : 1;
		unsigned int       BUS2_VGA_FW_COHERENCY_DIS : 1;
		unsigned int     BUS2_ACCEL_FW_COHERENCY_DIS : 1;
		unsigned int                                 : 2;
		unsigned int               BUS2_RD_PANIC_VAL : 4;
		unsigned int              BUS2_WRT_PANIC_VAL : 4;
		unsigned int                                 : 2;
		unsigned int             MOBILE_PLATFORM_SEL : 2;
		unsigned int                SEND_SBA_LATENCY : 3;
		unsigned int                    AGPCLK_VALID : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    AGPCLK_VALID : 1;
		unsigned int                SEND_SBA_LATENCY : 3;
		unsigned int             MOBILE_PLATFORM_SEL : 2;
		unsigned int                                 : 2;
		unsigned int              BUS2_WRT_PANIC_VAL : 4;
		unsigned int               BUS2_RD_PANIC_VAL : 4;
		unsigned int                                 : 2;
		unsigned int     BUS2_ACCEL_FW_COHERENCY_DIS : 1;
		unsigned int       BUS2_VGA_FW_COHERENCY_DIS : 1;
		unsigned int BUS2_GUI_INITIATOR_COHERENCY_DIS : 1;
		unsigned int      BUS2_HDP_REG_COHERENCY_DIS : 1;
		unsigned int      BUS2_VGA_MEM_COHERENCY_DIS : 1;
		unsigned int      BUS2_VGA_REG_COHERENCY_DIS : 1;
		unsigned int                                 : 2;
		unsigned int      BUS2_IMMEDIATE_PMI_DISABLE : 1;
		unsigned int      BUS2_WBF_DURING_REG_WRT_EN : 1;
		unsigned int                 PMI_INT_DISABLE : 1;
		unsigned int                  PMI_BM_DISABLE : 1;
		unsigned int                 PMI_MEM_DISABLE : 1;
		unsigned int                  PMI_IO_DISABLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                 APER_REG_ENDIAN : 2;
		unsigned int                                 : 2;
		unsigned int                  CFG_VGA_RAM_EN : 1;
		unsigned int                  CFG_VGA_IO_DIS : 1;
		unsigned int                                 : 6;
		unsigned int                  CFG_ATI_REV_ID : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                  CFG_ATI_REV_ID : 4;
		unsigned int                                 : 6;
		unsigned int                  CFG_VGA_IO_DIS : 1;
		unsigned int                  CFG_VGA_RAM_EN : 1;
		unsigned int                                 : 2;
		unsigned int                 APER_REG_ENDIAN : 2;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_MEMSIZE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 20;
		unsigned int                  CONFIG_MEMSIZE : 9;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                  CONFIG_MEMSIZE : 9;
		unsigned int                                 : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_APER_0_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 25;
		unsigned int                     APER_0_BASE : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                     APER_0_BASE : 7;
		unsigned int                                 : 25;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_APER_1_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 24;
		unsigned int                     APER_1_BASE : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                     APER_1_BASE : 8;
		unsigned int                                 : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_APER_SIZE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 24;
		unsigned int                       APER_SIZE : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                       APER_SIZE : 4;
		unsigned int                                 : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_REG_1_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 15;
		unsigned int               REG_APER_1_SELECT : 1;
		unsigned int                      REG_1_BASE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                      REG_1_BASE : 16;
		unsigned int               REG_APER_1_SELECT : 1;
		unsigned int                                 : 15;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_REG_APER_SIZE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   REG_APER_SIZE : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                   REG_APER_SIZE : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PAD_AGPINPUT_DELAY {
	struct {
#if		defined(qLittleEndian)
		unsigned int              PAD_AGPINPUT_DELAY : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int              PAD_AGPINPUT_DELAY : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PAD_CTLR_STRENGTH {
	struct {
#if		defined(qLittleEndian)
		unsigned int        PAD_N_STRENGTH_READ_BACK : 4;
		unsigned int        PAD_P_STRENGTH_READ_BACK : 4;
		unsigned int           PAD_N_MANUAL_STRENGTH : 4;
		unsigned int           PAD_P_MANUAL_STRENGTH : 4;
		unsigned int             PAD_MANUAL_OVERRIDE : 1;
		unsigned int                    PAD_TEST_OUT : 1;
		unsigned int                   PAD_DUMMY_OUT : 1;
		unsigned int                   PAD_HI_IO_DFR : 1;
		unsigned int                PAD_HI_IO_SCHMEN : 1;
		unsigned int                  PAD_HI_IO_DREN : 1;
		unsigned int                                 : 1;
		unsigned int                 PAD_HI_IO_VDIFF : 1;
		unsigned int          PAD_HI_IO_DFR_OVERRIDE : 1;
		unsigned int       PAD_HI_IO_SCHMEN_OVERRIDE : 1;
		unsigned int         PAD_HI_IO_DREN_OVERRIDE : 1;
		unsigned int                                 : 1;
		unsigned int        PAD_HI_IO_VDIFF_OVERRIDE : 1;
		unsigned int                 PAD_HI_IO_SLEWN : 1;
		unsigned int                 PAD_HI_IO_SLEWP : 1;
		unsigned int         PAD_HI_IO_SLEW_OVERRIDE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int         PAD_HI_IO_SLEW_OVERRIDE : 1;
		unsigned int                 PAD_HI_IO_SLEWP : 1;
		unsigned int                 PAD_HI_IO_SLEWN : 1;
		unsigned int        PAD_HI_IO_VDIFF_OVERRIDE : 1;
		unsigned int                                 : 1;
		unsigned int         PAD_HI_IO_DREN_OVERRIDE : 1;
		unsigned int       PAD_HI_IO_SCHMEN_OVERRIDE : 1;
		unsigned int          PAD_HI_IO_DFR_OVERRIDE : 1;
		unsigned int                 PAD_HI_IO_VDIFF : 1;
		unsigned int                                 : 1;
		unsigned int                  PAD_HI_IO_DREN : 1;
		unsigned int                PAD_HI_IO_SCHMEN : 1;
		unsigned int                   PAD_HI_IO_DFR : 1;
		unsigned int                   PAD_DUMMY_OUT : 1;
		unsigned int                    PAD_TEST_OUT : 1;
		unsigned int             PAD_MANUAL_OVERRIDE : 1;
		unsigned int           PAD_P_MANUAL_STRENGTH : 4;
		unsigned int           PAD_N_MANUAL_STRENGTH : 4;
		unsigned int        PAD_P_STRENGTH_READ_BACK : 4;
		unsigned int        PAD_N_STRENGTH_READ_BACK : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PAD_CTLR_UPDATE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PAD_UPDATE_RATE : 5;
		unsigned int                                 : 3;
		unsigned int                PAD_SAMPLE_DELAY : 5;
		unsigned int                                 : 3;
		unsigned int               PAD_INC_THRESHOLD : 5;
		unsigned int                                 : 3;
		unsigned int               PAD_DEC_THRESHOLD : 5;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int               PAD_DEC_THRESHOLD : 5;
		unsigned int                                 : 3;
		unsigned int               PAD_INC_THRESHOLD : 5;
		unsigned int                                 : 3;
		unsigned int                PAD_SAMPLE_DELAY : 5;
		unsigned int                                 : 3;
		unsigned int                 PAD_UPDATE_RATE : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FW_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      WBF_WM_MAX : 4;
		unsigned int                      WBF_WM_MIN : 4;
		unsigned int  DISCONNECT_W_DATA_STOPTRDY_MIN : 4;
		unsigned int DISCONNECT_WO_DATA_STOPTRDY_MIN : 4;
		unsigned int                    HOLD_FW_FIFO : 1;
		unsigned int                    FORCE_FW_WBF : 1;
		unsigned int                      DIS_FW_WBF : 1;
		unsigned int                 DISCONNECT_MODE : 2;
		unsigned int          DIS_WBF_WAIT_FOR_FRAME : 1;
		unsigned int        EN_TRDY_WAIT_FOR_FIFOAVL : 1;
		unsigned int                   TRDY_WS_COUNT : 4;
		unsigned int                 DIS_FW_ROTATION : 1;
		unsigned int                  FORCE_TRDY_1WS : 1;
		unsigned int             IGNORE_STRAP_FW_DIS : 1;
		unsigned int                         FW_MISC : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                         FW_MISC : 2;
		unsigned int             IGNORE_STRAP_FW_DIS : 1;
		unsigned int                  FORCE_TRDY_1WS : 1;
		unsigned int                 DIS_FW_ROTATION : 1;
		unsigned int                   TRDY_WS_COUNT : 4;
		unsigned int        EN_TRDY_WAIT_FOR_FIFOAVL : 1;
		unsigned int          DIS_WBF_WAIT_FOR_FRAME : 1;
		unsigned int                 DISCONNECT_MODE : 2;
		unsigned int                      DIS_FW_WBF : 1;
		unsigned int                    FORCE_FW_WBF : 1;
		unsigned int                    HOLD_FW_FIFO : 1;
		unsigned int DISCONNECT_WO_DATA_STOPTRDY_MIN : 4;
		unsigned int  DISCONNECT_W_DATA_STOPTRDY_MIN : 4;
		unsigned int                      WBF_WM_MIN : 4;
		unsigned int                      WBF_WM_MAX : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FW_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         FW_IDLE : 1;
		unsigned int                   STAT_FW_CLEAN : 1;
		unsigned int                                 : 25;
		unsigned int                         FW_WAVL : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                         FW_WAVL : 5;
		unsigned int                                 : 25;
		unsigned int                   STAT_FW_CLEAN : 1;
		unsigned int                         FW_IDLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MAX_IDLE_CLK : 8;
		unsigned int                    HOLD_RD_FIFO : 1;
		unsigned int                    HOLD_RQ_FIFO : 1;
		unsigned int                      EN_2X_STBB : 1;
		unsigned int                  FORCE_FULL_SBA : 1;
		unsigned int                         SBA_DIS : 1;
		unsigned int                      AGP_REV_ID : 1;
		unsigned int               REG_CRIPPLE_AGP4X : 1;
		unsigned int             REG_CRIPPLE_AGP2X4X : 1;
		unsigned int                  FORCE_INT_VREF : 1;
		unsigned int               PENDING_SLOTS_VAL : 2;
		unsigned int               PENDING_SLOTS_SEL : 1;
		unsigned int           EN_EXTENDED_AD_STB_2X : 1;
		unsigned int              DIS_QUEUED_GNT_FIX : 1;
		unsigned int         EN_RDATA2X4X_MULTIRESET : 1;
		unsigned int                      EN_RBFCALM : 1;
		unsigned int                  FORCE_EXT_VREF : 1;
		unsigned int                         DIS_RBF : 1;
		unsigned int              DELAY_FIRST_SBA_EN : 1;
		unsigned int             DELAY_FIRST_SBA_VAL : 3;
		unsigned int                        AGP_MISC : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                        AGP_MISC : 2;
		unsigned int             DELAY_FIRST_SBA_VAL : 3;
		unsigned int              DELAY_FIRST_SBA_EN : 1;
		unsigned int                         DIS_RBF : 1;
		unsigned int                  FORCE_EXT_VREF : 1;
		unsigned int                      EN_RBFCALM : 1;
		unsigned int         EN_RDATA2X4X_MULTIRESET : 1;
		unsigned int              DIS_QUEUED_GNT_FIX : 1;
		unsigned int           EN_EXTENDED_AD_STB_2X : 1;
		unsigned int               PENDING_SLOTS_SEL : 1;
		unsigned int               PENDING_SLOTS_VAL : 2;
		unsigned int                  FORCE_INT_VREF : 1;
		unsigned int             REG_CRIPPLE_AGP2X4X : 1;
		unsigned int               REG_CRIPPLE_AGP4X : 1;
		unsigned int                      AGP_REV_ID : 1;
		unsigned int                         SBA_DIS : 1;
		unsigned int                  FORCE_FULL_SBA : 1;
		unsigned int                      EN_2X_STBB : 1;
		unsigned int                    HOLD_RQ_FIFO : 1;
		unsigned int                    HOLD_RD_FIFO : 1;
		unsigned int                    MAX_IDLE_CLK : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BM_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int               BUS_MASTER_STATUS : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               BUS_MASTER_STATUS : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PAD_CTLR_MISC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int               PAD_HI_IO_PREAMPH : 1;
		unsigned int                                 : 23;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 23;
		unsigned int               PAD_HI_IO_PREAMPH : 1;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VENDOR_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       VENDOR_ID : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                       VENDOR_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEVICE_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DEVICE_ID : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                       DEVICE_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    IO_ACCESS_EN : 1;
		unsigned int                   MEM_ACCESS_EN : 1;
		unsigned int                   BUS_MASTER_EN : 1;
		unsigned int                SPECIAL_CYCLE_EN : 1;
		unsigned int         MEM_WRITE_INVALIDATE_EN : 1;
		unsigned int                    PAL_SNOOP_EN : 1;
		unsigned int                 PARITY_ERROR_EN : 1;
		unsigned int                     AD_STEPPING : 1;
		unsigned int                         SERR_EN : 1;
		unsigned int                     FAST_B2B_EN : 1;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                     FAST_B2B_EN : 1;
		unsigned int                         SERR_EN : 1;
		unsigned int                     AD_STEPPING : 1;
		unsigned int                 PARITY_ERROR_EN : 1;
		unsigned int                    PAL_SNOOP_EN : 1;
		unsigned int         MEM_WRITE_INVALIDATE_EN : 1;
		unsigned int                SPECIAL_CYCLE_EN : 1;
		unsigned int                   BUS_MASTER_EN : 1;
		unsigned int                   MEM_ACCESS_EN : 1;
		unsigned int                    IO_ACCESS_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                        CAP_LIST : 1;
		unsigned int                       PCI_66_EN : 1;
		unsigned int                          UDF_EN : 1;
		unsigned int               FAST_BACK_CAPABLE : 1;
		unsigned int                                 : 1;
		unsigned int                   DEVSEL_TIMING : 2;
		unsigned int             SIGNAL_TARGET_ABORT : 1;
		unsigned int           RECEIVED_TARGET_ABORT : 1;
		unsigned int           RECEIVED_MASTER_ABORT : 1;
		unsigned int           SIGNALED_SYSTEM_ERROR : 1;
		unsigned int           PARITY_ERROR_DETECTED : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int           PARITY_ERROR_DETECTED : 1;
		unsigned int           SIGNALED_SYSTEM_ERROR : 1;
		unsigned int           RECEIVED_MASTER_ABORT : 1;
		unsigned int           RECEIVED_TARGET_ABORT : 1;
		unsigned int             SIGNAL_TARGET_ABORT : 1;
		unsigned int                   DEVSEL_TIMING : 2;
		unsigned int                                 : 1;
		unsigned int               FAST_BACK_CAPABLE : 1;
		unsigned int                          UDF_EN : 1;
		unsigned int                       PCI_66_EN : 1;
		unsigned int                        CAP_LIST : 1;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union REVISION_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MINOR_REV_ID : 4;
		unsigned int                    MAJOR_REV_ID : 4;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    MAJOR_REV_ID : 4;
		unsigned int                    MINOR_REV_ID : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union REGPROG_INF {
	struct {
#if		defined(qLittleEndian)
		unsigned int              REG_LEVEL_PROG_INF : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              REG_LEVEL_PROG_INF : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUB_CLASS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 7;
		unsigned int                   SUB_CLASS_INF : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   SUB_CLASS_INF : 1;
		unsigned int                                 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BASE_CODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 BASE_CLASS_CODE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 BASE_CLASS_CODE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CACHE_LINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CACHE_LINE_SIZE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 CACHE_LINE_SIZE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union LATENCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   LATENCY_TIMER : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   LATENCY_TIMER : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HEADER {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     HEADER_TYPE : 7;
		unsigned int                     DEVICE_TYPE : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     DEVICE_TYPE : 1;
		unsigned int                     HEADER_TYPE : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BIST_COMP : 4;
		unsigned int                                 : 2;
		unsigned int                       BIST_STRT : 1;
		unsigned int                        BIST_CAP : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        BIST_CAP : 1;
		unsigned int                       BIST_STRT : 1;
		unsigned int                                 : 2;
		unsigned int                       BIST_COMP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                     PREFETCH_EN : 1;
		unsigned int                                 : 21;
		unsigned int                        MEM_BASE : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                        MEM_BASE : 7;
		unsigned int                                 : 21;
		unsigned int                     PREFETCH_EN : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IO_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BLOCK_IO_BIT : 8;
		unsigned int                         IO_BASE : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                         IO_BASE : 24;
		unsigned int                    BLOCK_IO_BIT : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union REG_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 16;
		unsigned int                        REG_BASE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                        REG_BASE : 16;
		unsigned int                                 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ADAPTER_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int             SUBSYSTEM_VENDOR_ID : 16;
		unsigned int                    SUBSYSTEM_ID : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SUBSYSTEM_ID : 16;
		unsigned int             SUBSYSTEM_VENDOR_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_ROM {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     BIOS_ROM_EN : 1;
		unsigned int                                 : 16;
		unsigned int                  BIOS_BASE_ADDR : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                  BIOS_BASE_ADDR : 15;
		unsigned int                                 : 16;
		unsigned int                     BIOS_ROM_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAPABILITIES_PTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         CAP_PTR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                         CAP_PTR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union INTERRUPT_LINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  INTERRUPT_LINE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  INTERRUPT_LINE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union INTERRUPT_PIN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   INTERRUPT_PIN : 1;
		unsigned int                                 : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 31;
		unsigned int                   INTERRUPT_PIN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MIN_GRANT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         MIN_GNT : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                         MIN_GNT : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MAX_LATENCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         MAX_LAT : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                         MAX_LAT : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ADAPTER_ID_W {
	struct {
#if		defined(qLittleEndian)
		unsigned int             SUBSYSTEM_VENDOR_ID : 16;
		unsigned int                    SUBSYSTEM_ID : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SUBSYSTEM_ID : 16;
		unsigned int             SUBSYSTEM_VENDOR_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PMI_CAP_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PMI_CAP_ID : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      PMI_CAP_ID : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PMI_NXT_CAP_PTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PMI_NXT_CAP_PTR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 PMI_NXT_CAP_PTR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PMI_PMC_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     PMI_VERSION : 3;
		unsigned int                   PMI_PME_CLOCK : 1;
		unsigned int                                 : 1;
		unsigned int           PMI_DEV_SPECIFIC_INIT : 1;
		unsigned int                                 : 3;
		unsigned int                  PMI_D1_SUPPORT : 1;
		unsigned int                  PMI_D2_SUPPORT : 1;
		unsigned int                 PMI_PME_SUPPORT : 5;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                 PMI_PME_SUPPORT : 5;
		unsigned int                  PMI_D2_SUPPORT : 1;
		unsigned int                  PMI_D1_SUPPORT : 1;
		unsigned int                                 : 3;
		unsigned int           PMI_DEV_SPECIFIC_INIT : 1;
		unsigned int                                 : 1;
		unsigned int                   PMI_PME_CLOCK : 1;
		unsigned int                     PMI_VERSION : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PM_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PMI_POWER_STATE : 2;
		unsigned int                                 : 6;
		unsigned int                      PMI_PME_EN : 1;
		unsigned int                 PMI_DATA_SELECT : 4;
		unsigned int                  PMI_DATA_SCALE : 2;
		unsigned int                  PMI_PME_STATUS : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                  PMI_PME_STATUS : 1;
		unsigned int                  PMI_DATA_SCALE : 2;
		unsigned int                 PMI_DATA_SELECT : 4;
		unsigned int                      PMI_PME_EN : 1;
		unsigned int                                 : 6;
		unsigned int                 PMI_POWER_STATE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PMI_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PMI_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        PMI_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_CAP_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          CAP_ID : 8;
		unsigned int                        NEXT_PTR : 8;
		unsigned int                       AGP_MINOR : 4;
		unsigned int                       AGP_MAJOR : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                       AGP_MAJOR : 4;
		unsigned int                       AGP_MINOR : 4;
		unsigned int                        NEXT_PTR : 8;
		unsigned int                          CAP_ID : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          RATE1X : 1;
		unsigned int                          RATE2X : 1;
		unsigned int                          RATE4X : 1;
		unsigned int                                 : 1;
		unsigned int                              FW : 1;
		unsigned int                         MODE_4G : 1;
		unsigned int                                 : 3;
		unsigned int                             SBA : 1;
		unsigned int                                 : 14;
		unsigned int                              RQ : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                              RQ : 8;
		unsigned int                                 : 14;
		unsigned int                             SBA : 1;
		unsigned int                                 : 3;
		unsigned int                         MODE_4G : 1;
		unsigned int                              FW : 1;
		unsigned int                                 : 1;
		unsigned int                          RATE4X : 1;
		unsigned int                          RATE2X : 1;
		unsigned int                          RATE1X : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATA_RATE : 3;
		unsigned int                                 : 1;
		unsigned int                           FW_EN : 1;
		unsigned int                      MODE_4G_EN : 1;
		unsigned int                                 : 2;
		unsigned int                          AGP_EN : 1;
		unsigned int                          SBA_EN : 1;
		unsigned int                                 : 14;
		unsigned int                        RQ_DEPTH : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RQ_DEPTH : 8;
		unsigned int                                 : 14;
		unsigned int                          SBA_EN : 1;
		unsigned int                          AGP_EN : 1;
		unsigned int                                 : 2;
		unsigned int                      MODE_4G_EN : 1;
		unsigned int                           FW_EN : 1;
		unsigned int                                 : 1;
		unsigned int                       DATA_RATE : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_VENDOR_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    F1_VENDOR_ID : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                    F1_VENDOR_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_DEVICE_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    F1_DEVICE_ID : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                    F1_DEVICE_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 F1_IO_ACCESS_EN : 1;
		unsigned int                F1_MEM_ACCESS_EN : 1;
		unsigned int                F1_BUS_MASTER_EN : 1;
		unsigned int                                 : 4;
		unsigned int                  F1_AD_STEPPING : 1;
		unsigned int                                 : 1;
		unsigned int                  F1_FAST_B2B_EN : 1;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                  F1_FAST_B2B_EN : 1;
		unsigned int                                 : 1;
		unsigned int                  F1_AD_STEPPING : 1;
		unsigned int                                 : 4;
		unsigned int                F1_BUS_MASTER_EN : 1;
		unsigned int                F1_MEM_ACCESS_EN : 1;
		unsigned int                 F1_IO_ACCESS_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                     F1_CAP_LIST : 1;
		unsigned int                    F1_PCI_66_EN : 1;
		unsigned int                       F1_UDF_EN : 1;
		unsigned int            F1_FAST_BACK_CAPABLE : 1;
		unsigned int                                 : 1;
		unsigned int                F1_DEVSEL_TIMING : 2;
		unsigned int          F1_SIGNAL_TARGET_ABORT : 1;
		unsigned int        F1_RECEIVED_TARGET_ABORT : 1;
		unsigned int        F1_RECEIVED_MASTER_ABORT : 1;
		unsigned int                                 : 1;
		unsigned int        F1_PARITY_ERROR_DETECTED : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int        F1_PARITY_ERROR_DETECTED : 1;
		unsigned int                                 : 1;
		unsigned int        F1_RECEIVED_MASTER_ABORT : 1;
		unsigned int        F1_RECEIVED_TARGET_ABORT : 1;
		unsigned int          F1_SIGNAL_TARGET_ABORT : 1;
		unsigned int                F1_DEVSEL_TIMING : 2;
		unsigned int                                 : 1;
		unsigned int            F1_FAST_BACK_CAPABLE : 1;
		unsigned int                       F1_UDF_EN : 1;
		unsigned int                    F1_PCI_66_EN : 1;
		unsigned int                     F1_CAP_LIST : 1;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_REVISION_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 F1_MINOR_REV_ID : 4;
		unsigned int                 F1_MAJOR_REV_ID : 4;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 F1_MAJOR_REV_ID : 4;
		unsigned int                 F1_MINOR_REV_ID : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_REGPROG_INF {
	struct {
#if		defined(qLittleEndian)
		unsigned int           F1_REG_LEVEL_PROG_INF : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int           F1_REG_LEVEL_PROG_INF : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_SUB_CLASS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 7;
		unsigned int                F1_SUB_CLASS_INF : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                F1_SUB_CLASS_INF : 1;
		unsigned int                                 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_BASE_CODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int              F1_BASE_CLASS_CODE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              F1_BASE_CLASS_CODE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_CACHE_LINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int              F1_CACHE_LINE_SIZE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              F1_CACHE_LINE_SIZE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_LATENCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                F1_LATENCY_TIMER : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                F1_LATENCY_TIMER : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_HEADER {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  F1_HEADER_TYPE : 7;
		unsigned int                  F1_DEVICE_TYPE : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  F1_DEVICE_TYPE : 1;
		unsigned int                  F1_HEADER_TYPE : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_BIST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    F1_BIST_COMP : 4;
		unsigned int                                 : 2;
		unsigned int                    F1_BIST_STRT : 1;
		unsigned int                     F1_BIST_CAP : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     F1_BIST_CAP : 1;
		unsigned int                    F1_BIST_STRT : 1;
		unsigned int                                 : 2;
		unsigned int                    F1_BIST_COMP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_MEM_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                  F1_PREFETCH_EN : 1;
		unsigned int                                 : 21;
		unsigned int                     F1_MEM_BASE : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                     F1_MEM_BASE : 7;
		unsigned int                                 : 21;
		unsigned int                  F1_PREFETCH_EN : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_REG_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 16;
		unsigned int                     F1_REG_BASE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                     F1_REG_BASE : 16;
		unsigned int                                 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_ADAPTER_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int          F1_SUBSYSTEM_VENDOR_ID : 16;
		unsigned int                 F1_SUBSYSTEM_ID : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                 F1_SUBSYSTEM_ID : 16;
		unsigned int          F1_SUBSYSTEM_VENDOR_ID : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_CAPABILITIES_PTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      F1_CAP_PTR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      F1_CAP_PTR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_INTERRUPT_LINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int               F1_INTERRUPT_LINE : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int               F1_INTERRUPT_LINE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_INTERRUPT_PIN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                F1_INTERRUPT_PIN : 1;
		unsigned int                                 : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 31;
		unsigned int                F1_INTERRUPT_PIN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_MIN_GRANT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      F1_MIN_GNT : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      F1_MIN_GNT : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_MAX_LATENCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      F1_MAX_LAT : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      F1_MAX_LAT : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_PMI_CAP_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   F1_PMI_CAP_ID : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   F1_PMI_CAP_ID : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_PMI_NXT_CAP_PTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int              F1_PMI_NXT_CAP_PTR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              F1_PMI_NXT_CAP_PTR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_PMI_PMC_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  F1_PMI_VERSION : 3;
		unsigned int                F1_PMI_PME_CLOCK : 1;
		unsigned int                                 : 1;
		unsigned int        F1_PMI_DEV_SPECIFIC_INIT : 1;
		unsigned int                                 : 3;
		unsigned int               F1_PMI_D1_SUPPORT : 1;
		unsigned int               F1_PMI_D2_SUPPORT : 1;
		unsigned int              F1_PMI_PME_SUPPORT : 5;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int              F1_PMI_PME_SUPPORT : 5;
		unsigned int               F1_PMI_D2_SUPPORT : 1;
		unsigned int               F1_PMI_D1_SUPPORT : 1;
		unsigned int                                 : 3;
		unsigned int        F1_PMI_DEV_SPECIFIC_INIT : 1;
		unsigned int                                 : 1;
		unsigned int                F1_PMI_PME_CLOCK : 1;
		unsigned int                  F1_PMI_VERSION : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_PM_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int              F1_PMI_POWER_STATE : 2;
		unsigned int                                 : 6;
		unsigned int                   F1_PMI_PME_EN : 1;
		unsigned int              F1_PMI_DATA_SELECT : 4;
		unsigned int               F1_PMI_DATA_SCALE : 2;
		unsigned int               F1_PMI_PME_STATUS : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int               F1_PMI_PME_STATUS : 1;
		unsigned int               F1_PMI_DATA_SCALE : 2;
		unsigned int              F1_PMI_DATA_SELECT : 4;
		unsigned int                   F1_PMI_PME_EN : 1;
		unsigned int                                 : 6;
		unsigned int              F1_PMI_POWER_STATE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_PMI_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     F1_PMI_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     F1_PMI_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_AGP_CAP_ID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       F1_CAP_ID : 8;
		unsigned int                     F1_NEXT_PTR : 8;
		unsigned int                    F1_AGP_MINOR : 4;
		unsigned int                    F1_AGP_MAJOR : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                    F1_AGP_MAJOR : 4;
		unsigned int                    F1_AGP_MINOR : 4;
		unsigned int                     F1_NEXT_PTR : 8;
		unsigned int                       F1_CAP_ID : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_AGP_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       F1_RATE1X : 1;
		unsigned int                       F1_RATE2X : 1;
		unsigned int                       F1_RATE4X : 1;
		unsigned int                                 : 1;
		unsigned int                           F1_FW : 1;
		unsigned int                      F1_MODE_4G : 1;
		unsigned int                                 : 3;
		unsigned int                          F1_SBA : 1;
		unsigned int                                 : 14;
		unsigned int                           F1_RQ : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                           F1_RQ : 8;
		unsigned int                                 : 14;
		unsigned int                          F1_SBA : 1;
		unsigned int                                 : 3;
		unsigned int                      F1_MODE_4G : 1;
		unsigned int                           F1_FW : 1;
		unsigned int                                 : 1;
		unsigned int                       F1_RATE4X : 1;
		unsigned int                       F1_RATE2X : 1;
		unsigned int                       F1_RATE1X : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union F1_AGP_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    F1_DATA_RATE : 3;
		unsigned int                                 : 1;
		unsigned int                        F1_FW_EN : 1;
		unsigned int                   F1_MODE_4G_EN : 1;
		unsigned int                                 : 2;
		unsigned int                       F1_AGP_EN : 1;
		unsigned int                       F1_SBA_EN : 1;
		unsigned int                                 : 14;
		unsigned int                     F1_RQ_DEPTH : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                     F1_RQ_DEPTH : 8;
		unsigned int                                 : 14;
		unsigned int                       F1_SBA_EN : 1;
		unsigned int                       F1_AGP_EN : 1;
		unsigned int                                 : 2;
		unsigned int                   F1_MODE_4G_EN : 1;
		unsigned int                        F1_FW_EN : 1;
		unsigned int                                 : 1;
		unsigned int                    F1_DATA_RATE : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_CTRL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    TRANSLATE_EN : 1;
		unsigned int      DIS_OUT_OF_PCI_GART_ACCESS : 1;
		unsigned int                      HW_1_DEBUG : 1;
		unsigned int                      HW_2_DEBUG : 1;
		unsigned int                      HW_3_DEBUG : 1;
		unsigned int                      HW_4_DEBUG : 1;
		unsigned int                      HW_5_DEBUG : 1;
		unsigned int                      HW_6_DEBUG : 1;
		unsigned int                      HW_7_DEBUG : 1;
		unsigned int                      HW_8_DEBUG : 1;
		unsigned int                      HW_9_DEBUG : 1;
		unsigned int                      HW_A_DEBUG : 1;
		unsigned int                      HW_B_DEBUG : 1;
		unsigned int                      HW_C_DEBUG : 1;
		unsigned int                      HW_D_DEBUG : 1;
		unsigned int                      HW_E_DEBUG : 1;
		unsigned int                      HW_F_DEBUG : 1;
		unsigned int                     HW_10_DEBUG : 1;
		unsigned int                     HW_11_DEBUG : 1;
		unsigned int                     HW_12_DEBUG : 1;
		unsigned int                     HW_13_DEBUG : 1;
		unsigned int                     HW_14_DEBUG : 1;
		unsigned int                     HW_15_DEBUG : 1;
		unsigned int                     HW_16_DEBUG : 1;
		unsigned int                     HW_17_DEBUG : 1;
		unsigned int                     HW_18_DEBUG : 1;
		unsigned int                     HW_19_DEBUG : 1;
		unsigned int                     HW_1A_DEBUG : 1;
		unsigned int                     HW_1B_DEBUG : 1;
		unsigned int                     HW_1C_DEBUG : 1;
		unsigned int                     HW_1D_DEBUG : 1;
		unsigned int                     HW_1E_DEBUG : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     HW_1E_DEBUG : 1;
		unsigned int                     HW_1D_DEBUG : 1;
		unsigned int                     HW_1C_DEBUG : 1;
		unsigned int                     HW_1B_DEBUG : 1;
		unsigned int                     HW_1A_DEBUG : 1;
		unsigned int                     HW_19_DEBUG : 1;
		unsigned int                     HW_18_DEBUG : 1;
		unsigned int                     HW_17_DEBUG : 1;
		unsigned int                     HW_16_DEBUG : 1;
		unsigned int                     HW_15_DEBUG : 1;
		unsigned int                     HW_14_DEBUG : 1;
		unsigned int                     HW_13_DEBUG : 1;
		unsigned int                     HW_12_DEBUG : 1;
		unsigned int                     HW_11_DEBUG : 1;
		unsigned int                     HW_10_DEBUG : 1;
		unsigned int                      HW_F_DEBUG : 1;
		unsigned int                      HW_E_DEBUG : 1;
		unsigned int                      HW_D_DEBUG : 1;
		unsigned int                      HW_C_DEBUG : 1;
		unsigned int                      HW_B_DEBUG : 1;
		unsigned int                      HW_A_DEBUG : 1;
		unsigned int                      HW_9_DEBUG : 1;
		unsigned int                      HW_8_DEBUG : 1;
		unsigned int                      HW_7_DEBUG : 1;
		unsigned int                      HW_6_DEBUG : 1;
		unsigned int                      HW_5_DEBUG : 1;
		unsigned int                      HW_4_DEBUG : 1;
		unsigned int                      HW_3_DEBUG : 1;
		unsigned int                      HW_2_DEBUG : 1;
		unsigned int                      HW_1_DEBUG : 1;
		unsigned int      DIS_OUT_OF_PCI_GART_ACCESS : 1;
		unsigned int                    TRANSLATE_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     AIC_TLB_VLD : 1;
		unsigned int                       AIC_STAT1 : 1;
		unsigned int                       AIC_STAT0 : 1;
		unsigned int                                 : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 29;
		unsigned int                       AIC_STAT0 : 1;
		unsigned int                       AIC_STAT1 : 1;
		unsigned int                     AIC_TLB_VLD : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_PT_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                     AIC_PT_BASE : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                     AIC_PT_BASE : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_LO_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                     AIC_LO_ADDR : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                     AIC_LO_ADDR : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_HI_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                     AIC_HI_ADDR : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                     AIC_HI_ADDR : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_TLB_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                    AIC_TLB_ADDR : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                    AIC_TLB_ADDR : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AIC_TLB_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                    AIC_TLB_DATA : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                    AIC_TLB_DATA : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENMO_WT {
	struct {
#if		defined(qLittleEndian)
		unsigned int            GENMO_MONO_ADDRESS_B : 1;
		unsigned int                      VGA_RAM_EN : 1;
		unsigned int                       VGA_CKSEL : 2;
		unsigned int                                 : 1;
		unsigned int               ODD_EVEN_MD_PGSEL : 1;
		unsigned int                   VGA_HSYNC_POL : 1;
		unsigned int                   VGA_VSYNC_POL : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   VGA_VSYNC_POL : 1;
		unsigned int                   VGA_HSYNC_POL : 1;
		unsigned int               ODD_EVEN_MD_PGSEL : 1;
		unsigned int                                 : 1;
		unsigned int                       VGA_CKSEL : 2;
		unsigned int                      VGA_RAM_EN : 1;
		unsigned int            GENMO_MONO_ADDRESS_B : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENMO_RD {
	struct {
#if		defined(qLittleEndian)
		unsigned int            GENMO_MONO_ADDRESS_B : 1;
		unsigned int                      VGA_RAM_EN : 1;
		unsigned int                       VGA_CKSEL : 2;
		unsigned int                                 : 1;
		unsigned int               ODD_EVEN_MD_PGSEL : 1;
		unsigned int                   VGA_HSYNC_POL : 1;
		unsigned int                   VGA_VSYNC_POL : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   VGA_VSYNC_POL : 1;
		unsigned int                   VGA_HSYNC_POL : 1;
		unsigned int               ODD_EVEN_MD_PGSEL : 1;
		unsigned int                                 : 1;
		unsigned int                       VGA_CKSEL : 2;
		unsigned int                      VGA_RAM_EN : 1;
		unsigned int            GENMO_MONO_ADDRESS_B : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DAC_RANGE_CNTL : 2;
		unsigned int                    DAC_BLANKING : 1;
		unsigned int                      DAC_CMP_EN : 1;
		unsigned int                   DAC_CMP_OUT_R : 1;
		unsigned int                   DAC_CMP_OUT_G : 1;
		unsigned int                   DAC_CMP_OUT_B : 1;
		unsigned int                  DAC_CMP_OUTPUT : 1;
		unsigned int                     DAC_8BIT_EN : 1;
		unsigned int              DAC_4BPP_PIX_ORDER : 1;
		unsigned int                                 : 3;
		unsigned int                  DAC_VGA_ADR_EN : 1;
		unsigned int                 DAC_EXPAND_MODE : 1;
		unsigned int                        DAC_PDWN : 1;
		unsigned int                       CRT_SENSE : 1;
		unsigned int                CRT_DETECTION_ON : 1;
		unsigned int                 DAC_CRC_CONT_EN : 1;
		unsigned int                      DAC_CRC_EN : 1;
		unsigned int                   DAC_CRC_FIELD : 1;
		unsigned int           DAC_LUT_COUNTER_LIMIT : 2;
		unsigned int                DAC_LUT_READ_SEL : 1;
		unsigned int                        DAC_MASK : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                        DAC_MASK : 8;
		unsigned int                DAC_LUT_READ_SEL : 1;
		unsigned int           DAC_LUT_COUNTER_LIMIT : 2;
		unsigned int                   DAC_CRC_FIELD : 1;
		unsigned int                      DAC_CRC_EN : 1;
		unsigned int                 DAC_CRC_CONT_EN : 1;
		unsigned int                CRT_DETECTION_ON : 1;
		unsigned int                       CRT_SENSE : 1;
		unsigned int                        DAC_PDWN : 1;
		unsigned int                 DAC_EXPAND_MODE : 1;
		unsigned int                  DAC_VGA_ADR_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DAC_4BPP_PIX_ORDER : 1;
		unsigned int                     DAC_8BIT_EN : 1;
		unsigned int                  DAC_CMP_OUTPUT : 1;
		unsigned int                   DAC_CMP_OUT_B : 1;
		unsigned int                   DAC_CMP_OUT_G : 1;
		unsigned int                   DAC_CMP_OUT_R : 1;
		unsigned int                      DAC_CMP_EN : 1;
		unsigned int                    DAC_BLANKING : 1;
		unsigned int                  DAC_RANGE_CNTL : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC_DBL_SCAN_EN : 1;
		unsigned int               CRTC_INTERLACE_EN : 1;
		unsigned int                                 : 2;
		unsigned int                  CRTC_C_SYNC_EN : 1;
		unsigned int                                 : 3;
		unsigned int                  CRTC_PIX_WIDTH : 4;
		unsigned int          CRTC_MODE9_COLOR_ORDER : 1;
		unsigned int                                 : 1;
		unsigned int              CRTC_BYPASS_LUT_EN : 1;
		unsigned int                    CRTC_ICON_EN : 1;
		unsigned int                     CRTC_CUR_EN : 1;
		unsigned int                 CRTC_VSTAT_MODE : 2;
		unsigned int                                 : 1;
		unsigned int                   CRTC_CUR_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                CRTC_EXT_DISP_EN : 1;
		unsigned int                         CRTC_EN : 1;
		unsigned int              CRTC_DISP_REQ_EN_B : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int              CRTC_DISP_REQ_EN_B : 1;
		unsigned int                         CRTC_EN : 1;
		unsigned int                CRTC_EXT_DISP_EN : 1;
		unsigned int                                 : 1;
		unsigned int                   CRTC_CUR_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                 CRTC_VSTAT_MODE : 2;
		unsigned int                     CRTC_CUR_EN : 1;
		unsigned int                    CRTC_ICON_EN : 1;
		unsigned int              CRTC_BYPASS_LUT_EN : 1;
		unsigned int                                 : 1;
		unsigned int          CRTC_MODE9_COLOR_ORDER : 1;
		unsigned int                  CRTC_PIX_WIDTH : 4;
		unsigned int                                 : 3;
		unsigned int                  CRTC_C_SYNC_EN : 1;
		unsigned int                                 : 2;
		unsigned int               CRTC_INTERLACE_EN : 1;
		unsigned int                CRTC_DBL_SCAN_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                MEM_NUM_CHANNELS : 1;
		unsigned int                MC_USE_B_CH_ONLY : 1;
		unsigned int                      DISABLE_AP : 1;
		unsigned int             MEM_CHANNEL_MAPPING : 1;
		unsigned int              MEM_BANK_MAPPING_A : 4;
		unsigned int              MEM_ADDR_MAPPING_A : 8;
		unsigned int                                 : 4;
		unsigned int              MEM_BANK_MAPPING_B : 4;
		unsigned int              MEM_ADDR_MAPPING_B : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int              MEM_ADDR_MAPPING_B : 8;
		unsigned int              MEM_BANK_MAPPING_B : 4;
		unsigned int                                 : 4;
		unsigned int              MEM_ADDR_MAPPING_A : 8;
		unsigned int              MEM_BANK_MAPPING_A : 4;
		unsigned int             MEM_CHANNEL_MAPPING : 1;
		unsigned int                      DISABLE_AP : 1;
		unsigned int                MC_USE_B_CH_ONLY : 1;
		unsigned int                MEM_NUM_CHANNELS : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_TIMING_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        MEM_TRCD : 3;
		unsigned int                                 : 1;
		unsigned int                       MEM_TRCDW : 3;
		unsigned int                                 : 1;
		unsigned int                         MEM_TRP : 3;
		unsigned int                                 : 1;
		unsigned int                        MEM_TRAS : 4;
		unsigned int                        MEM_TRRD : 2;
		unsigned int                        MEM_TR2W : 2;
		unsigned int                         MEM_TWR : 3;
		unsigned int                                 : 1;
		unsigned int                        MEM_TW2R : 3;
		unsigned int              MEM_TW2R_SAME_BANK : 1;
		unsigned int                        MEM_TR2R : 2;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                        MEM_TR2R : 2;
		unsigned int              MEM_TW2R_SAME_BANK : 1;
		unsigned int                        MEM_TW2R : 3;
		unsigned int                                 : 1;
		unsigned int                         MEM_TWR : 3;
		unsigned int                        MEM_TR2W : 2;
		unsigned int                        MEM_TRRD : 2;
		unsigned int                        MEM_TRAS : 4;
		unsigned int                                 : 1;
		unsigned int                         MEM_TRP : 3;
		unsigned int                                 : 1;
		unsigned int                       MEM_TRCDW : 3;
		unsigned int                                 : 1;
		unsigned int                        MEM_TRCD : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_AGP_LOCATION {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MC_AGP_START : 16;
		unsigned int                      MC_AGP_TOP : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                      MC_AGP_TOP : 16;
		unsigned int                    MC_AGP_START : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_REFRESH_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                MEM_REFRESH_RATE : 8;
		unsigned int                 MEM_REFRESH_DIS : 1;
		unsigned int                 MEM_DYNAMIC_CKE : 1;
		unsigned int                                 : 2;
		unsigned int                        MEM_TRFC : 4;
		unsigned int                MEM_CLKA0_ENABLE : 1;
		unsigned int               MEM_CLKA0b_ENABLE : 1;
		unsigned int                MEM_CLKA1_ENABLE : 1;
		unsigned int               MEM_CLKA1b_ENABLE : 1;
		unsigned int               MEM_CLKAFB_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int                 DLL_FB_SLCT_CKA : 2;
		unsigned int                MEM_CLKB0_ENABLE : 1;
		unsigned int               MEM_CLKB0b_ENABLE : 1;
		unsigned int                MEM_CLKB1_ENABLE : 1;
		unsigned int               MEM_CLKB1b_ENABLE : 1;
		unsigned int               MEM_CLKBFB_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int                 DLL_FB_SLCT_CKB : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 DLL_FB_SLCT_CKB : 2;
		unsigned int                                 : 1;
		unsigned int               MEM_CLKBFB_ENABLE : 1;
		unsigned int               MEM_CLKB1b_ENABLE : 1;
		unsigned int                MEM_CLKB1_ENABLE : 1;
		unsigned int               MEM_CLKB0b_ENABLE : 1;
		unsigned int                MEM_CLKB0_ENABLE : 1;
		unsigned int                 DLL_FB_SLCT_CKA : 2;
		unsigned int                                 : 1;
		unsigned int               MEM_CLKAFB_ENABLE : 1;
		unsigned int               MEM_CLKA1b_ENABLE : 1;
		unsigned int                MEM_CLKA1_ENABLE : 1;
		unsigned int               MEM_CLKA0b_ENABLE : 1;
		unsigned int                MEM_CLKA0_ENABLE : 1;
		unsigned int                        MEM_TRFC : 4;
		unsigned int                                 : 2;
		unsigned int                 MEM_DYNAMIC_CKE : 1;
		unsigned int                 MEM_REFRESH_DIS : 1;
		unsigned int                MEM_REFRESH_RATE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_INIT_LATENCY_TIMER {
	struct {
#if		defined(qLittleEndian)
		unsigned int               MEM_RB0R_INIT_LAT : 4;
		unsigned int               MEM_RB1R_INIT_LAT : 4;
		unsigned int                MEM_PPR_INIT_LAT : 4;
		unsigned int              MEM_DISPR_INIT_LAT : 4;
		unsigned int               MEM_RB0W_INIT_LAT : 4;
		unsigned int               MEM_RB1W_INIT_LAT : 4;
		unsigned int              MEM_FIXED_INIT_LAT : 4;
		unsigned int                  SAME_PAGE_PRIO : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                  SAME_PAGE_PRIO : 3;
		unsigned int              MEM_FIXED_INIT_LAT : 4;
		unsigned int               MEM_RB1W_INIT_LAT : 4;
		unsigned int               MEM_RB0W_INIT_LAT : 4;
		unsigned int              MEM_DISPR_INIT_LAT : 4;
		unsigned int                MEM_PPR_INIT_LAT : 4;
		unsigned int               MEM_RB1R_INIT_LAT : 4;
		unsigned int               MEM_RB0R_INIT_LAT : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_SDRAM_MODE_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MEM_MODE_REG : 15;
		unsigned int                                 : 1;
		unsigned int                  MEM_WR_LATENCY : 4;
		unsigned int                 MEM_CAS_LATENCY : 3;
		unsigned int                 MEM_CMD_LATENCY : 1;
		unsigned int                 MEM_STR_LATENCY : 1;
		unsigned int                MEM_FALL_OUT_CMD : 1;
		unsigned int               MEM_FALL_OUT_DATA : 1;
		unsigned int                MEM_FALL_OUT_STR : 1;
		unsigned int                MC_INIT_COMPLETE : 1;
		unsigned int                     MEM_DDR_DLL : 1;
		unsigned int                    MEM_CFG_TYPE : 1;
		unsigned int                 MEM_SDRAM_RESET : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                 MEM_SDRAM_RESET : 1;
		unsigned int                    MEM_CFG_TYPE : 1;
		unsigned int                     MEM_DDR_DLL : 1;
		unsigned int                MC_INIT_COMPLETE : 1;
		unsigned int                MEM_FALL_OUT_STR : 1;
		unsigned int               MEM_FALL_OUT_DATA : 1;
		unsigned int                MEM_FALL_OUT_CMD : 1;
		unsigned int                 MEM_STR_LATENCY : 1;
		unsigned int                 MEM_CMD_LATENCY : 1;
		unsigned int                 MEM_CAS_LATENCY : 3;
		unsigned int                  MEM_WR_LATENCY : 4;
		unsigned int                                 : 1;
		unsigned int                    MEM_MODE_REG : 15;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   AGP_BASE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   AGP_BASE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_READ_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              MEM_RBS_POSITION_A : 3;
		unsigned int                   MEM_STR_SEL_A : 1;
		unsigned int             MEM_ERST_POSITION_A : 3;
		unsigned int               MEM_ERST_EXTEND_A : 1;
		unsigned int            MEM_QSREC_POSITION_A : 3;
		unsigned int              MEM_QSREC_EXTEND_A : 1;
		unsigned int                 MEM_ERST_SYNC_A : 1;
		unsigned int                MEM_QSREC_SYNC_A : 1;
		unsigned int             MEM_READ_STR_FALL_A : 1;
		unsigned int                                 : 1;
		unsigned int              MEM_RBS_POSITION_B : 3;
		unsigned int                   MEM_STR_SEL_B : 1;
		unsigned int             MEM_ERST_POSITION_B : 3;
		unsigned int               MEM_ERST_EXTEND_B : 1;
		unsigned int            MEM_QSREC_POSITION_B : 3;
		unsigned int              MEM_QSREC_EXTEND_B : 1;
		unsigned int                 MEM_ERST_SYNC_B : 1;
		unsigned int                MEM_QSREC_SYNC_B : 1;
		unsigned int             MEM_READ_STR_FALL_B : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int             MEM_READ_STR_FALL_B : 1;
		unsigned int                MEM_QSREC_SYNC_B : 1;
		unsigned int                 MEM_ERST_SYNC_B : 1;
		unsigned int              MEM_QSREC_EXTEND_B : 1;
		unsigned int            MEM_QSREC_POSITION_B : 3;
		unsigned int               MEM_ERST_EXTEND_B : 1;
		unsigned int             MEM_ERST_POSITION_B : 3;
		unsigned int                   MEM_STR_SEL_B : 1;
		unsigned int              MEM_RBS_POSITION_B : 3;
		unsigned int                                 : 1;
		unsigned int             MEM_READ_STR_FALL_A : 1;
		unsigned int                MEM_QSREC_SYNC_A : 1;
		unsigned int                 MEM_ERST_SYNC_A : 1;
		unsigned int              MEM_QSREC_EXTEND_A : 1;
		unsigned int            MEM_QSREC_POSITION_A : 3;
		unsigned int               MEM_ERST_EXTEND_A : 1;
		unsigned int             MEM_ERST_POSITION_A : 3;
		unsigned int                   MEM_STR_SEL_A : 1;
		unsigned int              MEM_RBS_POSITION_A : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int          IGNORE_RW_PENALTY_RB0R : 1;
		unsigned int          IGNORE_RW_PENALTY_RB1R : 1;
		unsigned int          IGNORE_RW_PENALTY_RB0W : 1;
		unsigned int          IGNORE_RW_PENALTY_RB1W : 1;
		unsigned int         IGNORE_RW_PENALTY_DISPR : 1;
		unsigned int           IGNORE_RW_PENALTY_PPR : 1;
		unsigned int         IGNORE_RW_PENALTY_FIXED : 1;
		unsigned int                                 : 1;
		unsigned int               MEM_VIPW_PRIORITY : 2;
		unsigned int                 EN_AIC_IDLE_DET : 1;
		unsigned int                 MEM_MC_BLACKOUT : 1;
		unsigned int          DISABLE_TEE_SM_CHANGES : 1;
		unsigned int          IMP_N_VALUE_DQS_R_BACK : 4;
		unsigned int          IMP_P_VALUE_DQS_R_BACK : 4;
		unsigned int                      MC_BIST_EN : 1;
		unsigned int                        MC_DEBUG : 10;
#else		/* !defined(qLittleEndian) */
		unsigned int                        MC_DEBUG : 10;
		unsigned int                      MC_BIST_EN : 1;
		unsigned int          IMP_P_VALUE_DQS_R_BACK : 4;
		unsigned int          IMP_N_VALUE_DQS_R_BACK : 4;
		unsigned int          DISABLE_TEE_SM_CHANGES : 1;
		unsigned int                 MEM_MC_BLACKOUT : 1;
		unsigned int                 EN_AIC_IDLE_DET : 1;
		unsigned int               MEM_VIPW_PRIORITY : 2;
		unsigned int                                 : 1;
		unsigned int         IGNORE_RW_PENALTY_FIXED : 1;
		unsigned int           IGNORE_RW_PENALTY_PPR : 1;
		unsigned int         IGNORE_RW_PENALTY_DISPR : 1;
		unsigned int          IGNORE_RW_PENALTY_RB1W : 1;
		unsigned int          IGNORE_RW_PENALTY_RB0W : 1;
		unsigned int          IGNORE_RW_PENALTY_RB1R : 1;
		unsigned int          IGNORE_RW_PENALTY_RB0R : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int               MEM_PWRUP_COMPL_A : 1;
		unsigned int               MEM_PWRUP_COMPL_B : 1;
		unsigned int                         MC_IDLE : 1;
		unsigned int              IMP_N_VALUE_R_BACK : 4;
		unsigned int              IMP_P_VALUE_R_BACK : 4;
		unsigned int                 TEST_OUT_R_BACK : 1;
		unsigned int                DUMMY_OUT_R_BACK : 1;
		unsigned int            IMP_N_VALUE_A_R_BACK : 4;
		unsigned int            IMP_P_VALUE_A_R_BACK : 4;
		unsigned int           IMP_N_VALUE_CK_R_BACK : 4;
		unsigned int           IMP_P_VALUE_CK_R_BACK : 4;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int           IMP_P_VALUE_CK_R_BACK : 4;
		unsigned int           IMP_N_VALUE_CK_R_BACK : 4;
		unsigned int            IMP_P_VALUE_A_R_BACK : 4;
		unsigned int            IMP_N_VALUE_A_R_BACK : 4;
		unsigned int                DUMMY_OUT_R_BACK : 1;
		unsigned int                 TEST_OUT_R_BACK : 1;
		unsigned int              IMP_P_VALUE_R_BACK : 4;
		unsigned int              IMP_N_VALUE_R_BACK : 4;
		unsigned int                         MC_IDLE : 1;
		unsigned int               MEM_PWRUP_COMPL_B : 1;
		unsigned int               MEM_PWRUP_COMPL_A : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_CHP_IO_OE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                DQ_OE_POSITION_A : 2;
		unsigned int                QS_OE_POSITION_A : 2;
		unsigned int                  DQ_OE_EXTEND_A : 1;
		unsigned int                  QS_OE_EXTEND_A : 1;
		unsigned int                 DQ_OE_ADVANCE_A : 1;
		unsigned int                 QS_OE_ADVANCE_A : 1;
		unsigned int              DQS_DRIVER_SLCT_A0 : 1;
		unsigned int              DQS_DRIVER_SLCT_A1 : 1;
		unsigned int              DQS_DRIVER_SLCT_A2 : 1;
		unsigned int              DQS_DRIVER_SLCT_A3 : 1;
		unsigned int                MEM_SDR_STROBE_A : 2;
		unsigned int                                 : 2;
		unsigned int                DQ_OE_POSITION_B : 2;
		unsigned int                QS_OE_POSITION_B : 2;
		unsigned int                  DQ_OE_EXTEND_B : 1;
		unsigned int                  QS_OE_EXTEND_B : 1;
		unsigned int                 DQ_OE_ADVANCE_B : 1;
		unsigned int                 QS_OE_ADVANCE_B : 1;
		unsigned int              DQS_DRIVER_SLCT_B0 : 1;
		unsigned int              DQS_DRIVER_SLCT_B1 : 1;
		unsigned int              DQS_DRIVER_SLCT_B2 : 1;
		unsigned int              DQS_DRIVER_SLCT_B3 : 1;
		unsigned int                MEM_SDR_STROBE_B : 2;
		unsigned int             MEM_PM_SDRAM_TRI_EN : 1;
		unsigned int                 MEM_IO_TRISTATE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                 MEM_IO_TRISTATE : 1;
		unsigned int             MEM_PM_SDRAM_TRI_EN : 1;
		unsigned int                MEM_SDR_STROBE_B : 2;
		unsigned int              DQS_DRIVER_SLCT_B3 : 1;
		unsigned int              DQS_DRIVER_SLCT_B2 : 1;
		unsigned int              DQS_DRIVER_SLCT_B1 : 1;
		unsigned int              DQS_DRIVER_SLCT_B0 : 1;
		unsigned int                 QS_OE_ADVANCE_B : 1;
		unsigned int                 DQ_OE_ADVANCE_B : 1;
		unsigned int                  QS_OE_EXTEND_B : 1;
		unsigned int                  DQ_OE_EXTEND_B : 1;
		unsigned int                QS_OE_POSITION_B : 2;
		unsigned int                DQ_OE_POSITION_B : 2;
		unsigned int                                 : 2;
		unsigned int                MEM_SDR_STROBE_A : 2;
		unsigned int              DQS_DRIVER_SLCT_A3 : 1;
		unsigned int              DQS_DRIVER_SLCT_A2 : 1;
		unsigned int              DQS_DRIVER_SLCT_A1 : 1;
		unsigned int              DQS_DRIVER_SLCT_A0 : 1;
		unsigned int                 QS_OE_ADVANCE_A : 1;
		unsigned int                 DQ_OE_ADVANCE_A : 1;
		unsigned int                  QS_OE_EXTEND_A : 1;
		unsigned int                  DQ_OE_EXTEND_A : 1;
		unsigned int                QS_OE_POSITION_A : 2;
		unsigned int                DQ_OE_POSITION_A : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_BASE_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 AGP_BASE_ADDR_2 : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                 AGP_BASE_ADDR_2 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_IND_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     MC_IND_ADDR : 5;
		unsigned int                                 : 3;
		unsigned int                    MC_IND_WR_EN : 1;
		unsigned int                                 : 23;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 23;
		unsigned int                    MC_IND_WR_EN : 1;
		unsigned int                                 : 3;
		unsigned int                     MC_IND_ADDR : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_IND_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     MC_IND_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     MC_IND_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  MONITOR_PERIOD : 16;
		unsigned int                                 : 14;
		unsigned int                        CLR_PERF : 1;
		unsigned int                         EN_PERF : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         EN_PERF : 1;
		unsigned int                        CLR_PERF : 1;
		unsigned int                                 : 14;
		unsigned int                  MONITOR_PERIOD : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_SEL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PERFSEL0 : 4;
		unsigned int                        PERFSEL1 : 4;
		unsigned int                        PERFSEL2 : 4;
		unsigned int                        PERFSEL3 : 4;
		unsigned int                     MEMCH_A_SEL : 4;
		unsigned int                     MEMCH_B_SEL : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     MEMCH_B_SEL : 4;
		unsigned int                     MEMCH_A_SEL : 4;
		unsigned int                        PERFSEL3 : 4;
		unsigned int                        PERFSEL2 : 4;
		unsigned int                        PERFSEL1 : 4;
		unsigned int                        PERFSEL0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_REGION_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                            SIZE : 12;
		unsigned int                         ADDRESS : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                         ADDRESS : 20;
		unsigned int                            SIZE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_REGION_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                            SIZE : 12;
		unsigned int                         ADDRESS : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                         ADDRESS : 20;
		unsigned int                            SIZE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_MEMCH_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int             PERF_COUNT_MEM_CH_A : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             PERF_COUNT_MEM_CH_A : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_PERF_COUNT_MEMCH_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int             PERF_COUNT_MEM_CH_B : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             PERF_COUNT_MEM_CH_B : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_IMP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              MEM_IO_UPDATE_RATE : 5;
		unsigned int             MEM_IO_SAMPLE_DELAY : 5;
		unsigned int            MEM_IO_INC_THRESHOLD : 5;
		unsigned int            MEM_IO_DEC_THRESHOLD : 5;
		unsigned int       MEM_IO_MANUAL_OVERRIDE_CK : 1;
		unsigned int        MEM_IO_MANUAL_OVERRIDE_A : 1;
		unsigned int      MEM_IO_MANUAL_OVERRIDE_DQM : 1;
		unsigned int      MEM_IO_MANUAL_OVERRIDE_DQS : 1;
		unsigned int                    MEM_IO_SLEWN : 1;
		unsigned int                    MEM_IO_SLEWP : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                    MEM_IO_SLEWP : 1;
		unsigned int                    MEM_IO_SLEWN : 1;
		unsigned int      MEM_IO_MANUAL_OVERRIDE_DQS : 1;
		unsigned int      MEM_IO_MANUAL_OVERRIDE_DQM : 1;
		unsigned int        MEM_IO_MANUAL_OVERRIDE_A : 1;
		unsigned int       MEM_IO_MANUAL_OVERRIDE_CK : 1;
		unsigned int            MEM_IO_DEC_THRESHOLD : 5;
		unsigned int            MEM_IO_INC_THRESHOLD : 5;
		unsigned int             MEM_IO_SAMPLE_DELAY : 5;
		unsigned int              MEM_IO_UPDATE_RATE : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_CHP_IO_CNTL_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       MEM_N_CKA : 4;
		unsigned int                        MEM_N_AA : 4;
		unsigned int                      MEM_N_DQMA : 4;
		unsigned int                      MEM_N_DQSA : 4;
		unsigned int                       MEM_P_CKA : 4;
		unsigned int                        MEM_P_AA : 4;
		unsigned int                      MEM_P_DQMA : 4;
		unsigned int                      MEM_P_DQSA : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                      MEM_P_DQSA : 4;
		unsigned int                      MEM_P_DQMA : 4;
		unsigned int                        MEM_P_AA : 4;
		unsigned int                       MEM_P_CKA : 4;
		unsigned int                      MEM_N_DQSA : 4;
		unsigned int                      MEM_N_DQMA : 4;
		unsigned int                        MEM_N_AA : 4;
		unsigned int                       MEM_N_CKA : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_CHP_IO_CNTL_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MEM_SLEWN_CKA : 1;
		unsigned int                    MEM_SLEWN_AA : 1;
		unsigned int                  MEM_SLEWN_DQMA : 1;
		unsigned int                  MEM_SLEWN_DQSA : 1;
		unsigned int                   MEM_SLEWP_CKA : 1;
		unsigned int                    MEM_SLEWP_AA : 1;
		unsigned int                  MEM_SLEWP_DQMA : 1;
		unsigned int                  MEM_SLEWP_DQSA : 1;
		unsigned int                   MEM_PREAMP_AA : 1;
		unsigned int                 MEM_PREAMP_DQMA : 1;
		unsigned int                 MEM_PREAMP_DQSA : 1;
		unsigned int                                 : 1;
		unsigned int                    MEM_IO_MODEA : 2;
		unsigned int                     MEM_REC_CKA : 2;
		unsigned int                      MEM_REC_AA : 2;
		unsigned int                    MEM_REC_DQMA : 2;
		unsigned int                    MEM_REC_DQSA : 2;
		unsigned int                 MEM_SYNC_PHASEA : 1;
		unsigned int                MEM_SYNC_CENTERA : 1;
		unsigned int                    MEM_SYNC_ENA : 2;
		unsigned int                    MEM_CLK_SELA : 2;
		unsigned int                    MEM_CLK_INVA : 1;
		unsigned int                                 : 1;
		unsigned int                MEM_DATA_ENIMP_A : 1;
		unsigned int                MEM_CNTL_ENIMP_A : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                MEM_CNTL_ENIMP_A : 1;
		unsigned int                MEM_DATA_ENIMP_A : 1;
		unsigned int                                 : 1;
		unsigned int                    MEM_CLK_INVA : 1;
		unsigned int                    MEM_CLK_SELA : 2;
		unsigned int                    MEM_SYNC_ENA : 2;
		unsigned int                MEM_SYNC_CENTERA : 1;
		unsigned int                 MEM_SYNC_PHASEA : 1;
		unsigned int                    MEM_REC_DQSA : 2;
		unsigned int                    MEM_REC_DQMA : 2;
		unsigned int                      MEM_REC_AA : 2;
		unsigned int                     MEM_REC_CKA : 2;
		unsigned int                    MEM_IO_MODEA : 2;
		unsigned int                                 : 1;
		unsigned int                 MEM_PREAMP_DQSA : 1;
		unsigned int                 MEM_PREAMP_DQMA : 1;
		unsigned int                   MEM_PREAMP_AA : 1;
		unsigned int                  MEM_SLEWP_DQSA : 1;
		unsigned int                  MEM_SLEWP_DQMA : 1;
		unsigned int                    MEM_SLEWP_AA : 1;
		unsigned int                   MEM_SLEWP_CKA : 1;
		unsigned int                  MEM_SLEWN_DQSA : 1;
		unsigned int                  MEM_SLEWN_DQMA : 1;
		unsigned int                    MEM_SLEWN_AA : 1;
		unsigned int                   MEM_SLEWN_CKA : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_CHP_IO_CNTL_B0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       MEM_N_CKB : 4;
		unsigned int                        MEM_N_AB : 4;
		unsigned int                      MEM_N_DQMB : 4;
		unsigned int                      MEM_N_DQSB : 4;
		unsigned int                       MEM_P_CKB : 4;
		unsigned int                        MEM_P_AB : 4;
		unsigned int                      MEM_P_DQMB : 4;
		unsigned int                      MEM_P_DQSB : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                      MEM_P_DQSB : 4;
		unsigned int                      MEM_P_DQMB : 4;
		unsigned int                        MEM_P_AB : 4;
		unsigned int                       MEM_P_CKB : 4;
		unsigned int                      MEM_N_DQSB : 4;
		unsigned int                      MEM_N_DQMB : 4;
		unsigned int                        MEM_N_AB : 4;
		unsigned int                       MEM_N_CKB : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_CHP_IO_CNTL_B1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MEM_SLEWN_CKB : 1;
		unsigned int                    MEM_SLEWN_AB : 1;
		unsigned int                  MEM_SLEWN_DQMB : 1;
		unsigned int                  MEM_SLEWN_DQSB : 1;
		unsigned int                   MEM_SLEWP_CKB : 1;
		unsigned int                    MEM_SLEWP_AB : 1;
		unsigned int                  MEM_SLEWP_DQMB : 1;
		unsigned int                  MEM_SLEWP_DQSB : 1;
		unsigned int                   MEM_PREAMP_AB : 1;
		unsigned int                 MEM_PREAMP_DQMB : 1;
		unsigned int                 MEM_PREAMP_DQSB : 1;
		unsigned int                                 : 1;
		unsigned int                    MEM_IO_MODEB : 2;
		unsigned int                     MEM_REC_CKB : 2;
		unsigned int                      MEM_REC_AB : 2;
		unsigned int                    MEM_REC_DQMB : 2;
		unsigned int                    MEM_REC_DQSB : 2;
		unsigned int                 MEM_SYNC_PHASEB : 1;
		unsigned int                MEM_SYNC_CENTERB : 1;
		unsigned int                    MEM_SYNC_ENB : 2;
		unsigned int                    MEM_CLK_SELB : 2;
		unsigned int                    MEM_CLK_INVB : 1;
		unsigned int                                 : 1;
		unsigned int                MEM_DATA_ENIMP_B : 1;
		unsigned int                MEM_CNTL_ENIMP_B : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                MEM_CNTL_ENIMP_B : 1;
		unsigned int                MEM_DATA_ENIMP_B : 1;
		unsigned int                                 : 1;
		unsigned int                    MEM_CLK_INVB : 1;
		unsigned int                    MEM_CLK_SELB : 2;
		unsigned int                    MEM_SYNC_ENB : 2;
		unsigned int                MEM_SYNC_CENTERB : 1;
		unsigned int                 MEM_SYNC_PHASEB : 1;
		unsigned int                    MEM_REC_DQSB : 2;
		unsigned int                    MEM_REC_DQMB : 2;
		unsigned int                      MEM_REC_AB : 2;
		unsigned int                     MEM_REC_CKB : 2;
		unsigned int                    MEM_IO_MODEB : 2;
		unsigned int                                 : 1;
		unsigned int                 MEM_PREAMP_DQSB : 1;
		unsigned int                 MEM_PREAMP_DQMB : 1;
		unsigned int                   MEM_PREAMP_AB : 1;
		unsigned int                  MEM_SLEWP_DQSB : 1;
		unsigned int                  MEM_SLEWP_DQMB : 1;
		unsigned int                    MEM_SLEWP_AB : 1;
		unsigned int                   MEM_SLEWP_CKB : 1;
		unsigned int                  MEM_SLEWN_DQSB : 1;
		unsigned int                  MEM_SLEWN_DQMB : 1;
		unsigned int                    MEM_SLEWN_AB : 1;
		unsigned int                   MEM_SLEWN_CKB : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_IMP_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MEM_STEP_N_A : 2;
		unsigned int                                 : 1;
		unsigned int                   MEM_STEP_N_CK : 2;
		unsigned int                                 : 1;
		unsigned int                  MEM_STEP_N_DQS : 2;
		unsigned int                                 : 1;
		unsigned int                    MEM_STEP_P_A : 2;
		unsigned int                                 : 1;
		unsigned int                   MEM_STEP_P_CK : 2;
		unsigned int                                 : 1;
		unsigned int                  MEM_STEP_P_DQS : 2;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                  MEM_STEP_P_DQS : 2;
		unsigned int                                 : 1;
		unsigned int                   MEM_STEP_P_CK : 2;
		unsigned int                                 : 1;
		unsigned int                    MEM_STEP_P_A : 2;
		unsigned int                                 : 1;
		unsigned int                  MEM_STEP_N_DQS : 2;
		unsigned int                                 : 1;
		unsigned int                   MEM_STEP_N_CK : 2;
		unsigned int                                 : 1;
		unsigned int                    MEM_STEP_N_A : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TC_MISMATCH_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   TC_MISMATCH_1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   TC_MISMATCH_1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TC_MISMATCH_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   TC_MISMATCH_2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   TC_MISMATCH_2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_BIST_CTRL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MC_BIST_CTRL : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    MC_BIST_CTRL : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union REG_COLLAR_WRITE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                REG_COLLAR_WRITE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                REG_COLLAR_WRITE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union REG_COLLAR_READ {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 REG_COLLAR_READ : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REG_COLLAR_READ : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MC_FB_LOCATION {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     MC_FB_START : 16;
		unsigned int                       MC_FB_TOP : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                       MC_FB_TOP : 16;
		unsigned int                     MC_FB_START : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA00 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 GRPH_SET_RESET0 : 1;
		unsigned int                 GRPH_SET_RESET1 : 1;
		unsigned int                 GRPH_SET_RESET2 : 1;
		unsigned int                 GRPH_SET_RESET3 : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                 GRPH_SET_RESET3 : 1;
		unsigned int                 GRPH_SET_RESET2 : 1;
		unsigned int                 GRPH_SET_RESET1 : 1;
		unsigned int                 GRPH_SET_RESET0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA01 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             GRPH_SET_RESET_ENA0 : 1;
		unsigned int             GRPH_SET_RESET_ENA1 : 1;
		unsigned int             GRPH_SET_RESET_ENA2 : 1;
		unsigned int             GRPH_SET_RESET_ENA3 : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int             GRPH_SET_RESET_ENA3 : 1;
		unsigned int             GRPH_SET_RESET_ENA2 : 1;
		unsigned int             GRPH_SET_RESET_ENA1 : 1;
		unsigned int             GRPH_SET_RESET_ENA0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA02 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      GRPH_CCOMP : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                      GRPH_CCOMP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA03 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     GRPH_ROTATE : 3;
		unsigned int                     GRPH_FN_SEL : 2;
		unsigned int                                 : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 27;
		unsigned int                     GRPH_FN_SEL : 2;
		unsigned int                     GRPH_ROTATE : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA04 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       GRPH_RMAP : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                       GRPH_RMAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA06 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   GRPH_GRAPHICS : 1;
		unsigned int                    GRPH_ODDEVEN : 1;
		unsigned int                     GRPH_ADRSEL : 2;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     GRPH_ADRSEL : 2;
		unsigned int                    GRPH_ODDEVEN : 1;
		unsigned int                   GRPH_GRAPHICS : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA07 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     GRPH_XCARE0 : 1;
		unsigned int                     GRPH_XCARE1 : 1;
		unsigned int                     GRPH_XCARE2 : 1;
		unsigned int                     GRPH_XCARE3 : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     GRPH_XCARE3 : 1;
		unsigned int                     GRPH_XCARE2 : 1;
		unsigned int                     GRPH_XCARE1 : 1;
		unsigned int                     GRPH_XCARE0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA08 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       GRPH_BMSK : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       GRPH_BMSK : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ02 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     SEQ_MAP0_EN : 1;
		unsigned int                     SEQ_MAP1_EN : 1;
		unsigned int                     SEQ_MAP2_EN : 1;
		unsigned int                     SEQ_MAP3_EN : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     SEQ_MAP3_EN : 1;
		unsigned int                     SEQ_MAP2_EN : 1;
		unsigned int                     SEQ_MAP1_EN : 1;
		unsigned int                     SEQ_MAP0_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ04 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                        SEQ_256K : 1;
		unsigned int                     SEQ_ODDEVEN : 1;
		unsigned int                       SEQ_CHAIN : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                       SEQ_CHAIN : 1;
		unsigned int                     SEQ_ODDEVEN : 1;
		unsigned int                        SEQ_256K : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT1E {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                    GRPH_DEC_RD1 : 1;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                    GRPH_DEC_RD1 : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT1F {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    GRPH_DEC_RD0 : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    GRPH_DEC_RD0 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT22 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 GRPH_LATCH_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 GRPH_LATCH_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT1E_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                  GRPH_DEC_RD1_M : 1;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                  GRPH_DEC_RD1_M : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT1F_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  GRPH_DEC_RD0_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  GRPH_DEC_RD0_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT22_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int               GRPH_LATCH_DATA_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int               GRPH_LATCH_DATA_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_PATH_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 22;
		unsigned int     HDP_WRITE_THROUGH_CACHE_DIS : 1;
		unsigned int                   HDP_APER_CNTL : 1;
		unsigned int             HP_LIN_RD_CACHE_DIS : 1;
		unsigned int                HP_RBBM_LOCK_DIS : 1;
		unsigned int                  HDP_SOFT_RESET : 1;
		unsigned int      HDP_READ_BUFFER_INVALIDATE : 1;
		unsigned int      HDP_WRITE_COMBINER_TIMEOUT : 3;
		unsigned int                HP_TEST_RST_CNTL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                HP_TEST_RST_CNTL : 1;
		unsigned int      HDP_WRITE_COMBINER_TIMEOUT : 3;
		unsigned int      HDP_READ_BUFFER_INVALIDATE : 1;
		unsigned int                  HDP_SOFT_RESET : 1;
		unsigned int                HP_RBBM_LOCK_DIS : 1;
		unsigned int             HP_LIN_RD_CACHE_DIS : 1;
		unsigned int                   HDP_APER_CNTL : 1;
		unsigned int     HDP_WRITE_THROUGH_CACHE_DIS : 1;
		unsigned int                                 : 22;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_VGA_WP_SEL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MEM_VGA_WPS0 : 12;
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_WPS1 : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_WPS1 : 12;
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_WPS0 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEM_VGA_RP_SEL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MEM_VGA_RPS0 : 12;
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_RPS1 : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_RPS1 : 12;
		unsigned int                                 : 4;
		unsigned int                    MEM_VGA_RPS0 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HDP_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     HDP_0_DEBUG : 1;
		unsigned int                     HDP_1_DEBUG : 1;
		unsigned int                     HDP_2_DEBUG : 1;
		unsigned int                     HDP_3_DEBUG : 1;
		unsigned int                     HDP_4_DEBUG : 1;
		unsigned int                     HDP_5_DEBUG : 1;
		unsigned int                     HDP_6_DEBUG : 1;
		unsigned int                     HDP_7_DEBUG : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     HDP_7_DEBUG : 1;
		unsigned int                     HDP_6_DEBUG : 1;
		unsigned int                     HDP_5_DEBUG : 1;
		unsigned int                     HDP_4_DEBUG : 1;
		unsigned int                     HDP_3_DEBUG : 1;
		unsigned int                     HDP_2_DEBUG : 1;
		unsigned int                     HDP_1_DEBUG : 1;
		unsigned int                     HDP_0_DEBUG : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SW_SEMAPHORE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SW_SEMAPHORE : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                    SW_SEMAPHORE : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int            SURF_TRANSLATION_DIS : 1;
		unsigned int                                 : 11;
		unsigned int                 NONSURF_AP0_SWP : 2;
		unsigned int                 NONSURF_AP1_SWP : 2;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 NONSURF_AP1_SWP : 2;
		unsigned int                 NONSURF_AP0_SWP : 2;
		unsigned int                                 : 11;
		unsigned int            SURF_TRANSLATION_DIS : 1;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE0_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE1_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE2_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE3_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE4_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE5_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE6_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE7_LOWER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_LOWER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_LOWER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE0_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE1_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE2_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE3_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE4_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE5_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE6_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE7_UPPER_BOUND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SURF_UPPER : 28;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                      SURF_UPPER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE0_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF0_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF0_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF0_AP0_SWP : 2;
		unsigned int                   SURF0_AP1_SWP : 2;
		unsigned int                SURF0_WRITE_FLAG : 1;
		unsigned int                 SURF0_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF0_READ_FLAG : 1;
		unsigned int                SURF0_WRITE_FLAG : 1;
		unsigned int                   SURF0_AP1_SWP : 2;
		unsigned int                   SURF0_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF0_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF0_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE1_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF1_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF1_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF1_AP0_SWP : 2;
		unsigned int                   SURF1_AP1_SWP : 2;
		unsigned int                SURF1_WRITE_FLAG : 1;
		unsigned int                 SURF1_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF1_READ_FLAG : 1;
		unsigned int                SURF1_WRITE_FLAG : 1;
		unsigned int                   SURF1_AP1_SWP : 2;
		unsigned int                   SURF1_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF1_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF1_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE2_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF2_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF2_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF2_AP0_SWP : 2;
		unsigned int                   SURF2_AP1_SWP : 2;
		unsigned int                SURF2_WRITE_FLAG : 1;
		unsigned int                 SURF2_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF2_READ_FLAG : 1;
		unsigned int                SURF2_WRITE_FLAG : 1;
		unsigned int                   SURF2_AP1_SWP : 2;
		unsigned int                   SURF2_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF2_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF2_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE3_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF3_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF3_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF3_AP0_SWP : 2;
		unsigned int                   SURF3_AP1_SWP : 2;
		unsigned int                SURF3_WRITE_FLAG : 1;
		unsigned int                 SURF3_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF3_READ_FLAG : 1;
		unsigned int                SURF3_WRITE_FLAG : 1;
		unsigned int                   SURF3_AP1_SWP : 2;
		unsigned int                   SURF3_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF3_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF3_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE4_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF4_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF4_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF4_AP0_SWP : 2;
		unsigned int                   SURF4_AP1_SWP : 2;
		unsigned int                SURF4_WRITE_FLAG : 1;
		unsigned int                 SURF4_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF4_READ_FLAG : 1;
		unsigned int                SURF4_WRITE_FLAG : 1;
		unsigned int                   SURF4_AP1_SWP : 2;
		unsigned int                   SURF4_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF4_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF4_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE5_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF5_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF5_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF5_AP0_SWP : 2;
		unsigned int                   SURF5_AP1_SWP : 2;
		unsigned int                SURF5_WRITE_FLAG : 1;
		unsigned int                 SURF5_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF5_READ_FLAG : 1;
		unsigned int                SURF5_WRITE_FLAG : 1;
		unsigned int                   SURF5_AP1_SWP : 2;
		unsigned int                   SURF5_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF5_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF5_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE6_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF6_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF6_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF6_AP0_SWP : 2;
		unsigned int                   SURF6_AP1_SWP : 2;
		unsigned int                SURF6_WRITE_FLAG : 1;
		unsigned int                 SURF6_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF6_READ_FLAG : 1;
		unsigned int                SURF6_WRITE_FLAG : 1;
		unsigned int                   SURF6_AP1_SWP : 2;
		unsigned int                   SURF6_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF6_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF6_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE7_INFO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SURF7_PITCHSEL : 10;
		unsigned int                                 : 6;
		unsigned int                 SURF7_TILE_MODE : 3;
		unsigned int                                 : 1;
		unsigned int                   SURF7_AP0_SWP : 2;
		unsigned int                   SURF7_AP1_SWP : 2;
		unsigned int                SURF7_WRITE_FLAG : 1;
		unsigned int                 SURF7_READ_FLAG : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 SURF7_READ_FLAG : 1;
		unsigned int                SURF7_WRITE_FLAG : 1;
		unsigned int                   SURF7_AP1_SWP : 2;
		unsigned int                   SURF7_AP0_SWP : 2;
		unsigned int                                 : 1;
		unsigned int                 SURF7_TILE_MODE : 3;
		unsigned int                                 : 6;
		unsigned int                  SURF7_PITCHSEL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE_ACCESS_FLAGS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                SURF0_WRITE_FLAG : 1;
		unsigned int                SURF1_WRITE_FLAG : 1;
		unsigned int                SURF2_WRITE_FLAG : 1;
		unsigned int                SURF3_WRITE_FLAG : 1;
		unsigned int                SURF4_WRITE_FLAG : 1;
		unsigned int                SURF5_WRITE_FLAG : 1;
		unsigned int                SURF6_WRITE_FLAG : 1;
		unsigned int                SURF7_WRITE_FLAG : 1;
		unsigned int              NONSURF_WRITE_FLAG : 1;
		unsigned int               LINEAR_WRITE_FLAG : 1;
		unsigned int                  VGA_WRITE_FLAG : 1;
		unsigned int                                 : 5;
		unsigned int                 SURF0_READ_FLAG : 1;
		unsigned int                 SURF1_READ_FLAG : 1;
		unsigned int                 SURF2_READ_FLAG : 1;
		unsigned int                 SURF3_READ_FLAG : 1;
		unsigned int                 SURF4_READ_FLAG : 1;
		unsigned int                 SURF5_READ_FLAG : 1;
		unsigned int                 SURF6_READ_FLAG : 1;
		unsigned int                 SURF7_READ_FLAG : 1;
		unsigned int               NONSURF_READ_FLAG : 1;
		unsigned int                LINEAR_READ_FLAG : 1;
		unsigned int                   VGA_READ_FLAG : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                   VGA_READ_FLAG : 1;
		unsigned int                LINEAR_READ_FLAG : 1;
		unsigned int               NONSURF_READ_FLAG : 1;
		unsigned int                 SURF7_READ_FLAG : 1;
		unsigned int                 SURF6_READ_FLAG : 1;
		unsigned int                 SURF5_READ_FLAG : 1;
		unsigned int                 SURF4_READ_FLAG : 1;
		unsigned int                 SURF3_READ_FLAG : 1;
		unsigned int                 SURF2_READ_FLAG : 1;
		unsigned int                 SURF1_READ_FLAG : 1;
		unsigned int                 SURF0_READ_FLAG : 1;
		unsigned int                                 : 5;
		unsigned int                  VGA_WRITE_FLAG : 1;
		unsigned int               LINEAR_WRITE_FLAG : 1;
		unsigned int              NONSURF_WRITE_FLAG : 1;
		unsigned int                SURF7_WRITE_FLAG : 1;
		unsigned int                SURF6_WRITE_FLAG : 1;
		unsigned int                SURF5_WRITE_FLAG : 1;
		unsigned int                SURF4_WRITE_FLAG : 1;
		unsigned int                SURF3_WRITE_FLAG : 1;
		unsigned int                SURF2_WRITE_FLAG : 1;
		unsigned int                SURF1_WRITE_FLAG : 1;
		unsigned int                SURF0_WRITE_FLAG : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SURFACE_ACCESS_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int            SURF0_WRITE_FLAG_CLR : 1;
		unsigned int            SURF1_WRITE_FLAG_CLR : 1;
		unsigned int            SURF2_WRITE_FLAG_CLR : 1;
		unsigned int            SURF3_WRITE_FLAG_CLR : 1;
		unsigned int            SURF4_WRITE_FLAG_CLR : 1;
		unsigned int            SURF5_WRITE_FLAG_CLR : 1;
		unsigned int            SURF6_WRITE_FLAG_CLR : 1;
		unsigned int            SURF7_WRITE_FLAG_CLR : 1;
		unsigned int          NONSURF_WRITE_FLAG_CLR : 1;
		unsigned int           LINEAR_WRITE_FLAG_CLR : 1;
		unsigned int              VGA_WRITE_FLAG_CLR : 1;
		unsigned int                                 : 5;
		unsigned int             SURF0_READ_FLAG_CLR : 1;
		unsigned int             SURF1_READ_FLAG_CLR : 1;
		unsigned int             SURF2_READ_FLAG_CLR : 1;
		unsigned int             SURF3_READ_FLAG_CLR : 1;
		unsigned int             SURF4_READ_FLAG_CLR : 1;
		unsigned int             SURF5_READ_FLAG_CLR : 1;
		unsigned int             SURF6_READ_FLAG_CLR : 1;
		unsigned int             SURF7_READ_FLAG_CLR : 1;
		unsigned int           NONSURF_READ_FLAG_CLR : 1;
		unsigned int            LINEAR_READ_FLAG_CLR : 1;
		unsigned int               VGA_READ_FLAG_CLR : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int               VGA_READ_FLAG_CLR : 1;
		unsigned int            LINEAR_READ_FLAG_CLR : 1;
		unsigned int           NONSURF_READ_FLAG_CLR : 1;
		unsigned int             SURF7_READ_FLAG_CLR : 1;
		unsigned int             SURF6_READ_FLAG_CLR : 1;
		unsigned int             SURF5_READ_FLAG_CLR : 1;
		unsigned int             SURF4_READ_FLAG_CLR : 1;
		unsigned int             SURF3_READ_FLAG_CLR : 1;
		unsigned int             SURF2_READ_FLAG_CLR : 1;
		unsigned int             SURF1_READ_FLAG_CLR : 1;
		unsigned int             SURF0_READ_FLAG_CLR : 1;
		unsigned int                                 : 5;
		unsigned int              VGA_WRITE_FLAG_CLR : 1;
		unsigned int           LINEAR_WRITE_FLAG_CLR : 1;
		unsigned int          NONSURF_WRITE_FLAG_CLR : 1;
		unsigned int            SURF7_WRITE_FLAG_CLR : 1;
		unsigned int            SURF6_WRITE_FLAG_CLR : 1;
		unsigned int            SURF5_WRITE_FLAG_CLR : 1;
		unsigned int            SURF4_WRITE_FLAG_CLR : 1;
		unsigned int            SURF3_WRITE_FLAG_CLR : 1;
		unsigned int            SURF2_WRITE_FLAG_CLR : 1;
		unsigned int            SURF1_WRITE_FLAG_CLR : 1;
		unsigned int            SURF0_WRITE_FLAG_CLR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRPH8_IDX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        GRPH_IDX : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                        GRPH_IDX : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRPH8_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       GRPH_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       GRPH_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRA05 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 GRPH_WRITE_MODE : 2;
		unsigned int                                 : 1;
		unsigned int                      GRPH_READ1 : 1;
		unsigned int                     CGA_ODDEVEN : 1;
		unsigned int                        GRPH_OES : 1;
		unsigned int                       GRPH_PACK : 1;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                       GRPH_PACK : 1;
		unsigned int                        GRPH_OES : 1;
		unsigned int                     CGA_ODDEVEN : 1;
		unsigned int                      GRPH_READ1 : 1;
		unsigned int                                 : 1;
		unsigned int                 GRPH_WRITE_MODE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ8_IDX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         SEQ_IDX : 3;
		unsigned int                                 : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 29;
		unsigned int                         SEQ_IDX : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ8_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SEQ_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        SEQ_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC8_IDX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       VCRTC_IDX : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                       VCRTC_IDX : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC8_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      VCRTC_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      VCRTC_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      UNDRLN_LOC : 5;
		unsigned int                    ADDR_CNT_BY4 : 1;
		unsigned int                     DOUBLE_WORD : 1;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                     DOUBLE_WORD : 1;
		unsigned int                    ADDR_CNT_BY4 : 1;
		unsigned int                      UNDRLN_LOC : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT17 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     RA0_AS_A13B : 1;
		unsigned int                     RA1_AS_A14B : 1;
		unsigned int                      VCOUNT_BY2 : 1;
		unsigned int                    ADDR_CNT_BY2 : 1;
		unsigned int                                 : 1;
		unsigned int                    WRAP_A15TOA0 : 1;
		unsigned int                       BYTE_MODE : 1;
		unsigned int                    CRTC_SYNC_EN : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    CRTC_SYNC_EN : 1;
		unsigned int                       BYTE_MODE : 1;
		unsigned int                    WRAP_A15TOA0 : 1;
		unsigned int                                 : 1;
		unsigned int                    ADDR_CNT_BY2 : 1;
		unsigned int                      VCOUNT_BY2 : 1;
		unsigned int                     RA1_AS_A14B : 1;
		unsigned int                     RA0_AS_A13B : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT14_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    UNDRLN_LOC_S : 5;
		unsigned int                  ADDR_CNT_BY4_M : 1;
		unsigned int                   DOUBLE_WORD_M : 1;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                   DOUBLE_WORD_M : 1;
		unsigned int                  ADDR_CNT_BY4_M : 1;
		unsigned int                    UNDRLN_LOC_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT17_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   RA0_AS_A13B_M : 1;
		unsigned int                   RA1_AS_A14B_M : 1;
		unsigned int                    VCOUNT_BY2_S : 1;
		unsigned int                  ADDR_CNT_BY2_M : 1;
		unsigned int                                 : 1;
		unsigned int                  WRAP_A15TOA0_M : 1;
		unsigned int                     BYTE_MODE_M : 1;
		unsigned int                  CRTC_SYNC_EN_M : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  CRTC_SYNC_EN_M : 1;
		unsigned int                     BYTE_MODE_M : 1;
		unsigned int                  WRAP_A15TOA0_M : 1;
		unsigned int                                 : 1;
		unsigned int                  ADDR_CNT_BY2_M : 1;
		unsigned int                    VCOUNT_BY2_S : 1;
		unsigned int                   RA1_AS_A14B_M : 1;
		unsigned int                   RA0_AS_A13B_M : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GEN_INT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC_VBLANK_MASK : 1;
		unsigned int                 CRTC_VLINE_MASK : 1;
		unsigned int                 CRTC_VSYNC_MASK : 1;
		unsigned int                   SNAPSHOT_MASK : 1;
		unsigned int                  FP_DETECT_MASK : 1;
		unsigned int                CRTC2_VLINE_MASK : 1;
		unsigned int                CRTC2_VSYNC_MASK : 1;
		unsigned int                  SNAPSHOT2_MASK : 1;
		unsigned int                                 : 1;
		unsigned int               CRTC2_VBLANK_MASK : 1;
		unsigned int                 FP2_DETECT_MASK : 1;
		unsigned int      VSYNC_DIFF_OVER_LIMIT_MASK : 1;
		unsigned int                DMA_VIPH0_INT_EN : 1;
		unsigned int                DMA_VIPH1_INT_EN : 1;
		unsigned int                DMA_VIPH2_INT_EN : 1;
		unsigned int                DMA_VIPH3_INT_EN : 1;
		unsigned int                                 : 1;
		unsigned int                      I2C_INT_EN : 1;
		unsigned int                                 : 1;
		unsigned int                   GUI_IDLE_MASK : 1;
		unsigned int                                 : 4;
		unsigned int                     VIPH_INT_EN : 1;
		unsigned int                       SW_INT_EN : 1;
		unsigned int                                 : 1;
		unsigned int                GEYSERVILLE_MASK : 1;
		unsigned int        HDCP_AUTHORIZED_INT_MASK : 1;
		unsigned int                DVI_I2C_INT_MASK : 1;
		unsigned int                     GUIDMA_MASK : 1;
		unsigned int                     VIDDMA_MASK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIDDMA_MASK : 1;
		unsigned int                     GUIDMA_MASK : 1;
		unsigned int                DVI_I2C_INT_MASK : 1;
		unsigned int        HDCP_AUTHORIZED_INT_MASK : 1;
		unsigned int                GEYSERVILLE_MASK : 1;
		unsigned int                                 : 1;
		unsigned int                       SW_INT_EN : 1;
		unsigned int                     VIPH_INT_EN : 1;
		unsigned int                                 : 4;
		unsigned int                   GUI_IDLE_MASK : 1;
		unsigned int                                 : 1;
		unsigned int                      I2C_INT_EN : 1;
		unsigned int                                 : 1;
		unsigned int                DMA_VIPH3_INT_EN : 1;
		unsigned int                DMA_VIPH2_INT_EN : 1;
		unsigned int                DMA_VIPH1_INT_EN : 1;
		unsigned int                DMA_VIPH0_INT_EN : 1;
		unsigned int      VSYNC_DIFF_OVER_LIMIT_MASK : 1;
		unsigned int                 FP2_DETECT_MASK : 1;
		unsigned int               CRTC2_VBLANK_MASK : 1;
		unsigned int                                 : 1;
		unsigned int                  SNAPSHOT2_MASK : 1;
		unsigned int                CRTC2_VSYNC_MASK : 1;
		unsigned int                CRTC2_VLINE_MASK : 1;
		unsigned int                  FP_DETECT_MASK : 1;
		unsigned int                   SNAPSHOT_MASK : 1;
		unsigned int                 CRTC_VSYNC_MASK : 1;
		unsigned int                 CRTC_VLINE_MASK : 1;
		unsigned int                CRTC_VBLANK_MASK : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GEN_INT_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC_VBLANK_STAT : 1;
		unsigned int                 CRTC_VLINE_STAT : 1;
		unsigned int                 CRTC_VSYNC_STAT : 1;
		unsigned int                   SNAPSHOT_STAT : 1;
		unsigned int                  FP_DETECT_STAT : 1;
		unsigned int                CRTC2_VLINE_STAT : 1;
		unsigned int                CRTC2_VSYNC_STAT : 1;
		unsigned int                  SNAPSHOT2_STAT : 1;
		unsigned int                 CAP0_INT_ACTIVE : 1;
		unsigned int               CRTC2_VBLANK_STAT : 1;
		unsigned int                 FP2_DETECT_STAT : 1;
		unsigned int      VSYNC_DIFF_OVER_LIMIT_STAT : 1;
		unsigned int                   DMA_VIPH0_INT : 1;
		unsigned int                   DMA_VIPH1_INT : 1;
		unsigned int                   DMA_VIPH2_INT : 1;
		unsigned int                   DMA_VIPH3_INT : 1;
		unsigned int                                 : 1;
		unsigned int                         I2C_INT : 1;
		unsigned int                                 : 1;
		unsigned int                   GUI_IDLE_STAT : 1;
		unsigned int                                 : 4;
		unsigned int                        VIPH_INT : 1;
		unsigned int                          SW_INT : 1;
		unsigned int                      SW_INT_SET : 1;
		unsigned int                GEYSERVILLE_STAT : 1;
		unsigned int        HDCP_AUTHORIZED_INT_STAT : 1;
		unsigned int                DVI_I2C_INT_STAT : 1;
		unsigned int                     GUIDMA_STAT : 1;
		unsigned int                     VIDDMA_STAT : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIDDMA_STAT : 1;
		unsigned int                     GUIDMA_STAT : 1;
		unsigned int                DVI_I2C_INT_STAT : 1;
		unsigned int        HDCP_AUTHORIZED_INT_STAT : 1;
		unsigned int                GEYSERVILLE_STAT : 1;
		unsigned int                      SW_INT_SET : 1;
		unsigned int                          SW_INT : 1;
		unsigned int                        VIPH_INT : 1;
		unsigned int                                 : 4;
		unsigned int                   GUI_IDLE_STAT : 1;
		unsigned int                                 : 1;
		unsigned int                         I2C_INT : 1;
		unsigned int                                 : 1;
		unsigned int                   DMA_VIPH3_INT : 1;
		unsigned int                   DMA_VIPH2_INT : 1;
		unsigned int                   DMA_VIPH1_INT : 1;
		unsigned int                   DMA_VIPH0_INT : 1;
		unsigned int      VSYNC_DIFF_OVER_LIMIT_STAT : 1;
		unsigned int                 FP2_DETECT_STAT : 1;
		unsigned int               CRTC2_VBLANK_STAT : 1;
		unsigned int                 CAP0_INT_ACTIVE : 1;
		unsigned int                  SNAPSHOT2_STAT : 1;
		unsigned int                CRTC2_VSYNC_STAT : 1;
		unsigned int                CRTC2_VLINE_STAT : 1;
		unsigned int                  FP_DETECT_STAT : 1;
		unsigned int                   SNAPSHOT_STAT : 1;
		unsigned int                 CRTC_VSYNC_STAT : 1;
		unsigned int                 CRTC_VLINE_STAT : 1;
		unsigned int                CRTC_VBLANK_STAT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_EXT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              CRTC_VGA_XOVERSCAN : 1;
		unsigned int                  VGA_BLINK_RATE : 2;
		unsigned int                  VGA_ATI_LINEAR : 1;
		unsigned int               VGA_128KAP_PAGING : 1;
		unsigned int                    VGA_TEXT_132 : 1;
		unsigned int                 VGA_XCRT_CNT_EN : 1;
		unsigned int                                 : 1;
		unsigned int                  CRTC_HSYNC_DIS : 1;
		unsigned int                  CRTC_VSYNC_DIS : 1;
		unsigned int                CRTC_DISPLAY_DIS : 1;
		unsigned int              CRTC_SYNC_TRISTATE : 1;
		unsigned int             CRTC_HSYNC_TRISTATE : 1;
		unsigned int             CRTC_VSYNC_TRISTATE : 1;
		unsigned int                                 : 1;
		unsigned int                          CRT_ON : 1;
		unsigned int                                 : 1;
		unsigned int                  VGA_CUR_B_TEST : 1;
		unsigned int                    VGA_PACK_DIS : 1;
		unsigned int                   VGA_MEM_PS_EN : 1;
		unsigned int                                 : 4;
		unsigned int                VCRTC_IDX_MASTER : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                VCRTC_IDX_MASTER : 7;
		unsigned int                                 : 4;
		unsigned int                   VGA_MEM_PS_EN : 1;
		unsigned int                    VGA_PACK_DIS : 1;
		unsigned int                  VGA_CUR_B_TEST : 1;
		unsigned int                                 : 1;
		unsigned int                          CRT_ON : 1;
		unsigned int                                 : 1;
		unsigned int             CRTC_VSYNC_TRISTATE : 1;
		unsigned int             CRTC_HSYNC_TRISTATE : 1;
		unsigned int              CRTC_SYNC_TRISTATE : 1;
		unsigned int                CRTC_DISPLAY_DIS : 1;
		unsigned int                  CRTC_VSYNC_DIS : 1;
		unsigned int                  CRTC_HSYNC_DIS : 1;
		unsigned int                                 : 1;
		unsigned int                 VGA_XCRT_CNT_EN : 1;
		unsigned int                    VGA_TEXT_132 : 1;
		unsigned int               VGA_128KAP_PAGING : 1;
		unsigned int                  VGA_ATI_LINEAR : 1;
		unsigned int                  VGA_BLINK_RATE : 2;
		unsigned int              CRTC_VGA_XOVERSCAN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union WAIT_UNTIL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 WAIT_CRTC_PFLIP : 1;
		unsigned int              WAIT_RE_CRTC_VLINE : 1;
		unsigned int              WAIT_FE_CRTC_VLINE : 1;
		unsigned int                 WAIT_CRTC_VLINE : 1;
		unsigned int             WAIT_DMA_VIPH0_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH1_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH2_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH3_IDLE : 1;
		unsigned int               WAIT_DMA_VID_IDLE : 1;
		unsigned int               WAIT_DMA_GUI_IDLE : 1;
		unsigned int                    WAIT_CMDFIFO : 1;
		unsigned int                   WAIT_OV0_FLIP : 1;
		unsigned int              WAIT_OV0_SLICEDONE : 1;
		unsigned int                                 : 1;
		unsigned int                    WAIT_2D_IDLE : 1;
		unsigned int                    WAIT_3D_IDLE : 1;
		unsigned int               WAIT_2D_IDLECLEAN : 1;
		unsigned int               WAIT_3D_IDLECLEAN : 1;
		unsigned int             WAIT_HOST_IDLECLEAN : 1;
		unsigned int                 WAIT_EXTERN_SIG : 1;
		unsigned int                 CMDFIFO_ENTRIES : 7;
		unsigned int                                 : 3;
		unsigned int            WAIT_BOTH_CRTC_PFLIP : 1;
		unsigned int              ENG_DISPLAY_SELECT : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              ENG_DISPLAY_SELECT : 1;
		unsigned int            WAIT_BOTH_CRTC_PFLIP : 1;
		unsigned int                                 : 3;
		unsigned int                 CMDFIFO_ENTRIES : 7;
		unsigned int                 WAIT_EXTERN_SIG : 1;
		unsigned int             WAIT_HOST_IDLECLEAN : 1;
		unsigned int               WAIT_3D_IDLECLEAN : 1;
		unsigned int               WAIT_2D_IDLECLEAN : 1;
		unsigned int                    WAIT_3D_IDLE : 1;
		unsigned int                    WAIT_2D_IDLE : 1;
		unsigned int                                 : 1;
		unsigned int              WAIT_OV0_SLICEDONE : 1;
		unsigned int                   WAIT_OV0_FLIP : 1;
		unsigned int                    WAIT_CMDFIFO : 1;
		unsigned int               WAIT_DMA_GUI_IDLE : 1;
		unsigned int               WAIT_DMA_VID_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH3_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH2_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH1_IDLE : 1;
		unsigned int             WAIT_DMA_VIPH0_IDLE : 1;
		unsigned int                 WAIT_CRTC_VLINE : 1;
		unsigned int              WAIT_FE_CRTC_VLINE : 1;
		unsigned int              WAIT_RE_CRTC_VLINE : 1;
		unsigned int                 WAIT_CRTC_PFLIP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ISYNC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              ISYNC_ANY2D_IDLE3D : 1;
		unsigned int              ISYNC_ANY3D_IDLE2D : 1;
		unsigned int             ISYNC_TRIG2D_IDLE3D : 1;
		unsigned int             ISYNC_TRIG3D_IDLE2D : 1;
		unsigned int              ISYNC_WAIT_IDLEGUI : 1;
		unsigned int         ISYNC_CPSCRATCH_IDLEGUI : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int         ISYNC_CPSCRATCH_IDLEGUI : 1;
		unsigned int              ISYNC_WAIT_IDLEGUI : 1;
		unsigned int             ISYNC_TRIG3D_IDLE2D : 1;
		unsigned int             ISYNC_TRIG2D_IDLE3D : 1;
		unsigned int              ISYNC_ANY3D_IDLE2D : 1;
		unsigned int              ISYNC_ANY2D_IDLE3D : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_GUICNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  HOST_DATA_SWAP : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                  HOST_DATA_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CMDFIFO_AVAIL : 7;
		unsigned int                                 : 1;
		unsigned int                     HIRQ_ON_RBB : 1;
		unsigned int                     CPRQ_ON_RBB : 1;
		unsigned int                     CFRQ_ON_RBB : 1;
		unsigned int                   HIRQ_IN_RTBUF : 1;
		unsigned int                   CPRQ_IN_RTBUF : 1;
		unsigned int                   CFRQ_IN_RTBUF : 1;
		unsigned int                    CF_PIPE_BUSY : 1;
		unsigned int                     ENG_EV_BUSY : 1;
		unsigned int                 CP_CMDSTRM_BUSY : 1;
		unsigned int                         E2_BUSY : 1;
		unsigned int                       RB2D_BUSY : 1;
		unsigned int                       RB3D_BUSY : 1;
		unsigned int                        VAP_BUSY : 1;
		unsigned int                         RE_BUSY : 1;
		unsigned int                        TAM_BUSY : 1;
		unsigned int                        TDM_BUSY : 1;
		unsigned int                         PB_BUSY : 1;
		unsigned int                        TIM_BUSY : 1;
		unsigned int                                 : 5;
		unsigned int                      GUI_ACTIVE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                      GUI_ACTIVE : 1;
		unsigned int                                 : 5;
		unsigned int                        TIM_BUSY : 1;
		unsigned int                         PB_BUSY : 1;
		unsigned int                        TDM_BUSY : 1;
		unsigned int                        TAM_BUSY : 1;
		unsigned int                         RE_BUSY : 1;
		unsigned int                        VAP_BUSY : 1;
		unsigned int                       RB3D_BUSY : 1;
		unsigned int                       RB2D_BUSY : 1;
		unsigned int                         E2_BUSY : 1;
		unsigned int                 CP_CMDSTRM_BUSY : 1;
		unsigned int                     ENG_EV_BUSY : 1;
		unsigned int                    CF_PIPE_BUSY : 1;
		unsigned int                   CFRQ_IN_RTBUF : 1;
		unsigned int                   CPRQ_IN_RTBUF : 1;
		unsigned int                   HIRQ_IN_RTBUF : 1;
		unsigned int                     CFRQ_ON_RBB : 1;
		unsigned int                     CPRQ_ON_RBB : 1;
		unsigned int                     HIRQ_ON_RBB : 1;
		unsigned int                                 : 1;
		unsigned int                   CMDFIFO_AVAIL : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       RB_SETTLE : 4;
		unsigned int                    ABORTCLKS_HI : 3;
		unsigned int                                 : 1;
		unsigned int                    ABORTCLKS_CP : 3;
		unsigned int                                 : 1;
		unsigned int                 ABORTCLKS_CFIFO : 3;
		unsigned int                                 : 2;
		unsigned int                   CPQ_DATA_SWAP : 1;
		unsigned int                                 : 3;
		unsigned int                   NO_ABORT_IDCT : 1;
		unsigned int                   NO_ABORT_BIOS : 1;
		unsigned int                  NO_ABORT_TVOUT : 1;
		unsigned int                     NO_ABORT_CP : 1;
		unsigned int                     NO_ABORT_HI : 1;
		unsigned int                    NO_ABORT_HDP : 1;
		unsigned int                     NO_ABORT_MC : 1;
		unsigned int                    NO_ABORT_AIC : 1;
		unsigned int                    NO_ABORT_VIP : 1;
		unsigned int                   NO_ABORT_DISP : 1;
		unsigned int                     NO_ABORT_CG : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NO_ABORT_CG : 1;
		unsigned int                   NO_ABORT_DISP : 1;
		unsigned int                    NO_ABORT_VIP : 1;
		unsigned int                    NO_ABORT_AIC : 1;
		unsigned int                     NO_ABORT_MC : 1;
		unsigned int                    NO_ABORT_HDP : 1;
		unsigned int                     NO_ABORT_HI : 1;
		unsigned int                     NO_ABORT_CP : 1;
		unsigned int                  NO_ABORT_TVOUT : 1;
		unsigned int                   NO_ABORT_BIOS : 1;
		unsigned int                   NO_ABORT_IDCT : 1;
		unsigned int                                 : 3;
		unsigned int                   CPQ_DATA_SWAP : 1;
		unsigned int                                 : 2;
		unsigned int                 ABORTCLKS_CFIFO : 3;
		unsigned int                                 : 1;
		unsigned int                    ABORTCLKS_CP : 3;
		unsigned int                                 : 1;
		unsigned int                    ABORTCLKS_HI : 3;
		unsigned int                       RB_SETTLE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_SOFT_RESET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SOFT_RESET_CP : 1;
		unsigned int                   SOFT_RESET_HI : 1;
		unsigned int                  SOFT_RESET_VAP : 1;
		unsigned int                   SOFT_RESET_RE : 1;
		unsigned int                   SOFT_RESET_PP : 1;
		unsigned int                   SOFT_RESET_E2 : 1;
		unsigned int                   SOFT_RESET_RB : 1;
		unsigned int                  SOFT_RESET_HDP : 1;
		unsigned int                   SOFT_RESET_MC : 1;
		unsigned int                  SOFT_RESET_AIC : 1;
		unsigned int                  SOFT_RESET_VIP : 1;
		unsigned int                 SOFT_RESET_DISP : 1;
		unsigned int                   SOFT_RESET_CG : 1;
		unsigned int                                 : 19;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 19;
		unsigned int                   SOFT_RESET_CG : 1;
		unsigned int                 SOFT_RESET_DISP : 1;
		unsigned int                  SOFT_RESET_VIP : 1;
		unsigned int                  SOFT_RESET_AIC : 1;
		unsigned int                   SOFT_RESET_MC : 1;
		unsigned int                  SOFT_RESET_HDP : 1;
		unsigned int                   SOFT_RESET_RB : 1;
		unsigned int                   SOFT_RESET_E2 : 1;
		unsigned int                   SOFT_RESET_PP : 1;
		unsigned int                   SOFT_RESET_RE : 1;
		unsigned int                  SOFT_RESET_VAP : 1;
		unsigned int                   SOFT_RESET_HI : 1;
		unsigned int                   SOFT_RESET_CP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union NQWAIT_UNTIL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   WAIT_GUI_IDLE : 1;
		unsigned int                                 : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 31;
		unsigned int                   WAIT_GUI_IDLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      RBBM_DEBUG : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      RBBM_DEBUG : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_CMDFIFO_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CMDFIFO_ADDR : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                    CMDFIFO_ADDR : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_CMDFIFO_DATAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CMDFIFO_DATAL : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   CMDFIFO_DATAL : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_CMDFIFO_DATAH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CMDFIFO_DATAH : 12;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                   CMDFIFO_DATAH : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_CMDFIFO_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CMDFIFO_RPTR : 6;
		unsigned int                                 : 2;
		unsigned int                    CMDFIFO_WPTR : 6;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                    CMDFIFO_WPTR : 6;
		unsigned int                                 : 2;
		unsigned int                    CMDFIFO_RPTR : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_PERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PERFSEL1 : 4;
		unsigned int                                 : 2;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                        PERFSEL2 : 4;
		unsigned int                                 : 2;
		unsigned int                       CLR_PERF2 : 1;
		unsigned int                        EN_PERF2 : 1;
		unsigned int                                 : 15;
		unsigned int                        SYNC_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                        SYNC_SEL : 1;
		unsigned int                                 : 15;
		unsigned int                        EN_PERF2 : 1;
		unsigned int                       CLR_PERF2 : 1;
		unsigned int                                 : 2;
		unsigned int                        PERFSEL2 : 4;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                                 : 2;
		unsigned int                        PERFSEL1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_PERF_COUNT1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     PERF_COUNT1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     PERF_COUNT1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RBBM_PERF_COUNT2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     PERF_COUNT2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     PERF_COUNT2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENFC_RD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                     VSYNC_SEL_R : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     VSYNC_SEL_R : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENFC_WT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                     VSYNC_SEL_W : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     VSYNC_SEL_W : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENS0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                    SENSE_SWITCH : 1;
		unsigned int                                 : 2;
		unsigned int                        CRT_INTR : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        CRT_INTR : 1;
		unsigned int                                 : 2;
		unsigned int                    SENSE_SWITCH : 1;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GENS1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      NO_DISPLAY : 1;
		unsigned int                                 : 2;
		unsigned int                     VGA_VSTATUS : 1;
		unsigned int                 PIXEL_READ_BACK : 2;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                 PIXEL_READ_BACK : 2;
		unsigned int                     VGA_VSTATUS : 1;
		unsigned int                                 : 2;
		unsigned int                      NO_DISPLAY : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DAC_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        DAC_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_MASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DAC_MASK : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        DAC_MASK : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_R_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DAC_R_INDEX : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     DAC_R_INDEX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_W_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DAC_W_INDEX : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     DAC_W_INDEX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ00 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SEQ_RST0B : 1;
		unsigned int                       SEQ_RST1B : 1;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                       SEQ_RST1B : 1;
		unsigned int                       SEQ_RST0B : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ01 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SEQ_DOT8 : 1;
		unsigned int                                 : 1;
		unsigned int                      SEQ_SHIFT2 : 1;
		unsigned int                     SEQ_PCLKBY2 : 1;
		unsigned int                      SEQ_SHIFT4 : 1;
		unsigned int                       SEQ_MAXBW : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                       SEQ_MAXBW : 1;
		unsigned int                      SEQ_SHIFT4 : 1;
		unsigned int                     SEQ_PCLKBY2 : 1;
		unsigned int                      SEQ_SHIFT2 : 1;
		unsigned int                                 : 1;
		unsigned int                        SEQ_DOT8 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEQ03 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     SEQ_FONT_B1 : 1;
		unsigned int                     SEQ_FONT_B2 : 1;
		unsigned int                     SEQ_FONT_A1 : 1;
		unsigned int                     SEQ_FONT_A2 : 1;
		unsigned int                     SEQ_FONT_B0 : 1;
		unsigned int                     SEQ_FONT_A0 : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                     SEQ_FONT_A0 : 1;
		unsigned int                     SEQ_FONT_B0 : 1;
		unsigned int                     SEQ_FONT_A2 : 1;
		unsigned int                     SEQ_FONT_A1 : 1;
		unsigned int                     SEQ_FONT_B2 : 1;
		unsigned int                     SEQ_FONT_B1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT00 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         H_TOTAL : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                         H_TOTAL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT01 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      H_DISP_END : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      H_DISP_END : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT02 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   H_BLANK_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   H_BLANK_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT03 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     H_BLANK_END : 5;
		unsigned int                       H_DE_SKEW : 2;
		unsigned int                CR10CR11_R_DIS_B : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                CR10CR11_R_DIS_B : 1;
		unsigned int                       H_DE_SKEW : 2;
		unsigned int                     H_BLANK_END : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT04 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    H_SYNC_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    H_SYNC_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT05 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      H_SYNC_END : 5;
		unsigned int                     H_SYNC_SKEW : 2;
		unsigned int                  H_BLANK_END_B5 : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  H_BLANK_END_B5 : 1;
		unsigned int                     H_SYNC_SKEW : 2;
		unsigned int                      H_SYNC_END : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT06 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         V_TOTAL : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                         V_TOTAL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT07 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      V_TOTAL_B8 : 1;
		unsigned int                   V_DISP_END_B8 : 1;
		unsigned int                 V_SYNC_START_B8 : 1;
		unsigned int                V_BLANK_START_B8 : 1;
		unsigned int                     LINE_CMP_B8 : 1;
		unsigned int                      V_TOTAL_B9 : 1;
		unsigned int                   V_DISP_END_B9 : 1;
		unsigned int                 V_SYNC_START_B9 : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 V_SYNC_START_B9 : 1;
		unsigned int                   V_DISP_END_B9 : 1;
		unsigned int                      V_TOTAL_B9 : 1;
		unsigned int                     LINE_CMP_B8 : 1;
		unsigned int                V_BLANK_START_B8 : 1;
		unsigned int                 V_SYNC_START_B8 : 1;
		unsigned int                   V_DISP_END_B8 : 1;
		unsigned int                      V_TOTAL_B8 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT08 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  ROW_SCAN_START : 5;
		unsigned int                        BYTE_PAN : 2;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                        BYTE_PAN : 2;
		unsigned int                  ROW_SCAN_START : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT09 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MAX_ROW_SCAN : 5;
		unsigned int                V_BLANK_START_B9 : 1;
		unsigned int                     LINE_CMP_B9 : 1;
		unsigned int              DOUBLE_CHAR_HEIGHT : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              DOUBLE_CHAR_HEIGHT : 1;
		unsigned int                     LINE_CMP_B9 : 1;
		unsigned int                V_BLANK_START_B9 : 1;
		unsigned int                    MAX_ROW_SCAN : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CURSOR_START : 5;
		unsigned int                  CURSOR_DISABLE : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                  CURSOR_DISABLE : 1;
		unsigned int                    CURSOR_START : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CURSOR_END : 5;
		unsigned int                     CURSOR_SKEW : 2;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                     CURSOR_SKEW : 2;
		unsigned int                      CURSOR_END : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0C {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DISP_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      DISP_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0D {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DISP_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      DISP_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0E {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CURSOR_LOC_HI : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   CURSOR_LOC_HI : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0F {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CURSOR_LOC_LO : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   CURSOR_LOC_LO : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    V_SYNC_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    V_SYNC_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      V_SYNC_END : 4;
		unsigned int                      V_INTR_CLR : 1;
		unsigned int                       V_INTR_EN : 1;
		unsigned int                SEL5_REFRESH_CYC : 1;
		unsigned int                    C0T7_WR_ONLY : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    C0T7_WR_ONLY : 1;
		unsigned int                SEL5_REFRESH_CYC : 1;
		unsigned int                       V_INTR_EN : 1;
		unsigned int                      V_INTR_CLR : 1;
		unsigned int                      V_SYNC_END : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      V_DISP_END : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      V_DISP_END : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DISP_PITCH : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      DISP_PITCH : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   V_BLANK_START : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   V_BLANK_START : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT16 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     V_BLANK_END : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     V_BLANK_END : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT18 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        LINE_CMP : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        LINE_CMP : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT00_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       H_TOTAL_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       H_TOTAL_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT01_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    H_DISP_END_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    H_DISP_END_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT02_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 H_BLANK_START_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 H_BLANK_START_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT03_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   H_BLANK_END_S : 5;
		unsigned int                     H_DE_SKEW_S : 2;
		unsigned int              CR10CR11_R_DIS_B_M : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int              CR10CR11_R_DIS_B_M : 1;
		unsigned int                     H_DE_SKEW_S : 2;
		unsigned int                   H_BLANK_END_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT04_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  H_SYNC_START_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  H_SYNC_START_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT05_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    H_SYNC_END_S : 5;
		unsigned int                   H_SYNC_SKEW_S : 2;
		unsigned int                H_BLANK_END_B5_S : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                H_BLANK_END_B5_S : 1;
		unsigned int                   H_SYNC_SKEW_S : 2;
		unsigned int                    H_SYNC_END_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT06_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       V_TOTAL_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       V_TOTAL_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT07_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    V_TOTAL_B8_S : 1;
		unsigned int                 V_DISP_END_B8_S : 1;
		unsigned int               V_SYNC_START_B8_S : 1;
		unsigned int              V_BLANK_START_B8_S : 1;
		unsigned int                   LINE_CMP_B8_M : 1;
		unsigned int                    V_TOTAL_B9_S : 1;
		unsigned int                 V_DISP_END_B9_S : 1;
		unsigned int               V_SYNC_START_B9_S : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int               V_SYNC_START_B9_S : 1;
		unsigned int                 V_DISP_END_B9_S : 1;
		unsigned int                    V_TOTAL_B9_S : 1;
		unsigned int                   LINE_CMP_B8_M : 1;
		unsigned int              V_BLANK_START_B8_S : 1;
		unsigned int               V_SYNC_START_B8_S : 1;
		unsigned int                 V_DISP_END_B8_S : 1;
		unsigned int                    V_TOTAL_B8_S : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT08_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                ROW_SCAN_START_M : 5;
		unsigned int                      BYTE_PAN_M : 2;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                      BYTE_PAN_M : 2;
		unsigned int                ROW_SCAN_START_M : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT09_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  MAX_ROW_SCAN_S : 5;
		unsigned int              V_BLANK_START_B9_S : 1;
		unsigned int                   LINE_CMP_B9_M : 1;
		unsigned int            DOUBLE_CHAR_HEIGHT_M : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int            DOUBLE_CHAR_HEIGHT_M : 1;
		unsigned int                   LINE_CMP_B9_M : 1;
		unsigned int              V_BLANK_START_B9_S : 1;
		unsigned int                  MAX_ROW_SCAN_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0A_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CURSOR_START_S : 5;
		unsigned int                CURSOR_DISABLE_M : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                CURSOR_DISABLE_M : 1;
		unsigned int                  CURSOR_START_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0B_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CURSOR_END_S : 5;
		unsigned int                   CURSOR_SKEW_M : 2;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int                   CURSOR_SKEW_M : 2;
		unsigned int                    CURSOR_END_S : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0C_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DISP_START_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    DISP_START_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0D_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DISP_START_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    DISP_START_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0E_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CURSOR_LOC_HI_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 CURSOR_LOC_HI_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT0F_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CURSOR_LOC_LO_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 CURSOR_LOC_LO_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT10_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  V_SYNC_START_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  V_SYNC_START_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT11_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    V_SYNC_END_S : 4;
		unsigned int                    V_INTR_CLR_M : 1;
		unsigned int                     V_INTR_EN_M : 1;
		unsigned int              SEL5_REFRESH_CYC_M : 1;
		unsigned int                  C0T7_WR_ONLY_M : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                  C0T7_WR_ONLY_M : 1;
		unsigned int              SEL5_REFRESH_CYC_M : 1;
		unsigned int                     V_INTR_EN_M : 1;
		unsigned int                    V_INTR_CLR_M : 1;
		unsigned int                    V_SYNC_END_S : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT12_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    V_DISP_END_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    V_DISP_END_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT13_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DISP_PITCH_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    DISP_PITCH_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT15_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 V_BLANK_START_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                 V_BLANK_START_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT16_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   V_BLANK_END_S : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                   V_BLANK_END_S : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT18_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      LINE_CMP_M : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                      LINE_CMP_M : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTRX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_IDX : 5;
		unsigned int                 ATTR_PAL_RW_ENB : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                 ATTR_PAL_RW_ENB : 1;
		unsigned int                        ATTR_IDX : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTRDW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       ATTR_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       ATTR_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTRDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       ATTR_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       ATTR_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR00 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR01 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR02 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR03 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR04 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR05 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR06 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR07 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR08 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR09 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0C {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0D {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0E {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR0F {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ATTR_PAL : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                        ATTR_PAL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  ATTR_GRPH_MODE : 1;
		unsigned int                    ATTR_MONO_EN : 1;
		unsigned int                   ATTR_LGRPH_EN : 1;
		unsigned int                   ATTR_BLINK_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 ATTR_PANTOPONLY : 1;
		unsigned int                    ATTR_PCLKBY2 : 1;
		unsigned int                    ATTR_CSEL_EN : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    ATTR_CSEL_EN : 1;
		unsigned int                    ATTR_PCLKBY2 : 1;
		unsigned int                 ATTR_PANTOPONLY : 1;
		unsigned int                                 : 1;
		unsigned int                   ATTR_BLINK_EN : 1;
		unsigned int                   ATTR_LGRPH_EN : 1;
		unsigned int                    ATTR_MONO_EN : 1;
		unsigned int                  ATTR_GRPH_MODE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       ATTR_OVSC : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       ATTR_OVSC : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ATTR_MAP_EN : 4;
		unsigned int                      ATTR_VSMUX : 2;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                      ATTR_VSMUX : 2;
		unsigned int                     ATTR_MAP_EN : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       ATTR_PPAN : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                       ATTR_PPAN : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ATTR14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      ATTR_CSEL1 : 2;
		unsigned int                      ATTR_CSEL2 : 2;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                      ATTR_CSEL2 : 2;
		unsigned int                      ATTR_CSEL1 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VCLK_ECP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VCLK_SRC_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                     VCLK_INVERT : 1;
		unsigned int               PIXCLK_SRC_INVERT : 1;
		unsigned int               PIXCLK_ALWAYS_ONb : 1;
		unsigned int           PIXCLK_DAC_ALWAYS_ONb : 1;
		unsigned int                         ECP_DIV : 2;
		unsigned int                                 : 8;
		unsigned int                    ECP_FORCE_ON : 1;
		unsigned int                 SUBCLK_FORCE_ON : 1;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                 SUBCLK_FORCE_ON : 1;
		unsigned int                    ECP_FORCE_ON : 1;
		unsigned int                                 : 8;
		unsigned int                         ECP_DIV : 2;
		unsigned int           PIXCLK_DAC_ALWAYS_ONb : 1;
		unsigned int               PIXCLK_ALWAYS_ONb : 1;
		unsigned int               PIXCLK_SRC_INVERT : 1;
		unsigned int                     VCLK_INVERT : 1;
		unsigned int                                 : 2;
		unsigned int                    VCLK_SRC_SEL : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_TEST_MACRO_RW_WRITE {
	struct {
#if		defined(qLittleEndian)
		unsigned int            TEST_MACRO_RW_WRITE1 : 14;
		unsigned int            TEST_MACRO_RW_WRITE2 : 14;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int            TEST_MACRO_RW_WRITE2 : 14;
		unsigned int            TEST_MACRO_RW_WRITE1 : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_TEST_MACRO_RW_READ {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEST_MACRO_RW_READ1 : 16;
		unsigned int             TEST_MACRO_RW_READ2 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int             TEST_MACRO_RW_READ2 : 16;
		unsigned int             TEST_MACRO_RW_READ1 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_TEST_MACRO_RW_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int              TEST_MACRO_RW_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int              TEST_MACRO_RW_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_TEST_MACRO_RW_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEST_MACRO_RW_START : 1;
		unsigned int                TEST_MACRO_RW_OP : 3;
		unsigned int              TEST_MACRO_RW_MODE : 2;
		unsigned int      TEST_MACRO_RW_MISMATCH_SEL : 9;
		unsigned int          TEST_MACRO_RW_MISMATCH : 1;
		unsigned int            TEST_MACRO_RW_ENABLE : 1;
		unsigned int   TEST_MACRO_RW_SCLK_NEG_ENABLE : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int   TEST_MACRO_RW_SCLK_NEG_ENABLE : 1;
		unsigned int            TEST_MACRO_RW_ENABLE : 1;
		unsigned int          TEST_MACRO_RW_MISMATCH : 1;
		unsigned int      TEST_MACRO_RW_MISMATCH_SEL : 9;
		unsigned int              TEST_MACRO_RW_MODE : 2;
		unsigned int                TEST_MACRO_RW_OP : 3;
		unsigned int             TEST_MACRO_RW_START : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PIXCLKS_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PIX2CLK_SRC_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                  PIX2CLK_INVERT : 1;
		unsigned int              PIX2CLK_SRC_INVERT : 1;
		unsigned int              PIX2CLK_ALWAYS_ONb : 1;
		unsigned int          PIX2CLK_DAC_ALWAYS_ONb : 1;
		unsigned int               PIXCLK_TV_SRC_SEL : 1;
		unsigned int                                 : 2;
		unsigned int         PIXCLK_BLEND_ALWAYS_ONb : 1;
		unsigned int            PIXCLK_GV_ALWAYS_ONb : 1;
		unsigned int      PIXCLK_DIG_TMDS_ALWAYS_ONb : 1;
		unsigned int          PIXCLK_LVDS_ALWAYS_ONb : 1;
		unsigned int          PIXCLK_TMDS_ALWAYS_ONb : 1;
		unsigned int                                 : 4;
		unsigned int                DVOCLKC_IN_PHASE : 1;
		unsigned int                                 : 1;
		unsigned int                DVOCLKD_IN_PHASE : 1;
		unsigned int                                 : 1;
		unsigned int                 DVOCLKC_SKW_CTL : 3;
		unsigned int                                 : 1;
		unsigned int                 DVOCLKD_SKW_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 DVOCLKD_SKW_CTL : 3;
		unsigned int                                 : 1;
		unsigned int                 DVOCLKC_SKW_CTL : 3;
		unsigned int                                 : 1;
		unsigned int                DVOCLKD_IN_PHASE : 1;
		unsigned int                                 : 1;
		unsigned int                DVOCLKC_IN_PHASE : 1;
		unsigned int                                 : 4;
		unsigned int          PIXCLK_TMDS_ALWAYS_ONb : 1;
		unsigned int          PIXCLK_LVDS_ALWAYS_ONb : 1;
		unsigned int      PIXCLK_DIG_TMDS_ALWAYS_ONb : 1;
		unsigned int            PIXCLK_GV_ALWAYS_ONb : 1;
		unsigned int         PIXCLK_BLEND_ALWAYS_ONb : 1;
		unsigned int                                 : 2;
		unsigned int               PIXCLK_TV_SRC_SEL : 1;
		unsigned int          PIX2CLK_DAC_ALWAYS_ONb : 1;
		unsigned int              PIX2CLK_ALWAYS_ONb : 1;
		unsigned int              PIX2CLK_SRC_INVERT : 1;
		unsigned int                  PIX2CLK_INVERT : 1;
		unsigned int                                 : 2;
		unsigned int                 PIX2CLK_SRC_SEL : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CRTC_VBLANK_CUR : 1;
		unsigned int                CRTC_VBLANK_SAVE : 1;
		unsigned int                 CRTC_VLINE_SYNC : 1;
		unsigned int                      CRTC_FRAME : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                      CRTC_FRAME : 1;
		unsigned int                 CRTC_VLINE_SYNC : 1;
		unsigned int                CRTC_VBLANK_SAVE : 1;
		unsigned int                 CRTC_VBLANK_CUR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIO_VGA_DDC {
	struct {
#if		defined(qLittleEndian)
		unsigned int             VGA_DCC_DATA_OUTPUT : 1;
		unsigned int              VGA_DDC_CLK_OUTPUT : 1;
		unsigned int                                 : 6;
		unsigned int              VGA_DDC_DATA_INPUT : 1;
		unsigned int               VGA_DDC_CLK_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int             VGA_DDC_DATA_OUT_EN : 1;
		unsigned int              VGA_DDC_CLK_OUT_EN : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int              VGA_DDC_CLK_OUT_EN : 1;
		unsigned int             VGA_DDC_DATA_OUT_EN : 1;
		unsigned int                                 : 6;
		unsigned int               VGA_DDC_CLK_INPUT : 1;
		unsigned int              VGA_DDC_DATA_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int              VGA_DDC_CLK_OUTPUT : 1;
		unsigned int             VGA_DCC_DATA_OUTPUT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIO_DVI_DDC {
	struct {
#if		defined(qLittleEndian)
		unsigned int             DVI_DDC_DATA_OUTPUT : 1;
		unsigned int              DVI_DDC_CLK_OUTPUT : 1;
		unsigned int                                 : 6;
		unsigned int              DVI_DDC_DATA_INPUT : 1;
		unsigned int               DVI_DDC_CLK_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int             DVI_DDC_DATA_OUT_EN : 1;
		unsigned int              DVI_DDC_CLK_OUT_EN : 1;
		unsigned int                                 : 2;
		unsigned int         SW_WANTS_TO_USE_DVI_I2C : 1;
		unsigned int           SW_DONE_USING_DVI_I2C : 1;
		unsigned int              ABORT_HDCP_DVI_I2C : 1;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int              ABORT_HDCP_DVI_I2C : 1;
		unsigned int           SW_DONE_USING_DVI_I2C : 1;
		unsigned int         SW_WANTS_TO_USE_DVI_I2C : 1;
		unsigned int                                 : 2;
		unsigned int              DVI_DDC_CLK_OUT_EN : 1;
		unsigned int             DVI_DDC_DATA_OUT_EN : 1;
		unsigned int                                 : 6;
		unsigned int               DVI_DDC_CLK_INPUT : 1;
		unsigned int              DVI_DDC_DATA_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int              DVI_DDC_CLK_OUTPUT : 1;
		unsigned int             DVI_DDC_DATA_OUTPUT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIO_MONID {
	struct {
#if		defined(qLittleEndian)
		unsigned int             GPIO_MONID_0_OUTPUT : 1;
		unsigned int             GPIO_MONID_1_OUTPUT : 1;
		unsigned int                                 : 6;
		unsigned int              GPIO_MONID_0_INPUT : 1;
		unsigned int              GPIO_MONID_1_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int             GPIO_MONID_0_OUT_EN : 1;
		unsigned int             GPIO_MONID_1_OUT_EN : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int             GPIO_MONID_1_OUT_EN : 1;
		unsigned int             GPIO_MONID_0_OUT_EN : 1;
		unsigned int                                 : 6;
		unsigned int              GPIO_MONID_1_INPUT : 1;
		unsigned int              GPIO_MONID_0_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int             GPIO_MONID_1_OUTPUT : 1;
		unsigned int             GPIO_MONID_0_OUTPUT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIO_CRT2_DDC {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CRT2_DDC_DATA_OUTPUT : 1;
		unsigned int             CRT2_DDC_CLK_OUTPUT : 1;
		unsigned int                                 : 6;
		unsigned int             CRT2_DDC_DATA_INPUT : 1;
		unsigned int              CRT2_DDC_CLK_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int            CRT2_DDC_DATA_OUT_EN : 1;
		unsigned int             CRT2_DDC_CLK_OUT_EN : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int             CRT2_DDC_CLK_OUT_EN : 1;
		unsigned int            CRT2_DDC_DATA_OUT_EN : 1;
		unsigned int                                 : 6;
		unsigned int              CRT2_DDC_CLK_INPUT : 1;
		unsigned int             CRT2_DDC_DATA_INPUT : 1;
		unsigned int                                 : 6;
		unsigned int             CRT2_DDC_CLK_OUTPUT : 1;
		unsigned int            CRT2_DDC_DATA_OUTPUT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PALETTE_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PALETTE_W_INDEX : 8;
		unsigned int                                 : 8;
		unsigned int                 PALETTE_R_INDEX : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 PALETTE_R_INDEX : 8;
		unsigned int                                 : 8;
		unsigned int                 PALETTE_W_INDEX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PALETTE_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PALETTE_DATA_B : 8;
		unsigned int                  PALETTE_DATA_G : 8;
		unsigned int                  PALETTE_DATA_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                  PALETTE_DATA_R : 8;
		unsigned int                  PALETTE_DATA_G : 8;
		unsigned int                  PALETTE_DATA_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PALETTE_30_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PALETTE_DATA_B : 10;
		unsigned int                  PALETTE_DATA_G : 10;
		unsigned int                  PALETTE_DATA_R : 10;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                  PALETTE_DATA_R : 10;
		unsigned int                  PALETTE_DATA_G : 10;
		unsigned int                  PALETTE_DATA_B : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_H_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CRTC_H_TOTAL : 10;
		unsigned int                                 : 6;
		unsigned int                     CRTC_H_DISP : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                     CRTC_H_DISP : 9;
		unsigned int                                 : 6;
		unsigned int                    CRTC_H_TOTAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_H_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CRTC_H_SYNC_STRT_PIX : 3;
		unsigned int           CRTC_H_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
		unsigned int                 CRTC_H_SYNC_WID : 6;
		unsigned int                                 : 1;
		unsigned int                 CRTC_H_SYNC_POL : 1;
		unsigned int           CRTC_H_SYNC_SKEW_TUNE : 3;
		unsigned int                                 : 1;
		unsigned int      CRTC_H_SYNC_SKEW_TUNE_MODE : 1;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int      CRTC_H_SYNC_SKEW_TUNE_MODE : 1;
		unsigned int                                 : 1;
		unsigned int           CRTC_H_SYNC_SKEW_TUNE : 3;
		unsigned int                 CRTC_H_SYNC_POL : 1;
		unsigned int                                 : 1;
		unsigned int                 CRTC_H_SYNC_WID : 6;
		unsigned int                                 : 3;
		unsigned int           CRTC_H_SYNC_STRT_CHAR : 10;
		unsigned int            CRTC_H_SYNC_STRT_PIX : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_V_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CRTC_V_TOTAL : 12;
		unsigned int                                 : 4;
		unsigned int                     CRTC_V_DISP : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                     CRTC_V_DISP : 12;
		unsigned int                                 : 4;
		unsigned int                    CRTC_V_TOTAL : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_V_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC_V_SYNC_STRT : 12;
		unsigned int                                 : 4;
		unsigned int                 CRTC_V_SYNC_WID : 5;
		unsigned int                                 : 2;
		unsigned int                 CRTC_V_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 CRTC_V_SYNC_POL : 1;
		unsigned int                                 : 2;
		unsigned int                 CRTC_V_SYNC_WID : 5;
		unsigned int                                 : 4;
		unsigned int                CRTC_V_SYNC_STRT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_VLINE_CRNT_VLINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CRTC_VLINE : 12;
		unsigned int                                 : 4;
		unsigned int                 CRTC_CRNT_VLINE : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 CRTC_CRNT_VLINE : 12;
		unsigned int                                 : 4;
		unsigned int                      CRTC_VLINE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_CRNT_FRAME {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CRTC_CRNT_FRAME : 21;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int                 CRTC_CRNT_FRAME : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_GUI_TRIG_VLINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int       CRTC_GUI_TRIG_VLINE_START : 12;
		unsigned int                                 : 3;
		unsigned int         CRTC_GUI_TRIG_VLINE_INV : 1;
		unsigned int         CRTC_GUI_TRIG_VLINE_END : 12;
		unsigned int                                 : 2;
		unsigned int       CRTC_GUI_TRIG_VLINE_STALL : 1;
		unsigned int             CRTC_GUI_TRIG_VLINE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int             CRTC_GUI_TRIG_VLINE : 1;
		unsigned int       CRTC_GUI_TRIG_VLINE_STALL : 1;
		unsigned int                                 : 2;
		unsigned int         CRTC_GUI_TRIG_VLINE_END : 12;
		unsigned int         CRTC_GUI_TRIG_VLINE_INV : 1;
		unsigned int                                 : 3;
		unsigned int       CRTC_GUI_TRIG_VLINE_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int         CRTC_GUI_TRIG_BYPASS_EN : 1;
		unsigned int           GUI_TRIG_VLINE_BYPASS : 1;
		unsigned int          GUI_TRIG_OFFSET_BYPASS : 1;
		unsigned int       GUI_TRIG_PITCH_ADD_BYPASS : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int       GUI_TRIG_PITCH_ADD_BYPASS : 1;
		unsigned int          GUI_TRIG_OFFSET_BYPASS : 1;
		unsigned int           GUI_TRIG_VLINE_BYPASS : 1;
		unsigned int         CRTC_GUI_TRIG_BYPASS_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_OFFSET_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int               CRTC_OFFSET_RIGHT : 27;
		unsigned int                                 : 3;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int                CRTC_OFFSET_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                CRTC_OFFSET_LOCK : 1;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int                                 : 3;
		unsigned int               CRTC_OFFSET_RIGHT : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CRTC_OFFSET : 27;
		unsigned int                                 : 3;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int                CRTC_OFFSET_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                CRTC_OFFSET_LOCK : 1;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int                                 : 3;
		unsigned int                     CRTC_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_OFFSET_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CRTC_TILE_LINE : 4;
		unsigned int            CRTC_TILE_LINE_RIGHT : 4;
		unsigned int                                 : 6;
		unsigned int              CRTC_TILE_EN_RIGHT : 1;
		unsigned int                    CRTC_TILE_EN : 1;
		unsigned int           CRTC_OFFSET_FLIP_CNTL : 1;
		unsigned int           CRTC_STEREO_OFFSET_EN : 1;
		unsigned int             CRTC_STEREO_SYNC_EN : 2;
		unsigned int         CRTC_STEREO_SYNC_OUT_EN : 1;
		unsigned int                CRTC_STEREO_SYNC : 1;
		unsigned int                                 : 6;
		unsigned int    CRTC_GUI_TRIG_OFFSET_LEFT_EN : 1;
		unsigned int   CRTC_GUI_TRIG_OFFSET_RIGHT_EN : 1;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int                CRTC_OFFSET_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                CRTC_OFFSET_LOCK : 1;
		unsigned int            CRTC_GUI_TRIG_OFFSET : 1;
		unsigned int   CRTC_GUI_TRIG_OFFSET_RIGHT_EN : 1;
		unsigned int    CRTC_GUI_TRIG_OFFSET_LEFT_EN : 1;
		unsigned int                                 : 6;
		unsigned int                CRTC_STEREO_SYNC : 1;
		unsigned int         CRTC_STEREO_SYNC_OUT_EN : 1;
		unsigned int             CRTC_STEREO_SYNC_EN : 2;
		unsigned int           CRTC_STEREO_OFFSET_EN : 1;
		unsigned int           CRTC_OFFSET_FLIP_CNTL : 1;
		unsigned int                    CRTC_TILE_EN : 1;
		unsigned int              CRTC_TILE_EN_RIGHT : 1;
		unsigned int                                 : 6;
		unsigned int            CRTC_TILE_LINE_RIGHT : 4;
		unsigned int                  CRTC_TILE_LINE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CRTC_PITCH : 11;
		unsigned int                                 : 5;
		unsigned int                CRTC_PITCH_RIGHT : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                CRTC_PITCH_RIGHT : 11;
		unsigned int                                 : 5;
		unsigned int                      CRTC_PITCH : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       OVR_CLR_B : 8;
		unsigned int                       OVR_CLR_G : 8;
		unsigned int                       OVR_CLR_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                       OVR_CLR_R : 8;
		unsigned int                       OVR_CLR_G : 8;
		unsigned int                       OVR_CLR_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR_WID_LEFT_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   OVR_WID_RIGHT : 7;
		unsigned int                                 : 9;
		unsigned int                    OVR_WID_LEFT : 7;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                    OVR_WID_LEFT : 7;
		unsigned int                                 : 9;
		unsigned int                   OVR_WID_RIGHT : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR_WID_TOP_BOTTOM {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  OVR_WID_BOTTOM : 10;
		unsigned int                                 : 6;
		unsigned int                     OVR_WID_TOP : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                     OVR_WID_TOP : 10;
		unsigned int                                 : 6;
		unsigned int                  OVR_WID_BOTTOM : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISPLAY_BASE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int               DISPLAY_BASE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               DISPLAY_BASE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT_VH_COUNTS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 SNAPSHOT_HCOUNT : 10;
		unsigned int                                 : 6;
		unsigned int                 SNAPSHOT_VCOUNT : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 SNAPSHOT_VCOUNT : 12;
		unsigned int                                 : 6;
		unsigned int                 SNAPSHOT_HCOUNT : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT_F_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                SNAPSHOT_F_COUNT : 21;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int                SNAPSHOT_F_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union N_VIF_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 N_VIF_COUNT_VAL : 10;
		unsigned int                                 : 21;
		unsigned int              GENLOCK_SOURCE_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              GENLOCK_SOURCE_SEL : 1;
		unsigned int                                 : 21;
		unsigned int                 N_VIF_COUNT_VAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT_VIF_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int             LSNAPSHOT_VIF_COUNT : 10;
		unsigned int             USNAPSHOT_VIF_COUNT : 11;
		unsigned int                                 : 3;
		unsigned int          AUTO_SNAPSHOT_TAKEN_RD : 1;
		unsigned int             MANUAL_SNAPSHOT_NOW : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int             MANUAL_SNAPSHOT_NOW : 1;
		unsigned int          AUTO_SNAPSHOT_TAKEN_RD : 1;
		unsigned int                                 : 3;
		unsigned int             USNAPSHOT_VIF_COUNT : 11;
		unsigned int             LSNAPSHOT_VIF_COUNT : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_CRTC_H_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 FP_CRTC_H_TOTAL : 10;
		unsigned int                                 : 6;
		unsigned int                  FP_CRTC_H_DISP : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                  FP_CRTC_H_DISP : 9;
		unsigned int                                 : 6;
		unsigned int                 FP_CRTC_H_TOTAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_CRTC_V_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 FP_CRTC_V_TOTAL : 12;
		unsigned int                                 : 4;
		unsigned int                  FP_CRTC_V_DISP : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                  FP_CRTC_V_DISP : 12;
		unsigned int                                 : 4;
		unsigned int                 FP_CRTC_V_TOTAL : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT_CRTC_H_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int       CRT_CRTC_H_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
		unsigned int             CRT_CRTC_H_SYNC_WID : 6;
		unsigned int                                 : 10;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 10;
		unsigned int             CRT_CRTC_H_SYNC_WID : 6;
		unsigned int                                 : 3;
		unsigned int       CRT_CRTC_H_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRT_CRTC_V_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CRT_CRTC_V_SYNC_STRT : 12;
		unsigned int                                 : 4;
		unsigned int             CRT_CRTC_V_SYNC_WID : 5;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int             CRT_CRTC_V_SYNC_WID : 5;
		unsigned int                                 : 4;
		unsigned int            CRT_CRTC_V_SYNC_STRT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CUR_OFFSET : 27;
		unsigned int                                 : 4;
		unsigned int                        CUR_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CUR_LOCK : 1;
		unsigned int                                 : 4;
		unsigned int                      CUR_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR_HORZ_VERT_POSN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CUR_VERT_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                   CUR_HORZ_POSN : 14;
		unsigned int                                 : 1;
		unsigned int                        CUR_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CUR_LOCK : 1;
		unsigned int                                 : 1;
		unsigned int                   CUR_HORZ_POSN : 14;
		unsigned int                                 : 4;
		unsigned int                   CUR_VERT_POSN : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR_HORZ_VERT_OFF {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CUR_VERT_OFF : 6;
		unsigned int                                 : 10;
		unsigned int                    CUR_HORZ_OFF : 6;
		unsigned int                                 : 9;
		unsigned int                        CUR_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CUR_LOCK : 1;
		unsigned int                                 : 9;
		unsigned int                    CUR_HORZ_OFF : 6;
		unsigned int                                 : 10;
		unsigned int                    CUR_VERT_OFF : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR_CLR0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CUR_CLR0_B : 8;
		unsigned int                      CUR_CLR0_G : 8;
		unsigned int                      CUR_CLR0_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                      CUR_CLR0_R : 8;
		unsigned int                      CUR_CLR0_G : 8;
		unsigned int                      CUR_CLR0_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR_CLR1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CUR_CLR1_B : 8;
		unsigned int                      CUR_CLR1_G : 8;
		unsigned int                      CUR_CLR1_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                      CUR_CLR1_R : 8;
		unsigned int                      CUR_CLR1_G : 8;
		unsigned int                      CUR_CLR1_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_HORZ_VERT_ACTIVE {
	struct {
#if		defined(qLittleEndian)
		unsigned int             FP_VERT_ACTIVE_SIZE : 12;
		unsigned int                                 : 4;
		unsigned int             FP_HORZ_ACTIVE_SIZE : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int             FP_HORZ_ACTIVE_SIZE : 9;
		unsigned int                                 : 4;
		unsigned int             FP_VERT_ACTIVE_SIZE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC_MORE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int        CRTC_HORZ_BLANK_MODE_SEL : 1;
		unsigned int        CRTC_VERT_BLANK_MODE_SEL : 1;
		unsigned int        CRTC_AUTO_HORZ_CENTER_EN : 1;
		unsigned int        CRTC_AUTO_VERT_CENTER_EN : 1;
		unsigned int         CRTC_H_CUTOFF_ACTIVE_EN : 1;
		unsigned int         CRTC_V_CUTOFF_ACTIVE_EN : 1;
		unsigned int        FORCE_H_EVEN_PIXEL_COUNT : 1;
		unsigned int                                 : 1;
		unsigned int                 CRTC_RST_HCOUNT : 1;
		unsigned int                 CRTC_RST_VCOUNT : 1;
		unsigned int                  HCOUNT_RST_POS : 1;
		unsigned int                  VCOUNT_RST_POS : 1;
		unsigned int                                 : 12;
		unsigned int          RMX_H_FILT_COEFFICIENT : 3;
		unsigned int                 RMX_H_FILTER_EN : 1;
		unsigned int          RMX_V_FILT_COEFFICIENT : 3;
		unsigned int                 RMX_V_FILTER_EN : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                 RMX_V_FILTER_EN : 1;
		unsigned int          RMX_V_FILT_COEFFICIENT : 3;
		unsigned int                 RMX_H_FILTER_EN : 1;
		unsigned int          RMX_H_FILT_COEFFICIENT : 3;
		unsigned int                                 : 12;
		unsigned int                  VCOUNT_RST_POS : 1;
		unsigned int                  HCOUNT_RST_POS : 1;
		unsigned int                 CRTC_RST_VCOUNT : 1;
		unsigned int                 CRTC_RST_HCOUNT : 1;
		unsigned int                                 : 1;
		unsigned int        FORCE_H_EVEN_PIXEL_COUNT : 1;
		unsigned int         CRTC_V_CUTOFF_ACTIVE_EN : 1;
		unsigned int         CRTC_H_CUTOFF_ACTIVE_EN : 1;
		unsigned int        CRTC_AUTO_VERT_CENTER_EN : 1;
		unsigned int        CRTC_AUTO_HORZ_CENTER_EN : 1;
		unsigned int        CRTC_VERT_BLANK_MODE_SEL : 1;
		unsigned int        CRTC_HORZ_BLANK_MODE_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_EXT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DAC2_FORCE_BLANK_OFF_EN : 1;
		unsigned int              DAC2_FORCE_DATA_EN : 1;
		unsigned int                                 : 2;
		unsigned int          DAC_FORCE_BLANK_OFF_EN : 1;
		unsigned int               DAC_FORCE_DATA_EN : 1;
		unsigned int              DAC_FORCE_DATA_SEL : 2;
		unsigned int                  DAC_FORCE_DATA : 10;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int                  DAC_FORCE_DATA : 10;
		unsigned int              DAC_FORCE_DATA_SEL : 2;
		unsigned int               DAC_FORCE_DATA_EN : 1;
		unsigned int          DAC_FORCE_BLANK_OFF_EN : 1;
		unsigned int                                 : 2;
		unsigned int              DAC2_FORCE_DATA_EN : 1;
		unsigned int         DAC2_FORCE_BLANK_OFF_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           FP_ON : 1;
		unsigned int                     FP_BLANK_EN : 1;
		unsigned int                         TMDS_EN : 1;
		unsigned int                    PANEL_FORMAT : 1;
		unsigned int                      NO_OF_GREY : 2;
		unsigned int                       FP_RST_FM : 1;
		unsigned int                      FP_EN_TMDS : 1;
		unsigned int                 FP_DETECT_SENSE : 1;
		unsigned int               FP_DETECT_INT_POL : 1;
		unsigned int                                 : 2;
		unsigned int                    FP_DETECT_EN : 1;
		unsigned int                      FP_SRC_SEL : 1;
		unsigned int               FP_USE_VGA_HVSYNC : 1;
		unsigned int        FP_USE_VGA_SYNC_POLARITY : 1;
		unsigned int           CRTC_DONT_SHADOW_VPAR : 1;
		unsigned int           CRTC_DONT_SHADOW_HEND : 1;
		unsigned int          CRTC_USE_SHADOWED_VEND : 1;
		unsigned int        CRTC_USE_SHADOWED_ROWCUR : 1;
		unsigned int           RMX_HVSYNC_CONTROL_EN : 1;
		unsigned int                    DFP_SYNC_SEL : 1;
		unsigned int                  CRTC_LOCK_8DOT : 1;
		unsigned int                    CRT_SYNC_SEL : 1;
		unsigned int                FP_USE_SHADOW_EN : 1;
		unsigned int                 DONT_RST_CHAREN : 1;
		unsigned int                CRT_SYNC_ALT_SEL : 1;
		unsigned int CRTC_USE_NONSHADOW_HPARAMS_FOR_BLANK : 1;
		unsigned int CRTC_USE_NONSHADOW_VPARAMS_FOR_BLANK : 1;
		unsigned int        CRTC_VGA_XOVERSCAN_COLOR : 1;
		unsigned int    CRTC_VGA_XOVERSCAN_DIVBY2_EN : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int    CRTC_VGA_XOVERSCAN_DIVBY2_EN : 1;
		unsigned int        CRTC_VGA_XOVERSCAN_COLOR : 1;
		unsigned int CRTC_USE_NONSHADOW_VPARAMS_FOR_BLANK : 1;
		unsigned int CRTC_USE_NONSHADOW_HPARAMS_FOR_BLANK : 1;
		unsigned int                CRT_SYNC_ALT_SEL : 1;
		unsigned int                 DONT_RST_CHAREN : 1;
		unsigned int                FP_USE_SHADOW_EN : 1;
		unsigned int                    CRT_SYNC_SEL : 1;
		unsigned int                  CRTC_LOCK_8DOT : 1;
		unsigned int                    DFP_SYNC_SEL : 1;
		unsigned int           RMX_HVSYNC_CONTROL_EN : 1;
		unsigned int        CRTC_USE_SHADOWED_ROWCUR : 1;
		unsigned int          CRTC_USE_SHADOWED_VEND : 1;
		unsigned int           CRTC_DONT_SHADOW_HEND : 1;
		unsigned int           CRTC_DONT_SHADOW_VPAR : 1;
		unsigned int        FP_USE_VGA_SYNC_POLARITY : 1;
		unsigned int               FP_USE_VGA_HVSYNC : 1;
		unsigned int                      FP_SRC_SEL : 1;
		unsigned int                    FP_DETECT_EN : 1;
		unsigned int                                 : 2;
		unsigned int               FP_DETECT_INT_POL : 1;
		unsigned int                 FP_DETECT_SENSE : 1;
		unsigned int                      FP_EN_TMDS : 1;
		unsigned int                       FP_RST_FM : 1;
		unsigned int                      NO_OF_GREY : 2;
		unsigned int                    PANEL_FORMAT : 1;
		unsigned int                         TMDS_EN : 1;
		unsigned int                     FP_BLANK_EN : 1;
		unsigned int                           FP_ON : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP2_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                    FP2_BLANK_EN : 1;
		unsigned int                          FP2_ON : 1;
		unsigned int                FP2_PANEL_FORMAT : 1;
		unsigned int                  FP2_NO_OF_GREY : 2;
		unsigned int                      FP2_RST_FM : 1;
		unsigned int                                 : 1;
		unsigned int                FP2_DETECT_SENSE : 1;
		unsigned int              FP2_DETECT_INT_POL : 1;
		unsigned int                                 : 3;
		unsigned int                     FP2_SRC_SEL : 1;
		unsigned int                                 : 2;
		unsigned int                      FP2_FP_POL : 1;
		unsigned int                      FP2_LP_POL : 1;
		unsigned int                     FP2_SCK_POL : 1;
		unsigned int                    FP2_LCD_CNTL : 3;
		unsigned int                 FP2_PAD_FLOP_EN : 1;
		unsigned int                      FP2_CRC_EN : 1;
		unsigned int                 FP2_CRC_READ_EN : 1;
		unsigned int                          DVO_EN : 1;
		unsigned int                   DVO_TMDS_CTL3 : 1;
		unsigned int                    DVO_RATE_SEL : 1;
		unsigned int                  DVO_CLOCK_MODE : 1;
		unsigned int                                 : 1;
		unsigned int               DVO_TMDS_CTL3_SEL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int               DVO_TMDS_CTL3_SEL : 2;
		unsigned int                                 : 1;
		unsigned int                  DVO_CLOCK_MODE : 1;
		unsigned int                    DVO_RATE_SEL : 1;
		unsigned int                   DVO_TMDS_CTL3 : 1;
		unsigned int                          DVO_EN : 1;
		unsigned int                 FP2_CRC_READ_EN : 1;
		unsigned int                      FP2_CRC_EN : 1;
		unsigned int                 FP2_PAD_FLOP_EN : 1;
		unsigned int                    FP2_LCD_CNTL : 3;
		unsigned int                     FP2_SCK_POL : 1;
		unsigned int                      FP2_LP_POL : 1;
		unsigned int                      FP2_FP_POL : 1;
		unsigned int                                 : 2;
		unsigned int                     FP2_SRC_SEL : 1;
		unsigned int                                 : 3;
		unsigned int              FP2_DETECT_INT_POL : 1;
		unsigned int                FP2_DETECT_SENSE : 1;
		unsigned int                                 : 1;
		unsigned int                      FP2_RST_FM : 1;
		unsigned int                  FP2_NO_OF_GREY : 2;
		unsigned int                FP2_PANEL_FORMAT : 1;
		unsigned int                          FP2_ON : 1;
		unsigned int                    FP2_BLANK_EN : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_HORZ_STRETCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int           FP_HORZ_STRETCH_RATIO : 16;
		unsigned int              FP_HORZ_PANEL_SIZE : 9;
		unsigned int              FP_HORZ_STRETCH_EN : 1;
		unsigned int            FP_HORZ_STRETCH_MODE : 1;
		unsigned int              FP_AUTO_HORZ_RATIO : 1;
		unsigned int                 FP_LOOP_STRETCH : 3;
		unsigned int         RMX_AUTO_RATIO_HORZ_INC : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int         RMX_AUTO_RATIO_HORZ_INC : 1;
		unsigned int                 FP_LOOP_STRETCH : 3;
		unsigned int              FP_AUTO_HORZ_RATIO : 1;
		unsigned int            FP_HORZ_STRETCH_MODE : 1;
		unsigned int              FP_HORZ_STRETCH_EN : 1;
		unsigned int              FP_HORZ_PANEL_SIZE : 9;
		unsigned int           FP_HORZ_STRETCH_RATIO : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_VERT_STRETCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int           FP_VERT_STRETCH_RATIO : 12;
		unsigned int              FP_VERT_PANEL_SIZE : 12;
		unsigned int                                 : 1;
		unsigned int              FP_VERT_STRETCH_EN : 1;
		unsigned int            FP_VERT_STRETCH_MODE : 1;
		unsigned int              FP_AUTO_VERT_RATIO : 1;
		unsigned int               RMX_H_FILTER_INIT : 1;
		unsigned int               RMX_V_FILTER_INIT : 1;
		unsigned int                                 : 1;
		unsigned int         RMX_AUTO_RATIO_VERT_INC : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int         RMX_AUTO_RATIO_VERT_INC : 1;
		unsigned int                                 : 1;
		unsigned int               RMX_V_FILTER_INIT : 1;
		unsigned int               RMX_H_FILTER_INIT : 1;
		unsigned int              FP_AUTO_VERT_RATIO : 1;
		unsigned int            FP_VERT_STRETCH_MODE : 1;
		unsigned int              FP_VERT_STRETCH_EN : 1;
		unsigned int                                 : 1;
		unsigned int              FP_VERT_PANEL_SIZE : 12;
		unsigned int           FP_VERT_STRETCH_RATIO : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TMDS_CTL0 : 1;
		unsigned int                       TMDS_CTL1 : 1;
		unsigned int                       TMDS_CTL2 : 1;
		unsigned int                       TMDS_CTL3 : 1;
		unsigned int                TMDS_DEBUG_HSYNC : 1;
		unsigned int                TMDS_DEBUG_VSYNC : 1;
		unsigned int                   TMDS_DEBUG_DE : 1;
		unsigned int                   TMDS_DEBUG_EN : 1;
		unsigned int                 TMDS_CTL_FB_SEL : 2;
		unsigned int                 TMDS_CTL_FB_DEL : 2;
		unsigned int         TMDS_STEREOSYNC_CTL_SEL : 2;
		unsigned int                                 : 2;
		unsigned int               TMDS_SYNC_CHAR_EN : 4;
		unsigned int                                 : 4;
		unsigned int                  TMDS_SYNC_CONT : 1;
		unsigned int                  TMDS_DPCUM_TST : 1;
		unsigned int                   TMDS_DPCUM_IN : 4;
		unsigned int                     TMDS_CRC_EN : 1;
		unsigned int               TMDS_RB_SWITCH_EN : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int               TMDS_RB_SWITCH_EN : 1;
		unsigned int                     TMDS_CRC_EN : 1;
		unsigned int                   TMDS_DPCUM_IN : 4;
		unsigned int                  TMDS_DPCUM_TST : 1;
		unsigned int                  TMDS_SYNC_CONT : 1;
		unsigned int                                 : 4;
		unsigned int               TMDS_SYNC_CHAR_EN : 4;
		unsigned int                                 : 2;
		unsigned int         TMDS_STEREOSYNC_CTL_SEL : 2;
		unsigned int                 TMDS_CTL_FB_DEL : 2;
		unsigned int                 TMDS_CTL_FB_SEL : 2;
		unsigned int                   TMDS_DEBUG_EN : 1;
		unsigned int                   TMDS_DEBUG_DE : 1;
		unsigned int                TMDS_DEBUG_VSYNC : 1;
		unsigned int                TMDS_DEBUG_HSYNC : 1;
		unsigned int                       TMDS_CTL3 : 1;
		unsigned int                       TMDS_CTL2 : 1;
		unsigned int                       TMDS_CTL1 : 1;
		unsigned int                       TMDS_CTL0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_SYNC_CHAR_SETA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 TMDS_SYNC_CHAR0 : 10;
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR1 : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR1 : 10;
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR0 : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_SYNC_CHAR_SETB {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 TMDS_SYNC_CHAR2 : 10;
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR3 : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR3 : 10;
		unsigned int                                 : 6;
		unsigned int                 TMDS_SYNC_CHAR2 : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_CRC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     TMDS_CRCRGB : 30;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                     TMDS_CRCRGB : 30;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_TRANSMITTER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      TMDS_PLLEN : 1;
		unsigned int                     TMDS_PLLRST : 1;
		unsigned int                   TMDS_MODE_SEL : 2;
		unsigned int                     TMDS_REGSEL : 2;
		unsigned int               TMDS_HALF_CLK_RST : 1;
		unsigned int                TMDS_RAN_PAT_RST : 1;
		unsigned int                     TMDS_TSTPIX : 10;
		unsigned int                        TMDS_REG : 10;
		unsigned int                         ICHCSEL : 1;
		unsigned int                        ITCLKSEL : 1;
		unsigned int                TMDS_RAN_PAT_SEL : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                TMDS_RAN_PAT_SEL : 1;
		unsigned int                        ITCLKSEL : 1;
		unsigned int                         ICHCSEL : 1;
		unsigned int                        TMDS_REG : 10;
		unsigned int                     TMDS_TSTPIX : 10;
		unsigned int                TMDS_RAN_PAT_RST : 1;
		unsigned int               TMDS_HALF_CLK_RST : 1;
		unsigned int                     TMDS_REGSEL : 2;
		unsigned int                   TMDS_MODE_SEL : 2;
		unsigned int                     TMDS_PLLRST : 1;
		unsigned int                      TMDS_PLLEN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_PLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     TMDS_PLLPCP : 3;
		unsigned int                     TMDS_PLLPVG : 3;
		unsigned int                     TMDS_PLLPDC : 2;
		unsigned int                     TMDS_PLLPVS : 4;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                     TMDS_PLLPVS : 4;
		unsigned int                     TMDS_PLLPDC : 2;
		unsigned int                     TMDS_PLLPVG : 3;
		unsigned int                     TMDS_PLLPCP : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TMDS_PATTERN_GEN_SEED {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PATTERN_SEED : 24;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                    PATTERN_SEED : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ICON_OFFSET : 27;
		unsigned int                   BLANK_SCREEN1 : 1;
		unsigned int                    DONT_DS_ICON : 1;
		unsigned int                                 : 2;
		unsigned int                       ICON_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       ICON_LOCK : 1;
		unsigned int                                 : 2;
		unsigned int                    DONT_DS_ICON : 1;
		unsigned int                   BLANK_SCREEN1 : 1;
		unsigned int                     ICON_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON_HORZ_VERT_POSN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  ICON_VERT_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                  ICON_HORZ_POSN : 12;
		unsigned int                                 : 3;
		unsigned int                       ICON_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       ICON_LOCK : 1;
		unsigned int                                 : 3;
		unsigned int                  ICON_HORZ_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                  ICON_VERT_POSN : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON_HORZ_VERT_OFF {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   ICON_VERT_OFF : 7;
		unsigned int                                 : 9;
		unsigned int                   ICON_HORZ_OFF : 7;
		unsigned int                                 : 8;
		unsigned int                       ICON_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       ICON_LOCK : 1;
		unsigned int                                 : 8;
		unsigned int                   ICON_HORZ_OFF : 7;
		unsigned int                                 : 9;
		unsigned int                   ICON_VERT_OFF : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON_CLR0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ICON_CLR0_B : 8;
		unsigned int                     ICON_CLR0_G : 8;
		unsigned int                     ICON_CLR0_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     ICON_CLR0_R : 8;
		unsigned int                     ICON_CLR0_G : 8;
		unsigned int                     ICON_CLR0_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON_CLR1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ICON_CLR1_B : 8;
		unsigned int                     ICON_CLR1_G : 8;
		unsigned int                     ICON_CLR1_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     ICON_CLR1_R : 8;
		unsigned int                     ICON_CLR1_G : 8;
		unsigned int                     ICON_CLR1_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_H_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int              FP_H_SYNC_STRT_PIX : 3;
		unsigned int             FP_H_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
		unsigned int                   FP_H_SYNC_WID : 6;
		unsigned int                                 : 1;
		unsigned int                   FP_H_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                   FP_H_SYNC_POL : 1;
		unsigned int                                 : 1;
		unsigned int                   FP_H_SYNC_WID : 6;
		unsigned int                                 : 3;
		unsigned int             FP_H_SYNC_STRT_CHAR : 10;
		unsigned int              FP_H_SYNC_STRT_PIX : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_V_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  FP_V_SYNC_STRT : 12;
		unsigned int                                 : 4;
		unsigned int                   FP_V_SYNC_WID : 5;
		unsigned int                                 : 2;
		unsigned int                   FP_V_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                   FP_V_SYNC_POL : 1;
		unsigned int                                 : 2;
		unsigned int                   FP_V_SYNC_WID : 5;
		unsigned int                                 : 4;
		unsigned int                  FP_V_SYNC_STRT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union LVDS_DIGTMDS_CRC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LVDS_CRC_SIG_RGB : 24;
		unsigned int                  LVDS_CRC_SIG_C : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                  LVDS_CRC_SIG_C : 3;
		unsigned int                LVDS_CRC_SIG_RGB : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union LVDS_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         LVDS_ON : 1;
		unsigned int                LVDS_DISPLAY_DIS : 1;
		unsigned int                 LVDS_PANEL_TYPE : 1;
		unsigned int               LVDS_PANEL_FORMAT : 1;
		unsigned int                 LVDS_NO_OF_GREY : 2;
		unsigned int                     LVDS_RST_FM : 1;
		unsigned int                         LVDS_EN : 1;
		unsigned int               LVDS_BL_MOD_LEVEL : 8;
		unsigned int                  LVDS_BL_MOD_EN : 1;
		unsigned int                 LVDS_BL_CLK_SEL : 1;
		unsigned int                      LVDS_DIGON : 1;
		unsigned int                       LVDS_BLON : 1;
		unsigned int                     LVDS_FP_POL : 1;
		unsigned int                     LVDS_LP_POL : 1;
		unsigned int                    LVDS_DTM_POL : 1;
		unsigned int                    LVDS_SRC_SEL : 1;
		unsigned int              LVDS_RESERVED_BITS : 3;
		unsigned int                    LVDS_FPDI_EN : 1;
		unsigned int                LVDS_HSYNC_DELAY : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                LVDS_HSYNC_DELAY : 4;
		unsigned int                    LVDS_FPDI_EN : 1;
		unsigned int              LVDS_RESERVED_BITS : 3;
		unsigned int                    LVDS_SRC_SEL : 1;
		unsigned int                    LVDS_DTM_POL : 1;
		unsigned int                     LVDS_LP_POL : 1;
		unsigned int                     LVDS_FP_POL : 1;
		unsigned int                       LVDS_BLON : 1;
		unsigned int                      LVDS_DIGON : 1;
		unsigned int                 LVDS_BL_CLK_SEL : 1;
		unsigned int                  LVDS_BL_MOD_EN : 1;
		unsigned int               LVDS_BL_MOD_LEVEL : 8;
		unsigned int                         LVDS_EN : 1;
		unsigned int                     LVDS_RST_FM : 1;
		unsigned int                 LVDS_NO_OF_GREY : 2;
		unsigned int               LVDS_PANEL_FORMAT : 1;
		unsigned int                 LVDS_PANEL_TYPE : 1;
		unsigned int                LVDS_DISPLAY_DIS : 1;
		unsigned int                         LVDS_ON : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union LVDS_PLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LVDS_CRC_DE_ONLY : 1;
		unsigned int                      LVDS_LVPVS : 4;
		unsigned int                      LVDS_LPPVG : 3;
		unsigned int                      LVDS_LPPDC : 2;
		unsigned int                      LVDS_LPPCP : 3;
		unsigned int                 LVDS_SS_DISP_EN : 1;
		unsigned int                        LVDS_PRG : 2;
		unsigned int                     LVDS_PLL_EN : 1;
		unsigned int                  LVDS_PLL_RESET : 1;
		unsigned int                 LVDS_PREAMPH_EN : 1;
		unsigned int                                 : 1;
		unsigned int                     LVDS_CRC_EN : 1;
		unsigned int                   LVDS_CRC_UP24 : 1;
		unsigned int              LVDS_TEST_DATA_OUT : 3;
		unsigned int              LVDS_TEST_DATA_SEL : 2;
		unsigned int                                 : 1;
		unsigned int                LCDENG_TEST_MODE : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                LCDENG_TEST_MODE : 4;
		unsigned int                                 : 1;
		unsigned int              LVDS_TEST_DATA_SEL : 2;
		unsigned int              LVDS_TEST_DATA_OUT : 3;
		unsigned int                   LVDS_CRC_UP24 : 1;
		unsigned int                     LVDS_CRC_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 LVDS_PREAMPH_EN : 1;
		unsigned int                  LVDS_PLL_RESET : 1;
		unsigned int                     LVDS_PLL_EN : 1;
		unsigned int                        LVDS_PRG : 2;
		unsigned int                 LVDS_SS_DISP_EN : 1;
		unsigned int                      LVDS_LPPCP : 3;
		unsigned int                      LVDS_LPPDC : 2;
		unsigned int                      LVDS_LPPVG : 3;
		unsigned int                      LVDS_LVPVS : 4;
		unsigned int                LVDS_CRC_DE_ONLY : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AUX_WINDOW_HORZ_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              AUX_WIN_HORZ_START : 12;
		unsigned int                AUX_WIN_HORZ_END : 12;
		unsigned int                      AUX_WIN_EN : 1;
		unsigned int               AUX_WIN_OUT_DELAY : 4;
		unsigned int                                 : 1;
		unsigned int                        RESERVED : 1;
		unsigned int                    AUX_WIN_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    AUX_WIN_LOCK : 1;
		unsigned int                        RESERVED : 1;
		unsigned int                                 : 1;
		unsigned int               AUX_WIN_OUT_DELAY : 4;
		unsigned int                      AUX_WIN_EN : 1;
		unsigned int                AUX_WIN_HORZ_END : 12;
		unsigned int              AUX_WIN_HORZ_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AUX_WINDOW_VERT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              AUX_WIN_VERT_START : 12;
		unsigned int                                 : 4;
		unsigned int                AUX_WIN_VERT_END : 12;
		unsigned int                                 : 2;
		unsigned int                  AUX_WINDOW_POL : 1;
		unsigned int                    AUX_WIN_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    AUX_WIN_LOCK : 1;
		unsigned int                  AUX_WINDOW_POL : 1;
		unsigned int                                 : 2;
		unsigned int                AUX_WIN_VERT_END : 12;
		unsigned int                                 : 4;
		unsigned int              AUX_WIN_VERT_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DVI_I2C_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        I2C_DONE : 1;
		unsigned int                        I2C_NACK : 1;
		unsigned int                        I2C_HALT : 1;
		unsigned int                 DVI_I2C_PIN_SEL : 2;
		unsigned int                    I2C_SOFT_RST : 1;
		unsigned int                    I2C_DRIVE_EN : 1;
		unsigned int                   I2C_DRIVE_SEL : 1;
		unsigned int                       I2C_START : 1;
		unsigned int                        I2C_STOP : 1;
		unsigned int                     I2C_RECEIVE : 1;
		unsigned int                       I2C_ABORT : 1;
		unsigned int                          I2C_GO : 1;
		unsigned int         SW_WANTS_TO_USE_DVI_I2C : 1;
		unsigned int           SW_DONE_USING_DVI_I2C : 1;
		unsigned int                ABORT_HW_DVI_I2C : 1;
		unsigned int                    I2C_PRESCALE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    I2C_PRESCALE : 16;
		unsigned int                ABORT_HW_DVI_I2C : 1;
		unsigned int           SW_DONE_USING_DVI_I2C : 1;
		unsigned int         SW_WANTS_TO_USE_DVI_I2C : 1;
		unsigned int                          I2C_GO : 1;
		unsigned int                       I2C_ABORT : 1;
		unsigned int                     I2C_RECEIVE : 1;
		unsigned int                        I2C_STOP : 1;
		unsigned int                       I2C_START : 1;
		unsigned int                   I2C_DRIVE_SEL : 1;
		unsigned int                    I2C_DRIVE_EN : 1;
		unsigned int                    I2C_SOFT_RST : 1;
		unsigned int                 DVI_I2C_PIN_SEL : 2;
		unsigned int                        I2C_HALT : 1;
		unsigned int                        I2C_NACK : 1;
		unsigned int                        I2C_DONE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DVI_I2C_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  I2C_DATA_COUNT : 4;
		unsigned int                                 : 4;
		unsigned int                  I2C_ADDR_COUNT : 3;
		unsigned int                                 : 5;
		unsigned int                         I2C_SEL : 1;
		unsigned int                          I2C_EN : 1;
		unsigned int                                 : 6;
		unsigned int                  I2C_TIME_LIMIT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                  I2C_TIME_LIMIT : 8;
		unsigned int                                 : 6;
		unsigned int                          I2C_EN : 1;
		unsigned int                         I2C_SEL : 1;
		unsigned int                                 : 5;
		unsigned int                  I2C_ADDR_COUNT : 3;
		unsigned int                                 : 4;
		unsigned int                  I2C_DATA_COUNT : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DVI_I2C_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        I2C_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        I2C_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union LVDS_SS_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                       SS_EXT_EN : 1;
		unsigned int                      SS_EXT_SEL : 1;
		unsigned int                       SS_BUF_EN : 1;
		unsigned int                   SS_BUF_OFFSET : 7;
		unsigned int                 SS_BUF_RESET_EN : 1;
		unsigned int                 SS_BUF_STRENGTH : 2;
		unsigned int                LVDSPWR_STRENGTH : 2;
		unsigned int              LVDS_PWRSEQ_DELAY1 : 4;
		unsigned int              LVDS_PWRSEQ_DELAY2 : 4;
		unsigned int                LVDS_CLK_PATTERN : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                LVDS_CLK_PATTERN : 7;
		unsigned int              LVDS_PWRSEQ_DELAY2 : 4;
		unsigned int              LVDS_PWRSEQ_DELAY1 : 4;
		unsigned int                LVDSPWR_STRENGTH : 2;
		unsigned int                 SS_BUF_STRENGTH : 2;
		unsigned int                 SS_BUF_RESET_EN : 1;
		unsigned int                   SS_BUF_OFFSET : 7;
		unsigned int                       SS_BUF_EN : 1;
		unsigned int                      SS_EXT_SEL : 1;
		unsigned int                       SS_EXT_EN : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRPH_BUFFER_CNTL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  GRPH_START_REQ : 7;
		unsigned int                                 : 1;
		unsigned int                   GRPH_STOP_REQ : 7;
		unsigned int                                 : 1;
		unsigned int             GRPH_CRITICAL_POINT : 7;
		unsigned int                                 : 5;
		unsigned int              GRPH_CRITICAL_CNTL : 1;
		unsigned int                GRPH_BUFFER_SIZE : 1;
		unsigned int            GRPH_CRITICAL_AT_SOF : 1;
		unsigned int                  GRPH_STOP_CNTL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  GRPH_STOP_CNTL : 1;
		unsigned int            GRPH_CRITICAL_AT_SOF : 1;
		unsigned int                GRPH_BUFFER_SIZE : 1;
		unsigned int              GRPH_CRITICAL_CNTL : 1;
		unsigned int                                 : 5;
		unsigned int             GRPH_CRITICAL_POINT : 7;
		unsigned int                                 : 1;
		unsigned int                   GRPH_STOP_REQ : 7;
		unsigned int                                 : 1;
		unsigned int                  GRPH_START_REQ : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VGA_BUFFER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VGA_START_REQ : 6;
		unsigned int                                 : 2;
		unsigned int                    VGA_STOP_REQ : 6;
		unsigned int                                 : 2;
		unsigned int              VGA_CRITICAL_POINT : 6;
		unsigned int                                 : 10;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 10;
		unsigned int              VGA_CRITICAL_POINT : 6;
		unsigned int                                 : 2;
		unsigned int                    VGA_STOP_REQ : 6;
		unsigned int                                 : 2;
		unsigned int                   VGA_START_REQ : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_H_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CRTC2_H_TOTAL : 10;
		unsigned int                                 : 6;
		unsigned int                    CRTC2_H_DISP : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                    CRTC2_H_DISP : 9;
		unsigned int                                 : 6;
		unsigned int                   CRTC2_H_TOTAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_H_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int           CRTC2_H_SYNC_STRT_PIX : 3;
		unsigned int          CRTC2_H_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
		unsigned int                CRTC2_H_SYNC_WID : 6;
		unsigned int                                 : 1;
		unsigned int                CRTC2_H_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                CRTC2_H_SYNC_POL : 1;
		unsigned int                                 : 1;
		unsigned int                CRTC2_H_SYNC_WID : 6;
		unsigned int                                 : 3;
		unsigned int          CRTC2_H_SYNC_STRT_CHAR : 10;
		unsigned int           CRTC2_H_SYNC_STRT_PIX : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_V_TOTAL_DISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CRTC2_V_TOTAL : 12;
		unsigned int                                 : 4;
		unsigned int                    CRTC2_V_DISP : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                    CRTC2_V_DISP : 12;
		unsigned int                                 : 4;
		unsigned int                   CRTC2_V_TOTAL : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_V_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int               CRTC2_V_SYNC_STRT : 12;
		unsigned int                                 : 4;
		unsigned int                CRTC2_V_SYNC_WID : 5;
		unsigned int                                 : 2;
		unsigned int                CRTC2_V_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                CRTC2_V_SYNC_POL : 1;
		unsigned int                                 : 2;
		unsigned int                CRTC2_V_SYNC_WID : 5;
		unsigned int                                 : 4;
		unsigned int               CRTC2_V_SYNC_STRT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_VLINE_CRNT_VLINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CRTC2_VLINE : 12;
		unsigned int                                 : 4;
		unsigned int                CRTC2_CRNT_VLINE : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                CRTC2_CRNT_VLINE : 12;
		unsigned int                                 : 4;
		unsigned int                     CRTC2_VLINE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_CRNT_FRAME {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC2_CRNT_FRAME : 21;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int                CRTC2_CRNT_FRAME : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_GUI_TRIG_VLINE {
	struct {
#if		defined(qLittleEndian)
		unsigned int      CRTC2_GUI_TRIG_VLINE_START : 12;
		unsigned int                                 : 3;
		unsigned int        CRTC2_GUI_TRIG_VLINE_INV : 1;
		unsigned int        CRTC2_GUI_TRIG_VLINE_END : 12;
		unsigned int                                 : 2;
		unsigned int      CRTC2_GUI_TRIG_VLINE_STALL : 1;
		unsigned int            CRTC2_GUI_TRIG_VLINE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int            CRTC2_GUI_TRIG_VLINE : 1;
		unsigned int      CRTC2_GUI_TRIG_VLINE_STALL : 1;
		unsigned int                                 : 2;
		unsigned int        CRTC2_GUI_TRIG_VLINE_END : 12;
		unsigned int        CRTC2_GUI_TRIG_VLINE_INV : 1;
		unsigned int                                 : 3;
		unsigned int      CRTC2_GUI_TRIG_VLINE_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int        CRTC2_GUI_TRIG_BYPASS_EN : 1;
		unsigned int     CRTC2_GUI_TRIG_VLINE_BYPASS : 1;
		unsigned int    CRTC2_GUI_TRIG_OFFSET_BYPASS : 1;
		unsigned int CRTC2_GUI_TRIG_PITCH_ADD_BYPASS : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int CRTC2_GUI_TRIG_PITCH_ADD_BYPASS : 1;
		unsigned int    CRTC2_GUI_TRIG_OFFSET_BYPASS : 1;
		unsigned int     CRTC2_GUI_TRIG_VLINE_BYPASS : 1;
		unsigned int        CRTC2_GUI_TRIG_BYPASS_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CRTC2_OFFSET : 27;
		unsigned int                                 : 3;
		unsigned int           CRTC2_GUI_TRIG_OFFSET : 1;
		unsigned int               CRTC2_OFFSET_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int               CRTC2_OFFSET_LOCK : 1;
		unsigned int           CRTC2_GUI_TRIG_OFFSET : 1;
		unsigned int                                 : 3;
		unsigned int                    CRTC2_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_OFFSET_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CRTC2_TILE_LINE : 4;
		unsigned int                                 : 11;
		unsigned int                   CRTC2_TILE_EN : 1;
		unsigned int          CRTC2_OFFSET_FLIP_CNTL : 1;
		unsigned int                                 : 11;
		unsigned int   CRTC2_GUI_TRIG_OFFSET_LEFT_EN : 1;
		unsigned int                                 : 1;
		unsigned int           CRTC2_GUI_TRIG_OFFSET : 1;
		unsigned int               CRTC2_OFFSET_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int               CRTC2_OFFSET_LOCK : 1;
		unsigned int           CRTC2_GUI_TRIG_OFFSET : 1;
		unsigned int                                 : 1;
		unsigned int   CRTC2_GUI_TRIG_OFFSET_LEFT_EN : 1;
		unsigned int                                 : 11;
		unsigned int          CRTC2_OFFSET_FLIP_CNTL : 1;
		unsigned int                   CRTC2_TILE_EN : 1;
		unsigned int                                 : 11;
		unsigned int                 CRTC2_TILE_LINE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CRTC2_PITCH : 11;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                     CRTC2_PITCH : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR2_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      OVR2_CLR_B : 8;
		unsigned int                      OVR2_CLR_G : 8;
		unsigned int                      OVR2_CLR_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                      OVR2_CLR_R : 8;
		unsigned int                      OVR2_CLR_G : 8;
		unsigned int                      OVR2_CLR_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR2_WID_LEFT_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  OVR2_WID_RIGHT : 7;
		unsigned int                                 : 9;
		unsigned int                   OVR2_WID_LEFT : 7;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                   OVR2_WID_LEFT : 7;
		unsigned int                                 : 9;
		unsigned int                  OVR2_WID_RIGHT : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OVR2_WID_TOP_BOTTOM {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 OVR2_WID_BOTTOM : 10;
		unsigned int                                 : 6;
		unsigned int                    OVR2_WID_TOP : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                    OVR2_WID_TOP : 10;
		unsigned int                                 : 6;
		unsigned int                 OVR2_WID_BOTTOM : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_DISPLAY_BASE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int         CRTC2_DISPLAY_BASE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int         CRTC2_DISPLAY_BASE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT2_VH_COUNTS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                SNAPSHOT2_HCOUNT : 10;
		unsigned int                                 : 6;
		unsigned int                SNAPSHOT2_VCOUNT : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                SNAPSHOT2_VCOUNT : 12;
		unsigned int                                 : 6;
		unsigned int                SNAPSHOT2_HCOUNT : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT2_F_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int               SNAPSHOT2_F_COUNT : 21;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int               SNAPSHOT2_F_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union N_VIF2_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                N_VIF2_COUNT_VAL : 10;
		unsigned int                                 : 21;
		unsigned int             GENLOCK2_SOURCE_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int             GENLOCK2_SOURCE_SEL : 1;
		unsigned int                                 : 21;
		unsigned int                N_VIF2_COUNT_VAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SNAPSHOT2_VIF_COUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int            LSNAPSHOT2_VIF_COUNT : 10;
		unsigned int            USNAPSHOT2_VIF_COUNT : 11;
		unsigned int                                 : 3;
		unsigned int         AUTO_SNAPSHOT2_TAKEN_RD : 1;
		unsigned int            MANUAL_SNAPSHOT2_NOW : 1;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int            MANUAL_SNAPSHOT2_NOW : 1;
		unsigned int         AUTO_SNAPSHOT2_TAKEN_RD : 1;
		unsigned int                                 : 3;
		unsigned int            USNAPSHOT2_VIF_COUNT : 11;
		unsigned int            LSNAPSHOT2_VIF_COUNT : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR2_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CUR2_OFFSET : 27;
		unsigned int                                 : 4;
		unsigned int                       CUR2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       CUR2_LOCK : 1;
		unsigned int                                 : 4;
		unsigned int                     CUR2_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR2_HORZ_VERT_POSN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CUR2_VERT_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                  CUR2_HORZ_POSN : 14;
		unsigned int                                 : 1;
		unsigned int                       CUR2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       CUR2_LOCK : 1;
		unsigned int                                 : 1;
		unsigned int                  CUR2_HORZ_POSN : 14;
		unsigned int                                 : 4;
		unsigned int                  CUR2_VERT_POSN : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR2_HORZ_VERT_OFF {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CUR2_VERT_OFF : 6;
		unsigned int                                 : 10;
		unsigned int                   CUR2_HORZ_OFF : 6;
		unsigned int                                 : 9;
		unsigned int                       CUR2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       CUR2_LOCK : 1;
		unsigned int                                 : 9;
		unsigned int                   CUR2_HORZ_OFF : 6;
		unsigned int                                 : 10;
		unsigned int                   CUR2_VERT_OFF : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR2_CLR0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CUR2_CLR0_B : 8;
		unsigned int                     CUR2_CLR0_G : 8;
		unsigned int                     CUR2_CLR0_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     CUR2_CLR0_R : 8;
		unsigned int                     CUR2_CLR0_G : 8;
		unsigned int                     CUR2_CLR0_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CUR2_CLR1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CUR2_CLR1_B : 8;
		unsigned int                     CUR2_CLR1_G : 8;
		unsigned int                     CUR2_CLR1_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     CUR2_CLR1_R : 8;
		unsigned int                     CUR2_CLR1_G : 8;
		unsigned int                     CUR2_CLR1_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_H2_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int             FP_H2_SYNC_STRT_PIX : 3;
		unsigned int            FP_H2_SYNC_STRT_CHAR : 10;
		unsigned int                                 : 3;
		unsigned int                  FP_H2_SYNC_WID : 6;
		unsigned int                                 : 1;
		unsigned int                  FP_H2_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                  FP_H2_SYNC_POL : 1;
		unsigned int                                 : 1;
		unsigned int                  FP_H2_SYNC_WID : 6;
		unsigned int                                 : 3;
		unsigned int            FP_H2_SYNC_STRT_CHAR : 10;
		unsigned int             FP_H2_SYNC_STRT_PIX : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FP_V2_SYNC_STRT_WID {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 FP_V2_SYNC_STRT : 12;
		unsigned int                                 : 4;
		unsigned int                  FP_V2_SYNC_WID : 5;
		unsigned int                                 : 2;
		unsigned int                  FP_V2_SYNC_POL : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                  FP_V2_SYNC_POL : 1;
		unsigned int                                 : 2;
		unsigned int                  FP_V2_SYNC_WID : 5;
		unsigned int                                 : 4;
		unsigned int                 FP_V2_SYNC_STRT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON2_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ICON2_OFFSET : 27;
		unsigned int                   BLANK_SCREEN2 : 1;
		unsigned int                   DONT_DS_ICON2 : 1;
		unsigned int                                 : 2;
		unsigned int                      ICON2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ICON2_LOCK : 1;
		unsigned int                                 : 2;
		unsigned int                   DONT_DS_ICON2 : 1;
		unsigned int                   BLANK_SCREEN2 : 1;
		unsigned int                    ICON2_OFFSET : 27;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON2_HORZ_VERT_POSN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 ICON2_VERT_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                 ICON2_HORZ_POSN : 12;
		unsigned int                                 : 3;
		unsigned int                      ICON2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ICON2_LOCK : 1;
		unsigned int                                 : 3;
		unsigned int                 ICON2_HORZ_POSN : 12;
		unsigned int                                 : 4;
		unsigned int                 ICON2_VERT_POSN : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON2_HORZ_VERT_OFF {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  ICON2_VERT_OFF : 7;
		unsigned int                                 : 9;
		unsigned int                  ICON2_HORZ_OFF : 7;
		unsigned int                                 : 8;
		unsigned int                      ICON2_LOCK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ICON2_LOCK : 1;
		unsigned int                                 : 8;
		unsigned int                  ICON2_HORZ_OFF : 7;
		unsigned int                                 : 9;
		unsigned int                  ICON2_VERT_OFF : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON2_CLR0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ICON2_CLR0_B : 8;
		unsigned int                    ICON2_CLR0_G : 8;
		unsigned int                    ICON2_CLR0_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                    ICON2_CLR0_R : 8;
		unsigned int                    ICON2_CLR0_G : 8;
		unsigned int                    ICON2_CLR0_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ICON2_CLR1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ICON2_CLR1_B : 8;
		unsigned int                    ICON2_CLR1_G : 8;
		unsigned int                    ICON2_CLR1_R : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                    ICON2_CLR1_R : 8;
		unsigned int                    ICON2_CLR1_G : 8;
		unsigned int                    ICON2_CLR1_B : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GRPH2_BUFFER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 GRPH2_START_REQ : 7;
		unsigned int                                 : 1;
		unsigned int                  GRPH2_STOP_REQ : 7;
		unsigned int                                 : 1;
		unsigned int            GRPH2_CRITICAL_POINT : 7;
		unsigned int                                 : 5;
		unsigned int             GRPH2_CRITICAL_CNTL : 1;
		unsigned int               GRPH2_BUFFER_SIZE : 1;
		unsigned int           GRPH2_CRITICAL_AT_SOF : 1;
		unsigned int                 GRPH2_STOP_CNTL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                 GRPH2_STOP_CNTL : 1;
		unsigned int           GRPH2_CRITICAL_AT_SOF : 1;
		unsigned int               GRPH2_BUFFER_SIZE : 1;
		unsigned int             GRPH2_CRITICAL_CNTL : 1;
		unsigned int                                 : 5;
		unsigned int            GRPH2_CRITICAL_POINT : 7;
		unsigned int                                 : 1;
		unsigned int                  GRPH2_STOP_REQ : 7;
		unsigned int                                 : 1;
		unsigned int                 GRPH2_START_REQ : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               CRTC2_DBL_SCAN_EN : 1;
		unsigned int              CRTC2_INTERLACE_EN : 1;
		unsigned int                                 : 2;
		unsigned int             CRTC2_SYNC_TRISTATE : 1;
		unsigned int            CRTC2_HSYNC_TRISTATE : 1;
		unsigned int            CRTC2_VSYNC_TRISTATE : 1;
		unsigned int                         CRT2_ON : 1;
		unsigned int                 CRTC2_PIX_WIDTH : 4;
		unsigned int         CRTC2_MODE9_COLOR_ORDER : 1;
		unsigned int                                 : 1;
		unsigned int             CRTC2_BYPASS_LUT_EN : 1;
		unsigned int                   CRTC2_ICON_EN : 1;
		unsigned int                    CRTC2_CUR_EN : 1;
		unsigned int                                 : 3;
		unsigned int                  CRTC2_CUR_MODE : 3;
		unsigned int               CRTC2_DISPLAY_DIS : 1;
		unsigned int                                 : 1;
		unsigned int                        CRTC2_EN : 1;
		unsigned int             CRTC2_DISP_REQ_EN_B : 1;
		unsigned int                 CRTC2_C_SYNC_EN : 1;
		unsigned int                 CRTC2_HSYNC_DIS : 1;
		unsigned int                 CRTC2_VSYNC_DIS : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                 CRTC2_VSYNC_DIS : 1;
		unsigned int                 CRTC2_HSYNC_DIS : 1;
		unsigned int                 CRTC2_C_SYNC_EN : 1;
		unsigned int             CRTC2_DISP_REQ_EN_B : 1;
		unsigned int                        CRTC2_EN : 1;
		unsigned int                                 : 1;
		unsigned int               CRTC2_DISPLAY_DIS : 1;
		unsigned int                  CRTC2_CUR_MODE : 3;
		unsigned int                                 : 3;
		unsigned int                    CRTC2_CUR_EN : 1;
		unsigned int                   CRTC2_ICON_EN : 1;
		unsigned int             CRTC2_BYPASS_LUT_EN : 1;
		unsigned int                                 : 1;
		unsigned int         CRTC2_MODE9_COLOR_ORDER : 1;
		unsigned int                 CRTC2_PIX_WIDTH : 4;
		unsigned int                         CRT2_ON : 1;
		unsigned int            CRTC2_VSYNC_TRISTATE : 1;
		unsigned int            CRTC2_HSYNC_TRISTATE : 1;
		unsigned int             CRTC2_SYNC_TRISTATE : 1;
		unsigned int                                 : 2;
		unsigned int              CRTC2_INTERLACE_EN : 1;
		unsigned int               CRTC2_DBL_SCAN_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CRTC2_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CRTC2_VBLANK_CUR : 1;
		unsigned int               CRTC2_VBLANK_SAVE : 1;
		unsigned int                CRTC2_VLINE_SYNC : 1;
		unsigned int                     CRTC2_FRAME : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     CRTC2_FRAME : 1;
		unsigned int                CRTC2_VLINE_SYNC : 1;
		unsigned int               CRTC2_VBLANK_SAVE : 1;
		unsigned int                CRTC2_VBLANK_CUR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_Y_X_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     OV0_X_START : 13;
		unsigned int                                 : 3;
		unsigned int                     OV0_Y_START : 13;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                     OV0_Y_START : 13;
		unsigned int                                 : 3;
		unsigned int                     OV0_X_START : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_Y_X_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       OV0_X_END : 13;
		unsigned int                                 : 3;
		unsigned int                       OV0_Y_END : 13;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                       OV0_Y_END : 13;
		unsigned int                                 : 3;
		unsigned int                       OV0_X_END : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_PIPELINE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV0_DISP_PIPE_DELAY : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int             OV0_DISP_PIPE_DELAY : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_REG_LOAD_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        OV0_LOCK : 1;
		unsigned int          OV0_VBLANK_DURING_LOCK : 1;
		unsigned int        OV0_STALL_GUI_UNTIL_FLIP : 1;
		unsigned int               OV0_LOCK_READBACK : 1;
		unsigned int               OV0_FLIP_READBACK : 1;
		unsigned int                                 : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 27;
		unsigned int               OV0_FLIP_READBACK : 1;
		unsigned int               OV0_LOCK_READBACK : 1;
		unsigned int        OV0_STALL_GUI_UNTIL_FLIP : 1;
		unsigned int          OV0_VBLANK_DURING_LOCK : 1;
		unsigned int                        OV0_LOCK : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_SCALE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int         OV0_NO_READ_BEHIND_SCAN : 1;
		unsigned int           OV0_HORZ_PICK_NEAREST : 1;
		unsigned int           OV0_VERT_PICK_NEAREST : 1;
		unsigned int                   OV0_SIGNED_UV : 1;
		unsigned int                   OV0_GAMMA_SEL : 3;
		unsigned int              OV0_SURFACE_FORMAT : 4;
		unsigned int              OV0_ADAPTIVE_DEINT : 1;
		unsigned int                                 : 1;
		unsigned int                    OV0_CRTC_SEL : 1;
		unsigned int                                 : 1;
		unsigned int             OV0_BURST_PER_PLANE : 7;
		unsigned int                                 : 1;
		unsigned int          OV0_DOUBLE_BUFFER_REGS : 1;
		unsigned int                                 : 1;
		unsigned int                   OV0_BANDWIDTH : 1;
		unsigned int                                 : 1;
		unsigned int            OV0_LIN_TRANS_BYPASS : 1;
		unsigned int                     OV0_INT_EMU : 1;
		unsigned int                  OV0_OVERLAY_EN : 1;
		unsigned int                  OV0_SOFT_RESET : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  OV0_SOFT_RESET : 1;
		unsigned int                  OV0_OVERLAY_EN : 1;
		unsigned int                     OV0_INT_EMU : 1;
		unsigned int            OV0_LIN_TRANS_BYPASS : 1;
		unsigned int                                 : 1;
		unsigned int                   OV0_BANDWIDTH : 1;
		unsigned int                                 : 1;
		unsigned int          OV0_DOUBLE_BUFFER_REGS : 1;
		unsigned int                                 : 1;
		unsigned int             OV0_BURST_PER_PLANE : 7;
		unsigned int                                 : 1;
		unsigned int                    OV0_CRTC_SEL : 1;
		unsigned int                                 : 1;
		unsigned int              OV0_ADAPTIVE_DEINT : 1;
		unsigned int              OV0_SURFACE_FORMAT : 4;
		unsigned int                   OV0_GAMMA_SEL : 3;
		unsigned int                   OV0_SIGNED_UV : 1;
		unsigned int           OV0_VERT_PICK_NEAREST : 1;
		unsigned int           OV0_HORZ_PICK_NEAREST : 1;
		unsigned int         OV0_NO_READ_BEHIND_SCAN : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_V_INC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int                       OV0_V_INC : 18;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                       OV0_V_INC : 18;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P1_V_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int     OV0_P1_MAX_LN_IN_PER_LN_OUT : 2;
		unsigned int                                 : 13;
		unsigned int             OV0_P1_V_ACCUM_INIT : 11;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int             OV0_P1_V_ACCUM_INIT : 11;
		unsigned int                                 : 13;
		unsigned int     OV0_P1_MAX_LN_IN_PER_LN_OUT : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P23_V_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int    OV0_P23_MAX_LN_IN_PER_LN_OUT : 2;
		unsigned int                                 : 13;
		unsigned int            OV0_P23_V_ACCUM_INIT : 10;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int            OV0_P23_V_ACCUM_INIT : 10;
		unsigned int                                 : 13;
		unsigned int    OV0_P23_MAX_LN_IN_PER_LN_OUT : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P1_BLANK_LINES_AT_TOP {
	struct {
#if		defined(qLittleEndian)
		unsigned int        OV0_P1_BLNK_LN_AT_TOP_M1 : 12;
		unsigned int                                 : 4;
		unsigned int          OV0_P1_ACTIVE_LINES_M1 : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int          OV0_P1_ACTIVE_LINES_M1 : 12;
		unsigned int                                 : 4;
		unsigned int        OV0_P1_BLNK_LN_AT_TOP_M1 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P23_BLANK_LINES_AT_TOP {
	struct {
#if		defined(qLittleEndian)
		unsigned int       OV0_P23_BLNK_LN_AT_TOP_M1 : 11;
		unsigned int                                 : 5;
		unsigned int         OV0_P23_ACTIVE_LINES_M1 : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int         OV0_P23_ACTIVE_LINES_M1 : 11;
		unsigned int                                 : 5;
		unsigned int       OV0_P23_BLNK_LN_AT_TOP_M1 : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_BASE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   OV0_BASE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   OV0_BASE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF0_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF1_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF2_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF3_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF4_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF5_BASE_ADRS {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int                                 : 2;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 1;
		unsigned int               RESERVED_BIT31_28 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               RESERVED_BIT31_28 : 4;
		unsigned int                                 : 1;
		unsigned int           OV0_VID_BUF_BASE_ADRS : 23;
		unsigned int                                 : 2;
		unsigned int                   RESERVED_BIT1 : 1;
		unsigned int           OV0_VID_BUF_PITCH_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF_PITCH0_VALUE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                 OV0_PITCH_VALUE : 16;
		unsigned int                                 : 6;
		unsigned int            OV0_PITCH_SKIP_LINES : 2;
		unsigned int         OV0_PITCH_IN_TILES_LSBS : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int         OV0_PITCH_IN_TILES_LSBS : 4;
		unsigned int            OV0_PITCH_SKIP_LINES : 2;
		unsigned int                                 : 6;
		unsigned int                 OV0_PITCH_VALUE : 16;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_BUF_PITCH1_VALUE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                 OV0_PITCH_VALUE : 16;
		unsigned int                                 : 6;
		unsigned int            OV0_PITCH_SKIP_LINES : 2;
		unsigned int         OV0_PITCH_IN_TILES_LSBS : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int         OV0_PITCH_IN_TILES_LSBS : 4;
		unsigned int            OV0_PITCH_SKIP_LINES : 2;
		unsigned int                                 : 6;
		unsigned int                 OV0_PITCH_VALUE : 16;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_AUTO_FLIP_CNTRL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                OV0_SOFT_BUF_NUM : 3;
		unsigned int           OV0_SOFT_REPEAT_FIELD : 1;
		unsigned int                OV0_SOFT_BUF_ODD : 1;
		unsigned int         OV0_IGNORE_REPEAT_FIELD : 1;
		unsigned int             OV0_SOFT_EOF_TOGGLE : 1;
		unsigned int                                 : 1;
		unsigned int             OV0_VID_PORT_SELECT : 2;
		unsigned int                                 : 6;
		unsigned int          OV0_P1_FIRST_LINE_EVEN : 1;
		unsigned int                                 : 1;
		unsigned int             OV0_SHIFT_EVEN_DOWN : 1;
		unsigned int              OV0_SHIFT_ODD_DOWN : 1;
		unsigned int                                 : 3;
		unsigned int            OV0_FIELD_POL_SOURCE : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int            OV0_FIELD_POL_SOURCE : 1;
		unsigned int                                 : 3;
		unsigned int              OV0_SHIFT_ODD_DOWN : 1;
		unsigned int             OV0_SHIFT_EVEN_DOWN : 1;
		unsigned int                                 : 1;
		unsigned int          OV0_P1_FIRST_LINE_EVEN : 1;
		unsigned int                                 : 6;
		unsigned int             OV0_VID_PORT_SELECT : 2;
		unsigned int                                 : 1;
		unsigned int             OV0_SOFT_EOF_TOGGLE : 1;
		unsigned int         OV0_IGNORE_REPEAT_FIELD : 1;
		unsigned int                OV0_SOFT_BUF_ODD : 1;
		unsigned int           OV0_SOFT_REPEAT_FIELD : 1;
		unsigned int                OV0_SOFT_BUF_NUM : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_DEINTERLACE_PATTERN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   OV0_DEINT_PAT : 20;
		unsigned int                                 : 4;
		unsigned int              OV0_DEINT_PAT_PNTR : 4;
		unsigned int            OV0_DEINT_PAT_LEN_M1 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int            OV0_DEINT_PAT_LEN_M1 : 4;
		unsigned int              OV0_DEINT_PAT_PNTR : 4;
		unsigned int                                 : 4;
		unsigned int                   OV0_DEINT_PAT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_SUBMIT_HISTORY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                OV0_NEXT_BUF_NUM : 3;
		unsigned int                                 : 1;
		unsigned int                 OV0_NEXT_IS_ODD : 1;
		unsigned int                                 : 3;
		unsigned int                OV0_CURR_BUF_NUM : 3;
		unsigned int                                 : 1;
		unsigned int                 OV0_CURR_IS_ODD : 1;
		unsigned int                                 : 3;
		unsigned int                OV0_PREV_BUF_NUM : 3;
		unsigned int                                 : 1;
		unsigned int                 OV0_PREV_IS_ODD : 1;
		unsigned int                                 : 11;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 11;
		unsigned int                 OV0_PREV_IS_ODD : 1;
		unsigned int                                 : 1;
		unsigned int                OV0_PREV_BUF_NUM : 3;
		unsigned int                                 : 3;
		unsigned int                 OV0_CURR_IS_ODD : 1;
		unsigned int                                 : 1;
		unsigned int                OV0_CURR_BUF_NUM : 3;
		unsigned int                                 : 3;
		unsigned int                 OV0_NEXT_IS_ODD : 1;
		unsigned int                                 : 1;
		unsigned int                OV0_NEXT_BUF_NUM : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_H_INC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    OV0_P1_H_INC : 14;
		unsigned int                                 : 2;
		unsigned int                   OV0_P23_H_INC : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                   OV0_P23_H_INC : 14;
		unsigned int                                 : 2;
		unsigned int                    OV0_P1_H_INC : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_STEP_BY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                OV0_P1_H_STEP_BY : 3;
		unsigned int                                 : 1;
		unsigned int           OV0_P1_PREDWNSC_RATIO : 1;
		unsigned int                                 : 3;
		unsigned int               OV0_P23_H_STEP_BY : 3;
		unsigned int                                 : 1;
		unsigned int          OV0_P23_PREDWNSC_RATIO : 1;
		unsigned int                                 : 19;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 19;
		unsigned int          OV0_P23_PREDWNSC_RATIO : 1;
		unsigned int                                 : 1;
		unsigned int               OV0_P23_H_STEP_BY : 3;
		unsigned int                                 : 3;
		unsigned int           OV0_P1_PREDWNSC_RATIO : 1;
		unsigned int                                 : 1;
		unsigned int                OV0_P1_H_STEP_BY : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P1_H_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 15;
		unsigned int             OV0_P1_H_ACCUM_INIT : 5;
		unsigned int                                 : 8;
		unsigned int              OV0_PRESHIFT_P1_TO : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int              OV0_PRESHIFT_P1_TO : 4;
		unsigned int                                 : 8;
		unsigned int             OV0_P1_H_ACCUM_INIT : 5;
		unsigned int                                 : 15;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P23_H_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 15;
		unsigned int            OV0_P23_H_ACCUM_INIT : 5;
		unsigned int                                 : 8;
		unsigned int             OV0_PRESHIFT_P23_TO : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int             OV0_PRESHIFT_P23_TO : 3;
		unsigned int                                 : 8;
		unsigned int            OV0_P23_H_ACCUM_INIT : 5;
		unsigned int                                 : 15;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P1_X_START_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    OV0_P1_X_END : 12;
		unsigned int                                 : 4;
		unsigned int                  OV0_P1_X_START : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                  OV0_P1_X_START : 4;
		unsigned int                                 : 4;
		unsigned int                    OV0_P1_X_END : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P2_X_START_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    OV0_P2_X_END : 11;
		unsigned int                                 : 5;
		unsigned int                  OV0_P2_X_START : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                  OV0_P2_X_START : 4;
		unsigned int                                 : 5;
		unsigned int                    OV0_P2_X_END : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_P3_X_START_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    OV0_P3_X_END : 11;
		unsigned int                                 : 5;
		unsigned int                  OV0_P3_X_START : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                  OV0_P3_X_START : 4;
		unsigned int                                 : 5;
		unsigned int                    OV0_P3_X_END : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FILTER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_HC_COEF_ON_HORZ_Y : 1;
		unsigned int          OV0_HC_COEF_ON_HORZ_UV : 1;
		unsigned int           OV0_HC_COEF_ON_VERT_Y : 1;
		unsigned int          OV0_HC_COEF_ON_VERT_UV : 1;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int          OV0_HC_COEF_ON_VERT_UV : 1;
		unsigned int           OV0_HC_COEF_ON_VERT_Y : 1;
		unsigned int          OV0_HC_COEF_ON_HORZ_UV : 1;
		unsigned int           OV0_HC_COEF_ON_HORZ_Y : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FOUR_TAP_COEF_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               OV0_COEF__0TH_TAP : 4;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__0TH_TAP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FOUR_TAP_COEF_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               OV0_COEF__0TH_TAP : 4;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__0TH_TAP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FOUR_TAP_COEF_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               OV0_COEF__0TH_TAP : 4;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__0TH_TAP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FOUR_TAP_COEF_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               OV0_COEF__0TH_TAP : 4;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__0TH_TAP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FOUR_TAP_COEF_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               OV0_COEF__0TH_TAP : 4;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__3RD_TAP : 4;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__2ND_TAP : 7;
		unsigned int                                 : 1;
		unsigned int               OV0_COEF__1ST_TAP : 7;
		unsigned int                                 : 4;
		unsigned int               OV0_COEF__0TH_TAP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_FLAG_CNTRL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                OV0_HI_PRI_MCREQ : 4;
		unsigned int                                 : 4;
		unsigned int                OV0_HI_PRI_FORCE : 1;
		unsigned int                                 : 3;
		unsigned int               OV0_LUMA_10BIT_EN : 1;
		unsigned int             OV0_CHROMA_10BIT_EN : 1;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int             OV0_CHROMA_10BIT_EN : 1;
		unsigned int               OV0_LUMA_10BIT_EN : 1;
		unsigned int                                 : 3;
		unsigned int                OV0_HI_PRI_FORCE : 1;
		unsigned int                                 : 4;
		unsigned int                OV0_HI_PRI_MCREQ : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_SLICE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV0_SLICE_LAST_LINE : 7;
		unsigned int                                 : 23;
		unsigned int              OV0_SLICEDONE_STAT : 1;
		unsigned int             OV0_MPEG_EOF_TOGGLE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int             OV0_MPEG_EOF_TOGGLE : 1;
		unsigned int              OV0_SLICEDONE_STAT : 1;
		unsigned int                                 : 23;
		unsigned int             OV0_SLICE_LAST_LINE : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_KEY_CLR_LOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int         OV0_VID_KEY_Cb_BLUE_LOW : 10;
		unsigned int         OV0_VID_KEY_Y_GREEN_LOW : 10;
		unsigned int          OV0_VID_KEY_Cr_RED_LOW : 10;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int          OV0_VID_KEY_Cr_RED_LOW : 10;
		unsigned int         OV0_VID_KEY_Y_GREEN_LOW : 10;
		unsigned int         OV0_VID_KEY_Cb_BLUE_LOW : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_VID_KEY_CLR_HIGH {
	struct {
#if		defined(qLittleEndian)
		unsigned int        OV0_VID_KEY_Cb_BLUE_HIGH : 10;
		unsigned int        OV0_VID_KEY_Y_GREEN_HIGH : 10;
		unsigned int         OV0_VID_KEY_Cr_RED_HIGH : 10;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int         OV0_VID_KEY_Cr_RED_HIGH : 10;
		unsigned int        OV0_VID_KEY_Y_GREEN_HIGH : 10;
		unsigned int        OV0_VID_KEY_Cb_BLUE_HIGH : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GRPH_KEY_CLR_LOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int           OV0_GRPH_KEY_BLUE_LOW : 8;
		unsigned int          OV0_GRPH_KEY_GREEN_LOW : 8;
		unsigned int            OV0_GRPH_KEY_RED_LOW : 8;
		unsigned int          OV0_GRPH_KEY_ALPHA_LOW : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int          OV0_GRPH_KEY_ALPHA_LOW : 8;
		unsigned int            OV0_GRPH_KEY_RED_LOW : 8;
		unsigned int          OV0_GRPH_KEY_GREEN_LOW : 8;
		unsigned int           OV0_GRPH_KEY_BLUE_LOW : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GRPH_KEY_CLR_HIGH {
	struct {
#if		defined(qLittleEndian)
		unsigned int          OV0_GRPH_KEY_BLUE_HIGH : 8;
		unsigned int         OV0_GRPH_KEY_GREEN_HIGH : 8;
		unsigned int           OV0_GRPH_KEY_RED_HIGH : 8;
		unsigned int         OV0_GRPH_KEY_ALPHA_HIGH : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int         OV0_GRPH_KEY_ALPHA_HIGH : 8;
		unsigned int           OV0_GRPH_KEY_RED_HIGH : 8;
		unsigned int         OV0_GRPH_KEY_GREEN_HIGH : 8;
		unsigned int          OV0_GRPH_KEY_BLUE_HIGH : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_KEY_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                OV0_VIDEO_KEY_FN : 2;
		unsigned int                                 : 2;
		unsigned int             OV0_GRAPHICS_KEY_FN : 2;
		unsigned int                                 : 2;
		unsigned int                     OV0_CMP_MIX : 1;
		unsigned int                                 : 23;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 23;
		unsigned int                     OV0_CMP_MIX : 1;
		unsigned int                                 : 2;
		unsigned int             OV0_GRAPHICS_KEY_FN : 2;
		unsigned int                                 : 2;
		unsigned int                OV0_VIDEO_KEY_FN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_TEST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int               OV0_MIN_OFFSET_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 OV0_SUBPIC_ONLY : 1;
		unsigned int                                 : 1;
		unsigned int                     OV0_SWAP_UV : 1;
		unsigned int                   OV0_NOROUNDUP : 1;
		unsigned int                                 : 1;
		unsigned int            OV0_4TH_LINE_RULE_EN : 1;
		unsigned int                                 : 7;
		unsigned int     OV0_READ_BEHIND_SCAN_MARGIN : 7;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int     OV0_READ_BEHIND_SCAN_MARGIN : 7;
		unsigned int                                 : 7;
		unsigned int            OV0_4TH_LINE_RULE_EN : 1;
		unsigned int                                 : 1;
		unsigned int                   OV0_NOROUNDUP : 1;
		unsigned int                     OV0_SWAP_UV : 1;
		unsigned int                                 : 1;
		unsigned int                 OV0_SUBPIC_ONLY : 1;
		unsigned int                                 : 1;
		unsigned int               OV0_MIN_OFFSET_EN : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_ADAPTIVE_DEINT_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   OV0_BP_OFFSET : 3;
		unsigned int                                 : 1;
		unsigned int        OV0_4TH_LINE_RULE_OFFSET : 3;
		unsigned int                                 : 25;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 25;
		unsigned int        OV0_4TH_LINE_RULE_OFFSET : 3;
		unsigned int                                 : 1;
		unsigned int                   OV0_BP_OFFSET : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SUBPIC_ON : 1;
		unsigned int                      BTN_HLI_ON : 1;
		unsigned int                                 : 2;
		unsigned int                    SP_HORZ_MODE : 1;
		unsigned int                    SP_VERT_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                    SP_ODD_FIELD : 1;
		unsigned int                   SP_BUF_SELECT : 1;
		unsigned int              SP_NO_R_EDGE_BLEND : 1;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int              SP_NO_R_EDGE_BLEND : 1;
		unsigned int                   SP_BUF_SELECT : 1;
		unsigned int                    SP_ODD_FIELD : 1;
		unsigned int                                 : 2;
		unsigned int                    SP_VERT_MODE : 1;
		unsigned int                    SP_HORZ_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                      BTN_HLI_ON : 1;
		unsigned int                       SUBPIC_ON : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_DEFCOLCON {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BKGD_PIX_CON : 4;
		unsigned int                    PATT_PIX_CON : 4;
		unsigned int                   EMPH_PIX1_CON : 4;
		unsigned int                   EMPH_PIX2_CON : 4;
		unsigned int                    BKGD_PIX_CLR : 4;
		unsigned int                    PATT_PIX_CLR : 4;
		unsigned int                   EMPH_PIX1_CLR : 4;
		unsigned int                   EMPH_PIX2_CLR : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   EMPH_PIX2_CLR : 4;
		unsigned int                   EMPH_PIX1_CLR : 4;
		unsigned int                    PATT_PIX_CLR : 4;
		unsigned int                    BKGD_PIX_CLR : 4;
		unsigned int                   EMPH_PIX2_CON : 4;
		unsigned int                   EMPH_PIX1_CON : 4;
		unsigned int                    PATT_PIX_CON : 4;
		unsigned int                    BKGD_PIX_CON : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_Y_X_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SP_START_X : 10;
		unsigned int                                 : 6;
		unsigned int                      SP_START_Y : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                      SP_START_Y : 10;
		unsigned int                                 : 6;
		unsigned int                      SP_START_X : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_Y_X_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SP_END_X : 10;
		unsigned int                                 : 6;
		unsigned int                        SP_END_Y : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                        SP_END_Y : 10;
		unsigned int                                 : 6;
		unsigned int                        SP_END_X : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_V_INC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                   SP_V_INC_FRAC : 12;
		unsigned int                    SP_V_INC_INT : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                    SP_V_INC_INT : 4;
		unsigned int                   SP_V_INC_FRAC : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_H_INC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                   SP_H_INC_FRAC : 12;
		unsigned int                    SP_H_INC_INT : 4;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                    SP_H_INC_INT : 4;
		unsigned int                   SP_H_INC_FRAC : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_BUF0_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SUBPIC_OFFSET0 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  SUBPIC_OFFSET0 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_BUF1_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  SUBPIC_OFFSET1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  SUBPIC_OFFSET1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_LC0_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int               SUBPIC_LC0_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               SUBPIC_LC0_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_LC1_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int               SUBPIC_LC1_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               SUBPIC_LC1_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                SUBPIC_BUF_PITCH : 12;
		unsigned int                                 : 4;
		unsigned int                 SUBPIC_LC_PITCH : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 SUBPIC_LC_PITCH : 12;
		unsigned int                                 : 4;
		unsigned int                SUBPIC_BUF_PITCH : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_BTN_HLI_COLCON {
	struct {
#if		defined(qLittleEndian)
		unsigned int            BTN_HLI_BKGD_PIX_CON : 4;
		unsigned int            BTN_HLI_PATT_PIX_CON : 4;
		unsigned int           BTN_HLI_EMPH_PIX1_CON : 4;
		unsigned int           BTN_HLI_EMPH_PIX2_CON : 4;
		unsigned int            BTN_HLI_BKGD_PIX_CLR : 4;
		unsigned int            BTN_HLI_PATT_PIX_CLR : 4;
		unsigned int           BTN_HLI_EMPH_PIX1_CLR : 4;
		unsigned int           BTN_HLI_EMPH_PIX2_CLR : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int           BTN_HLI_EMPH_PIX2_CLR : 4;
		unsigned int           BTN_HLI_EMPH_PIX1_CLR : 4;
		unsigned int            BTN_HLI_PATT_PIX_CLR : 4;
		unsigned int            BTN_HLI_BKGD_PIX_CLR : 4;
		unsigned int           BTN_HLI_EMPH_PIX2_CON : 4;
		unsigned int           BTN_HLI_EMPH_PIX1_CON : 4;
		unsigned int            BTN_HLI_PATT_PIX_CON : 4;
		unsigned int            BTN_HLI_BKGD_PIX_CON : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_BTN_HLI_Y_X_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 BTN_HLI_START_X : 10;
		unsigned int                                 : 6;
		unsigned int                 BTN_HLI_START_Y : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                 BTN_HLI_START_Y : 10;
		unsigned int                                 : 6;
		unsigned int                 BTN_HLI_START_X : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_BTN_HLI_Y_X_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   BTN_HLI_END_X : 10;
		unsigned int                                 : 6;
		unsigned int                   BTN_HLI_END_Y : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                   BTN_HLI_END_Y : 10;
		unsigned int                                 : 6;
		unsigned int                   BTN_HLI_END_X : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_PALETTE_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     SP_PAL_ADDR : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                     SP_PAL_ADDR : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_PALETTE_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         SP_DATA : 24;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                         SP_DATA : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_0_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_1_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_2_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_3_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_4_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_5_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_6_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_7_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_8_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_9_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_A_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_B_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_C_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_D_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_E_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_F_PAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SP_CB : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SP_Y : 8;
		unsigned int                           SP_CR : 8;
		unsigned int                           SP_CB : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_H_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              SP_H_ACC_INIT_FRAC : 12;
		unsigned int               SP_H_ACC_INIT_INT : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int               SP_H_ACC_INIT_INT : 11;
		unsigned int              SP_H_ACC_INIT_FRAC : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SUBPIC_V_ACCUM_INIT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              SP_V_ACC_INIT_FRAC : 12;
		unsigned int               SP_V_ACC_INIT_INT : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int               SP_V_ACC_INIT_INT : 11;
		unsigned int              SP_V_ACC_INIT_FRAC : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV1_Y_X_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     OV1_X_START : 13;
		unsigned int                                 : 3;
		unsigned int                     OV1_Y_START : 13;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                     OV1_Y_START : 13;
		unsigned int                                 : 3;
		unsigned int                     OV1_X_START : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV1_Y_X_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       OV1_X_END : 13;
		unsigned int                                 : 3;
		unsigned int                       OV1_Y_END : 13;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                       OV1_Y_END : 13;
		unsigned int                                 : 3;
		unsigned int                       OV1_X_END : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV1_PIPELINE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV1_DISP_PIPE_DELAY : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int             OV1_DISP_PIPE_DELAY : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_MISC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              SOFT_RESET_GRPH_PP : 1;
		unsigned int            SOFT_RESET_SUBPIC_PP : 1;
		unsigned int               SOFT_RESET_OV0_PP : 1;
		unsigned int                                 : 1;
		unsigned int            SOFT_RESET_GRPH_SCLK : 1;
		unsigned int          SOFT_RESET_SUBPIC_SCLK : 1;
		unsigned int             SOFT_RESET_OV0_SCLK : 1;
		unsigned int                                 : 1;
		unsigned int                   SYNC_STRENGTH : 2;
		unsigned int                SYNC_PAD_FLOP_EN : 1;
		unsigned int                                 : 1;
		unsigned int             SOFT_RESET_GRPH2_PP : 1;
		unsigned int                                 : 1;
		unsigned int                 SOFT_RESET_HDCP : 1;
		unsigned int           SOFT_RESET_GRPH2_SCLK : 1;
		unsigned int                 SOFT_RESET_LVDS : 1;
		unsigned int                 SOFT_RESET_TMDS : 1;
		unsigned int             SOFT_RESET_DIG_TMDS : 1;
		unsigned int                   SOFT_RESET_TV : 1;
		unsigned int          PALETTE2_MEM_RD_MARGIN : 4;
		unsigned int           PALETTE_MEM_RD_MARGIN : 4;
		unsigned int           RMX_BUF_MEM_RD_MARGIN : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int           RMX_BUF_MEM_RD_MARGIN : 4;
		unsigned int           PALETTE_MEM_RD_MARGIN : 4;
		unsigned int          PALETTE2_MEM_RD_MARGIN : 4;
		unsigned int                   SOFT_RESET_TV : 1;
		unsigned int             SOFT_RESET_DIG_TMDS : 1;
		unsigned int                 SOFT_RESET_TMDS : 1;
		unsigned int                 SOFT_RESET_LVDS : 1;
		unsigned int           SOFT_RESET_GRPH2_SCLK : 1;
		unsigned int                 SOFT_RESET_HDCP : 1;
		unsigned int                                 : 1;
		unsigned int             SOFT_RESET_GRPH2_PP : 1;
		unsigned int                                 : 1;
		unsigned int                SYNC_PAD_FLOP_EN : 1;
		unsigned int                   SYNC_STRENGTH : 2;
		unsigned int                                 : 1;
		unsigned int             SOFT_RESET_OV0_SCLK : 1;
		unsigned int          SOFT_RESET_SUBPIC_SCLK : 1;
		unsigned int            SOFT_RESET_GRPH_SCLK : 1;
		unsigned int                                 : 1;
		unsigned int               SOFT_RESET_OV0_PP : 1;
		unsigned int            SOFT_RESET_SUBPIC_PP : 1;
		unsigned int              SOFT_RESET_GRPH_PP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_MACRO_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DAC_WHITE_CNTL : 4;
		unsigned int                                 : 4;
		unsigned int                      DAC_BG_ADJ : 4;
		unsigned int                                 : 4;
		unsigned int                      DAC_PDWN_R : 1;
		unsigned int                      DAC_PDWN_G : 1;
		unsigned int                      DAC_PDWN_B : 1;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                      DAC_PDWN_B : 1;
		unsigned int                      DAC_PDWN_G : 1;
		unsigned int                      DAC_PDWN_R : 1;
		unsigned int                                 : 4;
		unsigned int                      DAC_BG_ADJ : 4;
		unsigned int                                 : 4;
		unsigned int                  DAC_WHITE_CNTL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_PWR_MAN {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DISP_PWR_MAN_D3_CRTC_EN : 1;
		unsigned int                                 : 3;
		unsigned int       DISP2_PWR_MAN_D3_CRTC2_EN : 1;
		unsigned int                                 : 3;
		unsigned int               DISP_PWR_MAN_DPMS : 2;
		unsigned int                                 : 6;
		unsigned int                     DISP_D3_RST : 1;
		unsigned int                 DISP_D3_REG_RST : 1;
		unsigned int                DISP_D3_GRPH_RST : 1;
		unsigned int              DISP_D3_SUBPIC_RST : 1;
		unsigned int                 DISP_D3_OV0_RST : 1;
		unsigned int              DISP_D1D2_GRPH_RST : 1;
		unsigned int            DISP_D1D2_SUBPIC_RST : 1;
		unsigned int               DISP_D1D2_OV0_RST : 1;
		unsigned int             DIG_TMDS_ENABLE_RST : 1;
		unsigned int                   TV_ENABLE_RST : 1;
		unsigned int                   AUTO_PWRUP_EN : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                   AUTO_PWRUP_EN : 1;
		unsigned int                   TV_ENABLE_RST : 1;
		unsigned int             DIG_TMDS_ENABLE_RST : 1;
		unsigned int               DISP_D1D2_OV0_RST : 1;
		unsigned int            DISP_D1D2_SUBPIC_RST : 1;
		unsigned int              DISP_D1D2_GRPH_RST : 1;
		unsigned int                 DISP_D3_OV0_RST : 1;
		unsigned int              DISP_D3_SUBPIC_RST : 1;
		unsigned int                DISP_D3_GRPH_RST : 1;
		unsigned int                 DISP_D3_REG_RST : 1;
		unsigned int                     DISP_D3_RST : 1;
		unsigned int                                 : 6;
		unsigned int               DISP_PWR_MAN_DPMS : 2;
		unsigned int                                 : 3;
		unsigned int       DISP2_PWR_MAN_D3_CRTC2_EN : 1;
		unsigned int                                 : 3;
		unsigned int         DISP_PWR_MAN_D3_CRTC_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_TEST_DEBUG_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               DISP_TEST_DISPENG : 1;
		unsigned int               DISP_TEST_PALETTE : 1;
		unsigned int                   DISP_TEST_DAC : 1;
		unsigned int                DISP_TEST_SUBPIC : 1;
		unsigned int              DISP_TEST_OV0SCALE : 1;
		unsigned int                   DISP_TEST_CLK : 1;
		unsigned int                                 : 2;
		unsigned int              DISP_TEST_DISP2ENG : 1;
		unsigned int              DISP_TEST_PALETTE2 : 1;
		unsigned int                                 : 6;
		unsigned int            DISP_GRPH2_UNDERFLOW : 1;
		unsigned int             DISP_CUR2_UNDERFLOW : 1;
		unsigned int                                 : 6;
		unsigned int             DISP_GRPH_UNDERFLOW : 1;
		unsigned int              DISP_CUR_UNDERFLOW : 1;
		unsigned int              DISP_OV0_UNDERFLOW : 1;
		unsigned int           DISP_SUBPIC_UNDERFLOW : 1;
		unsigned int        DISP_SUBPIC_FORCE_HI_PRI : 1;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int        DISP_SUBPIC_FORCE_HI_PRI : 1;
		unsigned int           DISP_SUBPIC_UNDERFLOW : 1;
		unsigned int              DISP_OV0_UNDERFLOW : 1;
		unsigned int              DISP_CUR_UNDERFLOW : 1;
		unsigned int             DISP_GRPH_UNDERFLOW : 1;
		unsigned int                                 : 6;
		unsigned int             DISP_CUR2_UNDERFLOW : 1;
		unsigned int            DISP_GRPH2_UNDERFLOW : 1;
		unsigned int                                 : 6;
		unsigned int              DISP_TEST_PALETTE2 : 1;
		unsigned int              DISP_TEST_DISP2ENG : 1;
		unsigned int                                 : 2;
		unsigned int                   DISP_TEST_CLK : 1;
		unsigned int              DISP_TEST_OV0SCALE : 1;
		unsigned int                DISP_TEST_SUBPIC : 1;
		unsigned int                   DISP_TEST_DAC : 1;
		unsigned int               DISP_TEST_PALETTE : 1;
		unsigned int               DISP_TEST_DISPENG : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_HW_DEBUG_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DISP_HW_0_DEBUG : 1;
		unsigned int                 DISP_HW_1_DEBUG : 1;
		unsigned int                 DISP_HW_2_DEBUG : 1;
		unsigned int                 DISP_HW_3_DEBUG : 1;
		unsigned int                 DISP_HW_4_DEBUG : 1;
		unsigned int                  CRT2_DISP1_SEL : 1;
		unsigned int                 DISP_HW_6_DEBUG : 1;
		unsigned int                 DISP_HW_7_DEBUG : 1;
		unsigned int                 DISP_HW_8_DEBUG : 1;
		unsigned int                 DISP_HW_9_DEBUG : 1;
		unsigned int                 DISP_HW_A_DEBUG : 1;
		unsigned int                 DISP_HW_B_DEBUG : 1;
		unsigned int                 DISP_HW_C_DEBUG : 1;
		unsigned int                 DISP_HW_D_DEBUG : 1;
		unsigned int                 DISP_HW_E_DEBUG : 1;
		unsigned int                 DISP_HW_F_DEBUG : 1;
		unsigned int                DISP_HW_10_DEBUG : 1;
		unsigned int                DISP_HW_11_DEBUG : 1;
		unsigned int                DISP_HW_12_DEBUG : 1;
		unsigned int                DISP_HW_13_DEBUG : 1;
		unsigned int                DISP_HW_14_DEBUG : 1;
		unsigned int                DISP_HW_15_DEBUG : 1;
		unsigned int                DISP_HW_16_DEBUG : 1;
		unsigned int                DISP_HW_17_DEBUG : 1;
		unsigned int                DISP_HW_18_DEBUG : 1;
		unsigned int                DISP_HW_19_DEBUG : 1;
		unsigned int                DISP_HW_1A_DEBUG : 1;
		unsigned int                DISP_HW_1B_DEBUG : 1;
		unsigned int                DISP_HW_1C_DEBUG : 1;
		unsigned int                DISP_HW_1D_DEBUG : 1;
		unsigned int                DISP_HW_1E_DEBUG : 1;
		unsigned int                DISP_HW_1F_DEBUG : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                DISP_HW_1F_DEBUG : 1;
		unsigned int                DISP_HW_1E_DEBUG : 1;
		unsigned int                DISP_HW_1D_DEBUG : 1;
		unsigned int                DISP_HW_1C_DEBUG : 1;
		unsigned int                DISP_HW_1B_DEBUG : 1;
		unsigned int                DISP_HW_1A_DEBUG : 1;
		unsigned int                DISP_HW_19_DEBUG : 1;
		unsigned int                DISP_HW_18_DEBUG : 1;
		unsigned int                DISP_HW_17_DEBUG : 1;
		unsigned int                DISP_HW_16_DEBUG : 1;
		unsigned int                DISP_HW_15_DEBUG : 1;
		unsigned int                DISP_HW_14_DEBUG : 1;
		unsigned int                DISP_HW_13_DEBUG : 1;
		unsigned int                DISP_HW_12_DEBUG : 1;
		unsigned int                DISP_HW_11_DEBUG : 1;
		unsigned int                DISP_HW_10_DEBUG : 1;
		unsigned int                 DISP_HW_F_DEBUG : 1;
		unsigned int                 DISP_HW_E_DEBUG : 1;
		unsigned int                 DISP_HW_D_DEBUG : 1;
		unsigned int                 DISP_HW_C_DEBUG : 1;
		unsigned int                 DISP_HW_B_DEBUG : 1;
		unsigned int                 DISP_HW_A_DEBUG : 1;
		unsigned int                 DISP_HW_9_DEBUG : 1;
		unsigned int                 DISP_HW_8_DEBUG : 1;
		unsigned int                 DISP_HW_7_DEBUG : 1;
		unsigned int                 DISP_HW_6_DEBUG : 1;
		unsigned int                  CRT2_DISP1_SEL : 1;
		unsigned int                 DISP_HW_4_DEBUG : 1;
		unsigned int                 DISP_HW_3_DEBUG : 1;
		unsigned int                 DISP_HW_2_DEBUG : 1;
		unsigned int                 DISP_HW_1_DEBUG : 1;
		unsigned int                 DISP_HW_0_DEBUG : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CRC_SIG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DAC_CRC_SIG_B : 10;
		unsigned int                                 : 6;
		unsigned int                   DAC_CRC_SIG_G : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                   DAC_CRC_SIG_G : 10;
		unsigned int                                 : 6;
		unsigned int                   DAC_CRC_SIG_B : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CRC_SIG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DAC_CRC_SIG_R : 10;
		unsigned int                                 : 6;
		unsigned int                   DAC_CRC_SIG_C : 6;
		unsigned int                                 : 10;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 10;
		unsigned int                   DAC_CRC_SIG_C : 6;
		unsigned int                                 : 6;
		unsigned int                   DAC_CRC_SIG_R : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_A_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_R : 12;
		unsigned int                                 : 4;
		unsigned int               OV0_LIN_TRANS_Y_R : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int               OV0_LIN_TRANS_Y_R : 12;
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_R : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_B_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV0_LIN_TRANS_OFF_R : 13;
		unsigned int                                 : 7;
		unsigned int              OV0_LIN_TRANS_Cr_R : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int              OV0_LIN_TRANS_Cr_R : 12;
		unsigned int                                 : 7;
		unsigned int             OV0_LIN_TRANS_OFF_R : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_C_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_G : 12;
		unsigned int                                 : 4;
		unsigned int               OV0_LIN_TRANS_Y_G : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int               OV0_LIN_TRANS_Y_G : 12;
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_G : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_D_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV0_LIN_TRANS_OFF_G : 13;
		unsigned int                                 : 7;
		unsigned int              OV0_LIN_TRANS_Cr_G : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int              OV0_LIN_TRANS_Cr_G : 12;
		unsigned int                                 : 7;
		unsigned int             OV0_LIN_TRANS_OFF_G : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_E_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_B : 12;
		unsigned int                                 : 4;
		unsigned int               OV0_LIN_TRANS_Y_B : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int               OV0_LIN_TRANS_Y_B : 12;
		unsigned int                                 : 4;
		unsigned int              OV0_LIN_TRANS_Cb_B : 12;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_LIN_TRANS_F_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             OV0_LIN_TRANS_OFF_B : 13;
		unsigned int                                 : 7;
		unsigned int              OV0_LIN_TRANS_Cr_B : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int              OV0_LIN_TRANS_Cr_B : 12;
		unsigned int                                 : 7;
		unsigned int             OV0_LIN_TRANS_OFF_B : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_0_F {
	struct {
#if		defined(qLittleEndian)
		unsigned int            OV0_GAMMA_0_F_OFFSET : 9;
		unsigned int                                 : 7;
		unsigned int             OV0_GAMMA_0_F_SLOPE : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int             OV0_GAMMA_0_F_SLOPE : 11;
		unsigned int                                 : 7;
		unsigned int            OV0_GAMMA_0_F_OFFSET : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_10_1F {
	struct {
#if		defined(qLittleEndian)
		unsigned int          OV0_GAMMA_10_1F_OFFSET : 9;
		unsigned int                                 : 7;
		unsigned int           OV0_GAMMA_10_1F_SLOPE : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int           OV0_GAMMA_10_1F_SLOPE : 11;
		unsigned int                                 : 7;
		unsigned int          OV0_GAMMA_10_1F_OFFSET : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_20_3F {
	struct {
#if		defined(qLittleEndian)
		unsigned int          OV0_GAMMA_20_3F_OFFSET : 10;
		unsigned int                                 : 6;
		unsigned int           OV0_GAMMA_20_3F_SLOPE : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int           OV0_GAMMA_20_3F_SLOPE : 10;
		unsigned int                                 : 6;
		unsigned int          OV0_GAMMA_20_3F_OFFSET : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_40_7F {
	struct {
#if		defined(qLittleEndian)
		unsigned int          OV0_GAMMA_40_7F_OFFSET : 10;
		unsigned int                                 : 6;
		unsigned int           OV0_GAMMA_40_7F_SLOPE : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int           OV0_GAMMA_40_7F_SLOPE : 9;
		unsigned int                                 : 6;
		unsigned int          OV0_GAMMA_40_7F_OFFSET : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_380_3BF {
	struct {
#if		defined(qLittleEndian)
		unsigned int        OV0_GAMMA_380_3BF_OFFSET : 9;
		unsigned int                                 : 7;
		unsigned int         OV0_GAMMA_380_3BF_SLOPE : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int         OV0_GAMMA_380_3BF_SLOPE : 9;
		unsigned int                                 : 7;
		unsigned int        OV0_GAMMA_380_3BF_OFFSET : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union OV0_GAMMA_3C0_3FF {
	struct {
#if		defined(qLittleEndian)
		unsigned int        OV0_GAMMA_3C0_3FF_OFFSET : 9;
		unsigned int                                 : 7;
		unsigned int         OV0_GAMMA_3C0_3FF_SLOPE : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int         OV0_GAMMA_3C0_3FF_SLOPE : 9;
		unsigned int                                 : 7;
		unsigned int        OV0_GAMMA_3C0_3FF_OFFSET : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_MERGE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DISP_ALPHA_MODE : 2;
		unsigned int                  DISP_ALPHA_INV : 1;
		unsigned int              DISP_ALPHA_PREMULT : 1;
		unsigned int                                 : 4;
		unsigned int              DISP_RGB_OFFSET_EN : 1;
		unsigned int                                 : 7;
		unsigned int                 DISP_GRPH_ALPHA : 8;
		unsigned int                  DISP_OV0_ALPHA : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                  DISP_OV0_ALPHA : 8;
		unsigned int                 DISP_GRPH_ALPHA : 8;
		unsigned int                                 : 7;
		unsigned int              DISP_RGB_OFFSET_EN : 1;
		unsigned int                                 : 4;
		unsigned int              DISP_ALPHA_PREMULT : 1;
		unsigned int                  DISP_ALPHA_INV : 1;
		unsigned int                 DISP_ALPHA_MODE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP_OUTPUT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DISP_DAC_SOURCE : 2;
		unsigned int                                 : 6;
		unsigned int                 DISP_RMX_SOURCE : 1;
		unsigned int                                 : 1;
		unsigned int                DISP_RMX_DITH_EN : 1;
		unsigned int                                 : 16;
		unsigned int          DISP_TV_EVEN_FLAG_CNTL : 2;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int          DISP_TV_EVEN_FLAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                DISP_RMX_DITH_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 DISP_RMX_SOURCE : 1;
		unsigned int                                 : 6;
		unsigned int                 DISP_DAC_SOURCE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DISP2_MERGE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int             DISP2_RGB_OFFSET_EN : 1;
		unsigned int                                 : 23;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 23;
		unsigned int             DISP2_RGB_OFFSET_EN : 1;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CRC2_SIG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DAC_CRC2_SIG_B : 10;
		unsigned int                                 : 6;
		unsigned int                  DAC_CRC2_SIG_G : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                  DAC_CRC2_SIG_G : 10;
		unsigned int                                 : 6;
		unsigned int                  DAC_CRC2_SIG_B : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CRC2_SIG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DAC_CRC2_SIG_R : 10;
		unsigned int                                 : 6;
		unsigned int                  DAC_CRC2_SIG_C : 6;
		unsigned int                                 : 10;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 10;
		unsigned int                  DAC_CRC2_SIG_C : 6;
		unsigned int                                 : 6;
		unsigned int                  DAC_CRC2_SIG_R : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RMX_HORZ_PHASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int            RMX_HORZ_START_PHASE : 12;
		unsigned int                  RMX_H_ACC_INIT : 1;
		unsigned int                  RMX_V_ACC_INIT : 1;
		unsigned int                                 : 2;
		unsigned int            RMX_VERT_START_PHASE : 12;
		unsigned int    RMX_VERT_HALF_START_PHASE_EN : 1;
		unsigned int RMX_VERT_START_PHASE_OVERFLOW_EN : 1;
		unsigned int    RMX_HORZ_HALF_START_PHASE_EN : 1;
		unsigned int RMX_HORZ_START_PHASE_OVERFLOW_EN : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int RMX_HORZ_START_PHASE_OVERFLOW_EN : 1;
		unsigned int    RMX_HORZ_HALF_START_PHASE_EN : 1;
		unsigned int RMX_VERT_START_PHASE_OVERFLOW_EN : 1;
		unsigned int    RMX_VERT_HALF_START_PHASE_EN : 1;
		unsigned int            RMX_VERT_START_PHASE : 12;
		unsigned int                                 : 2;
		unsigned int                  RMX_V_ACC_INIT : 1;
		unsigned int                  RMX_H_ACC_INIT : 1;
		unsigned int            RMX_HORZ_START_PHASE : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HDCP_GEN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int        HDCP_AUTHORIZED_INT_STAT : 1;
		unsigned int         HDCP_AUTHORIZED_INT_POL : 1;
		unsigned int        HDCP_AUTHORIZED_INT_MASK : 1;
		unsigned int        HOT_PLUG_AFFECTS_HDCP_EN : 1;
		unsigned int                 HDCP_AUTHORIZED : 1;
		unsigned int                      HDCP_RESET : 1;
		unsigned int           HDCP_I2C_SCL_DRIVE_EN : 1;
		unsigned int           HDCP_I2C_SDA_DRIVE_EN : 1;
		unsigned int             HDCP_I2C_TIME_LIMIT : 8;
		unsigned int               HDCP_I2C_PRESCALE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int               HDCP_I2C_PRESCALE : 16;
		unsigned int             HDCP_I2C_TIME_LIMIT : 8;
		unsigned int           HDCP_I2C_SDA_DRIVE_EN : 1;
		unsigned int           HDCP_I2C_SCL_DRIVE_EN : 1;
		unsigned int                      HDCP_RESET : 1;
		unsigned int                 HDCP_AUTHORIZED : 1;
		unsigned int        HOT_PLUG_AFFECTS_HDCP_EN : 1;
		unsigned int        HDCP_AUTHORIZED_INT_MASK : 1;
		unsigned int         HDCP_AUTHORIZED_INT_POL : 1;
		unsigned int        HDCP_AUTHORIZED_INT_STAT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HDCP_CONTROL {
	struct {
#if		defined(qLittleEndian)
		unsigned int           HDCP_UPSTREAM_ADDRESS : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int           HDCP_UPSTREAM_ADDRESS : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HDCP_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int              HDCP_UPSTREAM_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int              HDCP_UPSTREAM_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HDCP_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   HDCP_DEBUG_EN : 1;
		unsigned int   I2C_CNTL_REGS_AFFECT_HDCP_I2C : 1;
		unsigned int             SW_CAN_QUEUE_I2C_GO : 1;
		unsigned int        USE_HDCP_I2C_SHORT_READS : 1;
		unsigned int                       HDCP_MODE : 1;
		unsigned int      HDCP_HOTPLUG_SEL_BYPASS_EN : 1;
		unsigned int             HDCP_HOTPLUG_SELECT : 1;
		unsigned int                 HDCP_DEBUG_BIT7 : 1;
		unsigned int                 HDCP_DEBUG_ADDR : 8;
		unsigned int                 HDCP_DEBUG_DATA : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                 HDCP_DEBUG_DATA : 16;
		unsigned int                 HDCP_DEBUG_ADDR : 8;
		unsigned int                 HDCP_DEBUG_BIT7 : 1;
		unsigned int             HDCP_HOTPLUG_SELECT : 1;
		unsigned int      HDCP_HOTPLUG_SEL_BYPASS_EN : 1;
		unsigned int                       HDCP_MODE : 1;
		unsigned int        USE_HDCP_I2C_SHORT_READS : 1;
		unsigned int             SW_CAN_QUEUE_I2C_GO : 1;
		unsigned int   I2C_CNTL_REGS_AFFECT_HDCP_I2C : 1;
		unsigned int                   HDCP_DEBUG_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLOCK_CNTL_INDEX_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PLL_ADDR : 6;
		unsigned int                                 : 1;
		unsigned int                       PLL_WR_EN : 1;
		unsigned int                    PPLL_DIV_SEL : 2;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                    PPLL_DIV_SEL : 2;
		unsigned int                       PLL_WR_EN : 1;
		unsigned int                                 : 1;
		unsigned int                        PLL_ADDR : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLOCK_CNTL_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PLL_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PLL_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_DIV_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PPLL_FB0_DIV : 11;
		unsigned int                                 : 4;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  PPLL_POST0_DIV : 3;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                  PPLL_POST0_DIV : 3;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 4;
		unsigned int                    PPLL_FB0_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_DIV_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PPLL_FB1_DIV : 11;
		unsigned int                                 : 4;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  PPLL_POST1_DIV : 3;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                  PPLL_POST1_DIV : 3;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 4;
		unsigned int                    PPLL_FB1_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_DIV_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PPLL_FB2_DIV : 11;
		unsigned int                                 : 4;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  PPLL_POST2_DIV : 3;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                  PPLL_POST2_DIV : 3;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 4;
		unsigned int                    PPLL_FB2_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_DIV_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PPLL_FB3_DIV : 11;
		unsigned int                                 : 4;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  PPLL_POST3_DIV : 3;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                  PPLL_POST3_DIV : 3;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 4;
		unsigned int                    PPLL_FB3_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HTOTAL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   HTOT_PIX_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int                  HTOT_VCLK_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int                  HTOT_PPLL_SLIP : 3;
		unsigned int                                 : 5;
		unsigned int                  HTOT_CNTL_EDGE : 1;
		unsigned int                                 : 3;
		unsigned int                HTOT_CNTL_VGA_EN : 1;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int                HTOT_CNTL_VGA_EN : 1;
		unsigned int                                 : 3;
		unsigned int                  HTOT_CNTL_EDGE : 1;
		unsigned int                                 : 5;
		unsigned int                  HTOT_PPLL_SLIP : 3;
		unsigned int                                 : 4;
		unsigned int                  HTOT_VCLK_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int                   HTOT_PIX_SLIP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PLL_TEST_CNTL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     TST_SRC_SEL : 7;
		unsigned int                     TST_SRC_INV : 1;
		unsigned int                    TST_DIVIDERS : 1;
		unsigned int                 PLL_MASK_READ_B : 1;
		unsigned int                                 : 2;
		unsigned int                 TESTCLK_MUX_SEL : 1;
		unsigned int                                 : 2;
		unsigned int                      ANALOG_MON : 9;
		unsigned int                      TEST_COUNT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TEST_COUNT : 8;
		unsigned int                      ANALOG_MON : 9;
		unsigned int                                 : 2;
		unsigned int                 TESTCLK_MUX_SEL : 1;
		unsigned int                                 : 2;
		unsigned int                 PLL_MASK_READ_B : 1;
		unsigned int                    TST_DIVIDERS : 1;
		unsigned int                     TST_SRC_INV : 1;
		unsigned int                     TST_SRC_SEL : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union P2PLL_DIV_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    P2PLL_FB_DIV : 11;
		unsigned int                                 : 4;
		unsigned int           P2PLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  P2PLL_POST_DIV : 3;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                  P2PLL_POST_DIV : 3;
		unsigned int           P2PLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 4;
		unsigned int                    P2PLL_FB_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HTOTAL2_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  HTOT2_PIX_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int              HTOT2_PIX2CLK_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int                HTOT2_P2PLL_SLIP : 3;
		unsigned int                                 : 5;
		unsigned int                 HTOT2_CNTL_EDGE : 1;
		unsigned int                                 : 3;
		unsigned int               HTOT2_CNTL_UPDATE : 1;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int               HTOT2_CNTL_UPDATE : 1;
		unsigned int                                 : 3;
		unsigned int                 HTOT2_CNTL_EDGE : 1;
		unsigned int                                 : 5;
		unsigned int                HTOT2_P2PLL_SLIP : 3;
		unsigned int                                 : 4;
		unsigned int              HTOT2_PIX2CLK_SLIP : 4;
		unsigned int                                 : 4;
		unsigned int                  HTOT2_PIX_SLIP : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DAC_CNTL2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DAC_CLK_SEL : 1;
		unsigned int                    DAC2_CLK_SEL : 1;
		unsigned int                                 : 3;
		unsigned int             PALETTE_ACCESS_CNTL : 1;
		unsigned int                                 : 1;
		unsigned int                     DAC2_CMP_EN : 1;
		unsigned int                  DAC2_CMP_OUT_R : 1;
		unsigned int                  DAC2_CMP_OUT_G : 1;
		unsigned int                  DAC2_CMP_OUT_B : 1;
		unsigned int                 DAC2_CMP_OUTPUT : 1;
		unsigned int                                 : 2;
		unsigned int                DAC2_EXPAND_MODE : 1;
		unsigned int                                 : 1;
		unsigned int                      CRT2_SENSE : 1;
		unsigned int               CRT2_DETECTION_ON : 1;
		unsigned int                DAC_CRC2_CONT_EN : 1;
		unsigned int                     DAC_CRC2_EN : 1;
		unsigned int                  DAC_CRC2_FIELD : 1;
		unsigned int          DAC2_LUT_COUNTER_LIMIT : 2;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int          DAC2_LUT_COUNTER_LIMIT : 2;
		unsigned int                  DAC_CRC2_FIELD : 1;
		unsigned int                     DAC_CRC2_EN : 1;
		unsigned int                DAC_CRC2_CONT_EN : 1;
		unsigned int               CRT2_DETECTION_ON : 1;
		unsigned int                      CRT2_SENSE : 1;
		unsigned int                                 : 1;
		unsigned int                DAC2_EXPAND_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                 DAC2_CMP_OUTPUT : 1;
		unsigned int                  DAC2_CMP_OUT_B : 1;
		unsigned int                  DAC2_CMP_OUT_G : 1;
		unsigned int                  DAC2_CMP_OUT_R : 1;
		unsigned int                     DAC2_CMP_EN : 1;
		unsigned int                                 : 1;
		unsigned int             PALETTE_ACCESS_CNTL : 1;
		unsigned int                                 : 3;
		unsigned int                    DAC2_CLK_SEL : 1;
		unsigned int                     DAC_CLK_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MASTER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    TV_ASYNC_RST : 1;
		unsigned int                   CRT_ASYNC_RST : 1;
		unsigned int                                 : 1;
		unsigned int               RESTART_PHASE_FIX : 1;
		unsigned int               TV_FIFO_ASYNC_RST : 1;
		unsigned int              MV_BP_LEVEL_FIX_EN : 1;
		unsigned int                 EXTRA_BIT_ONE_0 : 1;
		unsigned int                                 : 2;
		unsigned int                  CRT_FIFO_CE_EN : 1;
		unsigned int                   TV_FIFO_CE_EN : 1;
		unsigned int                                 : 3;
		unsigned int                 RE_SYNC_NOW_SEL : 2;
		unsigned int                EXTRA_BIT_ZERO_1 : 1;
		unsigned int                 EXTRA_BIT_ONE_1 : 1;
		unsigned int                EXTRA_BIT_ZERO_2 : 1;
		unsigned int                 EXTRA_BIT_ONE_2 : 1;
		unsigned int                                 : 10;
		unsigned int                TVCLK_ALWAYS_ONb : 1;
		unsigned int                           TV_ON : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                           TV_ON : 1;
		unsigned int                TVCLK_ALWAYS_ONb : 1;
		unsigned int                                 : 10;
		unsigned int                 EXTRA_BIT_ONE_2 : 1;
		unsigned int                EXTRA_BIT_ZERO_2 : 1;
		unsigned int                 EXTRA_BIT_ONE_1 : 1;
		unsigned int                EXTRA_BIT_ZERO_1 : 1;
		unsigned int                 RE_SYNC_NOW_SEL : 2;
		unsigned int                                 : 3;
		unsigned int                   TV_FIFO_CE_EN : 1;
		unsigned int                  CRT_FIFO_CE_EN : 1;
		unsigned int                                 : 2;
		unsigned int                 EXTRA_BIT_ONE_0 : 1;
		unsigned int              MV_BP_LEVEL_FIX_EN : 1;
		unsigned int               TV_FIFO_ASYNC_RST : 1;
		unsigned int               RESTART_PHASE_FIX : 1;
		unsigned int                                 : 1;
		unsigned int                   CRT_ASYNC_RST : 1;
		unsigned int                    TV_ASYNC_RST : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_RGB_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                    UV_DITHER_EN : 2;
		unsigned int                  SWITCH_TO_BLUE : 1;
		unsigned int                   RGB_DITHER_EN : 1;
		unsigned int                                 : 2;
		unsigned int                     RGB_SRC_SEL : 2;
		unsigned int             RGB_CONVERT_BY_PASS : 1;
		unsigned int                 RE_SYNC_NOW_POS : 1;
		unsigned int                                 : 1;
		unsigned int                IGNORE_ODD_LINES : 1;
		unsigned int                  DSP_VCOUNT_RST : 1;
		unsigned int                 DSP2_VCOUNT_RST : 1;
		unsigned int               UVRAM_READ_MARGIN : 4;
		unsigned int     FIFORAM_FFMACRO_READ_MARGIN : 4;
		unsigned int                   RGB_ATTEN_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                   RGB_ATTEN_VAL : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   RGB_ATTEN_VAL : 4;
		unsigned int                                 : 2;
		unsigned int                   RGB_ATTEN_SEL : 2;
		unsigned int     FIFORAM_FFMACRO_READ_MARGIN : 4;
		unsigned int               UVRAM_READ_MARGIN : 4;
		unsigned int                 DSP2_VCOUNT_RST : 1;
		unsigned int                  DSP_VCOUNT_RST : 1;
		unsigned int                IGNORE_ODD_LINES : 1;
		unsigned int                                 : 1;
		unsigned int                 RE_SYNC_NOW_POS : 1;
		unsigned int             RGB_CONVERT_BY_PASS : 1;
		unsigned int                     RGB_SRC_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                   RGB_DITHER_EN : 1;
		unsigned int                  SWITCH_TO_BLUE : 1;
		unsigned int                    UV_DITHER_EN : 2;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_SYNC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         SYNC_OE : 1;
		unsigned int                        SYNC_OUT : 1;
		unsigned int                         SYNC_IN : 1;
		unsigned int                        SYNC_PUB : 1;
		unsigned int                         SYNC_PD : 1;
		unsigned int                TV_SYNC_IO_DRIVE : 1;
		unsigned int                                 : 2;
		unsigned int                         SYNC_MX : 4;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                         SYNC_MX : 4;
		unsigned int                                 : 2;
		unsigned int                TV_SYNC_IO_DRIVE : 1;
		unsigned int                         SYNC_PD : 1;
		unsigned int                        SYNC_PUB : 1;
		unsigned int                         SYNC_IN : 1;
		unsigned int                        SYNC_OUT : 1;
		unsigned int                         SYNC_OE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HTOTAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_HTOTAL : 11;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                        D_HTOTAL : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HDISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         D_HDISP : 10;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                         D_HDISP : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HSTART {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_HSTART : 11;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                        D_HSTART : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HCOUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_HCOUNT : 11;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                        D_HCOUNT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VTOTAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_VTOTAL : 10;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                        D_VTOTAL : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VDISP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         D_VDISP : 10;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                         D_VDISP : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VCOUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_VCOUNT : 10;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                        D_VCOUNT : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_FTOTAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_FTOTAL : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                        D_FTOTAL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_FCOUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        D_FCOUNT : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                        D_FCOUNT : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_FRESTART {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      D_FRESTART : 4;
		unsigned int                                 : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 28;
		unsigned int                      D_FRESTART : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HRESTART {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      D_HRESTART : 11;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                      D_HRESTART : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VRESTART {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      D_VRESTART : 10;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                      D_VRESTART : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HOST_READ_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 HOST_RD_DATA_W0 : 16;
		unsigned int                 HOST_RD_DATA_W1 : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 HOST_RD_DATA_W1 : 12;
		unsigned int                 HOST_RD_DATA_W0 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HOST_WRITE_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 HOST_WT_DATA_W0 : 16;
		unsigned int                 HOST_WT_DATA_W1 : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 HOST_WT_DATA_W1 : 12;
		unsigned int                 HOST_WT_DATA_W0 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_HOST_RD_WT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        HOST_ADR : 9;
		unsigned int                                 : 3;
		unsigned int                    HOST_FIFO_RD : 1;
		unsigned int                HOST_FIFO_RD_ACK : 1;
		unsigned int                    HOST_FIFO_WT : 1;
		unsigned int                HOST_FIFO_WT_ACK : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                HOST_FIFO_WT_ACK : 1;
		unsigned int                    HOST_FIFO_WT : 1;
		unsigned int                HOST_FIFO_RD_ACK : 1;
		unsigned int                    HOST_FIFO_RD : 1;
		unsigned int                                 : 3;
		unsigned int                        HOST_ADR : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VSCALER_CNTL1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          UV_INC : 16;
		unsigned int                      UV_THINNER : 7;
		unsigned int                                 : 1;
		unsigned int                          Y_W_EN : 1;
		unsigned int                                 : 1;
		unsigned int                     Y_DEL_W_SIG : 3;
		unsigned int                   RESTART_FIELD : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                   RESTART_FIELD : 1;
		unsigned int                     Y_DEL_W_SIG : 3;
		unsigned int                                 : 1;
		unsigned int                          Y_W_EN : 1;
		unsigned int                                 : 1;
		unsigned int                      UV_THINNER : 7;
		unsigned int                          UV_INC : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_TIMING_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           H_INC : 12;
		unsigned int                                 : 4;
		unsigned int                       REQ_DELAY : 3;
		unsigned int                     REQ_Y_FIRST : 1;
		unsigned int                 MV_VBIPULSE_ENB : 1;
		unsigned int              FORCE_BURST_ALWAYS : 1;
		unsigned int                                 : 1;
		unsigned int            UV_POST_SCALE_BYPASS : 1;
		unsigned int            UV_OUTPUT_POST_SCALE : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int            UV_OUTPUT_POST_SCALE : 8;
		unsigned int            UV_POST_SCALE_BYPASS : 1;
		unsigned int                                 : 1;
		unsigned int              FORCE_BURST_ALWAYS : 1;
		unsigned int                 MV_VBIPULSE_ENB : 1;
		unsigned int                     REQ_Y_FIRST : 1;
		unsigned int                       REQ_DELAY : 3;
		unsigned int                                 : 4;
		unsigned int                           H_INC : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VSCALER_CNTL2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DITHER_MODE : 1;
		unsigned int              Y_OUTPUT_DITHER_EN : 1;
		unsigned int             UV_OUTPUT_DITHER_EN : 1;
		unsigned int             UV_TO_BUF_DITHER_EN : 1;
		unsigned int                                 : 20;
		unsigned int                   UV_ACCUM_INIT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                   UV_ACCUM_INIT : 8;
		unsigned int                                 : 20;
		unsigned int             UV_TO_BUF_DITHER_EN : 1;
		unsigned int             UV_OUTPUT_DITHER_EN : 1;
		unsigned int              Y_OUTPUT_DITHER_EN : 1;
		unsigned int                     DITHER_MODE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_Y_FALL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               Y_FALL_ACCUM_INIT : 16;
		unsigned int                Y_FALL_PING_PONG : 1;
		unsigned int                       Y_COEF_EN : 1;
		unsigned int                                 : 6;
		unsigned int                    Y_COEF_VALUE : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                    Y_COEF_VALUE : 8;
		unsigned int                                 : 6;
		unsigned int                       Y_COEF_EN : 1;
		unsigned int                Y_FALL_PING_PONG : 1;
		unsigned int               Y_FALL_ACCUM_INIT : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_Y_RISE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               Y_RISE_ACCUM_INIT : 16;
		unsigned int                Y_RISE_PING_PONG : 1;
		unsigned int                   MV_STRIPE_ENB : 1;
		unsigned int                  MV_BPPULSE_ENB : 1;
		unsigned int                                 : 1;
		unsigned int                 MV_ZONE_1_PHASE : 1;
		unsigned int                 MV_ZONE_2_PHASE : 1;
		unsigned int                 MV_ZONE_3_PHASE : 1;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                 MV_ZONE_3_PHASE : 1;
		unsigned int                 MV_ZONE_2_PHASE : 1;
		unsigned int                 MV_ZONE_1_PHASE : 1;
		unsigned int                                 : 1;
		unsigned int                  MV_BPPULSE_ENB : 1;
		unsigned int                   MV_STRIPE_ENB : 1;
		unsigned int                Y_RISE_PING_PONG : 1;
		unsigned int               Y_RISE_ACCUM_INIT : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_Y_SAW_TOOTH_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 Y_SAW_TOOTH_AMP : 16;
		unsigned int               Y_SAW_TOOTH_SLOPE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int               Y_SAW_TOOTH_SLOPE : 16;
		unsigned int                 Y_SAW_TOOTH_AMP : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_UPSAMP_AND_GAIN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      YUPSAMP_EN : 1;
		unsigned int                    YUPSAMP_FLAT : 1;
		unsigned int                     UVUPSAMP_EN : 1;
		unsigned int                   UVUPSAMP_FLAT : 1;
		unsigned int             YUPSAMP_WINDOW_CNTL : 1;
		unsigned int                YUPSAMP_COEF_SEL : 1;
		unsigned int                                 : 2;
		unsigned int                      Y_BREAK_EN : 1;
		unsigned int                                 : 1;
		unsigned int                     UV_BREAK_EN : 1;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                     UV_BREAK_EN : 1;
		unsigned int                                 : 1;
		unsigned int                      Y_BREAK_EN : 1;
		unsigned int                                 : 2;
		unsigned int                YUPSAMP_COEF_SEL : 1;
		unsigned int             YUPSAMP_WINDOW_CNTL : 1;
		unsigned int                   UVUPSAMP_FLAT : 1;
		unsigned int                     UVUPSAMP_EN : 1;
		unsigned int                    YUPSAMP_FLAT : 1;
		unsigned int                      YUPSAMP_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_GAIN_LIMIT_SETTINGS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    Y_GAIN_LIMIT : 11;
		unsigned int                                 : 5;
		unsigned int                   UV_GAIN_LIMIT : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                   UV_GAIN_LIMIT : 9;
		unsigned int                                 : 5;
		unsigned int                    Y_GAIN_LIMIT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_LINEAR_GAIN_SETTINGS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          Y_GAIN : 9;
		unsigned int                                 : 7;
		unsigned int                         UV_GAIN : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                         UV_GAIN : 9;
		unsigned int                                 : 7;
		unsigned int                          Y_GAIN : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MODULATOR_CNTL1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   YY_FILT_BLEND : 2;
		unsigned int                         YFLT_EN : 1;
		unsigned int                        UVFLT_EN : 1;
		unsigned int                                 : 2;
		unsigned int                    ALT_PHASE_EN : 1;
		unsigned int                  SYNC_TIP_LEVEL : 1;
		unsigned int                    SET_UP_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                     BLANK_LEVEL : 7;
		unsigned int                 SLEW_RATE_LIMIT : 1;
		unsigned int               FORCE_BLACK_WHITE : 1;
		unsigned int                                 : 1;
		unsigned int                    MV_VSYNC_AMP : 1;
		unsigned int                    MV_HSYNC_AMP : 1;
		unsigned int                   CY_FILT_BLEND : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   CY_FILT_BLEND : 4;
		unsigned int                    MV_HSYNC_AMP : 1;
		unsigned int                    MV_VSYNC_AMP : 1;
		unsigned int                                 : 1;
		unsigned int               FORCE_BLACK_WHITE : 1;
		unsigned int                 SLEW_RATE_LIMIT : 1;
		unsigned int                     BLANK_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                    SET_UP_LEVEL : 7;
		unsigned int                  SYNC_TIP_LEVEL : 1;
		unsigned int                    ALT_PHASE_EN : 1;
		unsigned int                                 : 2;
		unsigned int                        UVFLT_EN : 1;
		unsigned int                         YFLT_EN : 1;
		unsigned int                   YY_FILT_BLEND : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MODULATOR_CNTL2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   U_BURST_LEVEL : 9;
		unsigned int                                 : 7;
		unsigned int                   V_BURST_LEVEL : 9;
		unsigned int                                 : 1;
		unsigned int                     SETUP_DELAY : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                     SETUP_DELAY : 6;
		unsigned int                                 : 1;
		unsigned int                   V_BURST_LEVEL : 9;
		unsigned int                                 : 7;
		unsigned int                   U_BURST_LEVEL : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MV_MODE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 MV_AGC_CYC_MODE : 1;
		unsigned int             MV_AGC_CYC_TMODE_EN : 1;
		unsigned int                MV_AGC_AMPL_STEP : 4;
		unsigned int           MV_AGC_CLK_DEVIDE_SEL : 1;
		unsigned int                      MV_OVRB_EN : 1;
		unsigned int                   MV_OVRB_LEVEL : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                   MV_OVRB_LEVEL : 8;
		unsigned int                      MV_OVRB_EN : 1;
		unsigned int           MV_AGC_CLK_DEVIDE_SEL : 1;
		unsigned int                MV_AGC_AMPL_STEP : 4;
		unsigned int             MV_AGC_CYC_TMODE_EN : 1;
		unsigned int                 MV_AGC_CYC_MODE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MV_STRIPE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 MV_LINE_1_PHASE : 2;
		unsigned int                 MV_LINE_2_PHASE : 2;
		unsigned int                 MV_LINE_3_PHASE : 2;
		unsigned int                 MV_LINE_4_PHASE : 2;
		unsigned int                 MV_LINE_5_PHASE : 2;
		unsigned int                                 : 22;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 22;
		unsigned int                 MV_LINE_5_PHASE : 2;
		unsigned int                 MV_LINE_4_PHASE : 2;
		unsigned int                 MV_LINE_3_PHASE : 2;
		unsigned int                 MV_LINE_2_PHASE : 2;
		unsigned int                 MV_LINE_1_PHASE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MV_LEVEL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  MV_BLANK_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                  MV_SETUP_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                   MV_AGC_AMPL_A : 8;
		unsigned int                   MV_AGC_AMPL_B : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                   MV_AGC_AMPL_B : 7;
		unsigned int                   MV_AGC_AMPL_A : 8;
		unsigned int                                 : 1;
		unsigned int                  MV_SETUP_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                  MV_BLANK_LEVEL : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_MV_LEVEL_CNTL2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 MV_AGC_AMPL_MAX : 8;
		unsigned int                     MV_BP_LEVEL : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                     MV_BP_LEVEL : 8;
		unsigned int                 MV_AGC_AMPL_MAX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_PRE_DAC_MUX_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        Y_RED_EN : 1;
		unsigned int                        C_GRN_EN : 1;
		unsigned int                      CMP_BLU_EN : 1;
		unsigned int                   DAC_DITHER_EN : 1;
		unsigned int                          RED_MX : 3;
		unsigned int                                 : 1;
		unsigned int                          GRN_MX : 3;
		unsigned int                                 : 1;
		unsigned int                          BLU_MX : 3;
		unsigned int                                 : 1;
		unsigned int                  FORCE_DAC_DATA : 10;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                  FORCE_DAC_DATA : 10;
		unsigned int                                 : 1;
		unsigned int                          BLU_MX : 3;
		unsigned int                                 : 1;
		unsigned int                          GRN_MX : 3;
		unsigned int                                 : 1;
		unsigned int                          RED_MX : 3;
		unsigned int                   DAC_DITHER_EN : 1;
		unsigned int                      CMP_BLU_EN : 1;
		unsigned int                        C_GRN_EN : 1;
		unsigned int                        Y_RED_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_DAC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          NBLANK : 1;
		unsigned int                           NHOLD : 1;
		unsigned int                        PEDESTAL : 1;
		unsigned int                                 : 1;
		unsigned int                          DETECT : 1;
		unsigned int                          CMPOUT : 1;
		unsigned int                         BGSLEEP : 1;
		unsigned int                                 : 1;
		unsigned int                             STD : 2;
		unsigned int                                 : 2;
		unsigned int                             MON : 4;
		unsigned int                           BGADJ : 4;
		unsigned int                          DACADJ : 4;
		unsigned int                          RDACPD : 1;
		unsigned int                          GDACPD : 1;
		unsigned int                          BDACPD : 1;
		unsigned int                                 : 2;
		unsigned int                         RDACDET : 1;
		unsigned int                         GDACDET : 1;
		unsigned int                         BDACDET : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         BDACDET : 1;
		unsigned int                         GDACDET : 1;
		unsigned int                         RDACDET : 1;
		unsigned int                                 : 2;
		unsigned int                          BDACPD : 1;
		unsigned int                          GDACPD : 1;
		unsigned int                          RDACPD : 1;
		unsigned int                          DACADJ : 4;
		unsigned int                           BGADJ : 4;
		unsigned int                             MON : 4;
		unsigned int                                 : 2;
		unsigned int                             STD : 2;
		unsigned int                                 : 1;
		unsigned int                         BGSLEEP : 1;
		unsigned int                          CMPOUT : 1;
		unsigned int                          DETECT : 1;
		unsigned int                                 : 1;
		unsigned int                        PEDESTAL : 1;
		unsigned int                           NHOLD : 1;
		unsigned int                          NBLANK : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_CRC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  V_COMP_DATA_EN : 2;
		unsigned int                     V_COMP_GATE : 1;
		unsigned int                       V_COMP_EN : 1;
		unsigned int                RST_SUBC_ONRSTRT : 1;
		unsigned int                CRC_TV_RSTRT_SEL : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                CRC_TV_RSTRT_SEL : 1;
		unsigned int                RST_SUBC_ONRSTRT : 1;
		unsigned int                       V_COMP_EN : 1;
		unsigned int                     V_COMP_GATE : 1;
		unsigned int                  V_COMP_DATA_EN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VIDEO_PORT_SIG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         CRC_SIG : 30;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                         CRC_SIG : 30;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VBI_CC_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VBI_CC_DATA : 16;
		unsigned int                                 : 8;
		unsigned int                       VBI_CC_WT : 1;
		unsigned int                   VBI_CC_WT_ACK : 1;
		unsigned int                     VBI_CC_HOLD : 1;
		unsigned int                                 : 4;
		unsigned int                   VBI_DECODE_EN : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VBI_DECODE_EN : 1;
		unsigned int                                 : 4;
		unsigned int                     VBI_CC_HOLD : 1;
		unsigned int                   VBI_CC_WT_ACK : 1;
		unsigned int                       VBI_CC_WT : 1;
		unsigned int                                 : 8;
		unsigned int                     VBI_CC_DATA : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VBI_EDS_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VBI_EDS_DATA : 16;
		unsigned int                                 : 8;
		unsigned int                      VBI_EDS_WT : 1;
		unsigned int                  VBI_EDS_WT_ACK : 1;
		unsigned int                    VBI_EDS_HOLD : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                    VBI_EDS_HOLD : 1;
		unsigned int                  VBI_EDS_WT_ACK : 1;
		unsigned int                      VBI_EDS_WT : 1;
		unsigned int                                 : 8;
		unsigned int                    VBI_EDS_DATA : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VBI_20BIT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 VBI_20BIT_DATA0 : 16;
		unsigned int                 VBI_20BIT_DATA1 : 4;
		unsigned int                                 : 4;
		unsigned int                    VBI_20BIT_WT : 1;
		unsigned int                VBI_20BIT_WT_ACK : 1;
		unsigned int                  VBI_20BIT_HOLD : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                  VBI_20BIT_HOLD : 1;
		unsigned int                VBI_20BIT_WT_ACK : 1;
		unsigned int                    VBI_20BIT_WT : 1;
		unsigned int                                 : 4;
		unsigned int                 VBI_20BIT_DATA1 : 4;
		unsigned int                 VBI_20BIT_DATA0 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VBI_DTO_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VBI_CC_DTO_P : 16;
		unsigned int                 VBI_20BIT_DTO_P : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                 VBI_20BIT_DTO_P : 16;
		unsigned int                    VBI_CC_DTO_P : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VBI_LEVEL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VBI_CC_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                 VBI_20BIT_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int              VBI_CLK_RUNIN_GAIN : 9;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int              VBI_CLK_RUNIN_GAIN : 9;
		unsigned int                                 : 1;
		unsigned int                 VBI_20BIT_LEVEL : 7;
		unsigned int                                 : 1;
		unsigned int                    VBI_CC_LEVEL : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_UV_ADR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAX_UV_ADR : 8;
		unsigned int                  TABLE1_BOT_ADR : 8;
		unsigned int                  TABLE3_TOP_ADR : 8;
		unsigned int                    MV_DECODE_EN : 1;
		unsigned int                 HCODE_TABLE_SEL : 2;
		unsigned int                 VCODE_TABLE_SEL : 2;
		unsigned int             MV_LINES_PER_STRIPE : 2;
		unsigned int                SWITCH_TABLE_REQ : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                SWITCH_TABLE_REQ : 1;
		unsigned int             MV_LINES_PER_STRIPE : 2;
		unsigned int                 VCODE_TABLE_SEL : 2;
		unsigned int                 HCODE_TABLE_SEL : 2;
		unsigned int                    MV_DECODE_EN : 1;
		unsigned int                  TABLE3_TOP_ADR : 8;
		unsigned int                  TABLE1_BOT_ADR : 8;
		unsigned int                      MAX_UV_ADR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VSYNC_DIFF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int           VSYNC_DIFF_MEASURE_EN : 1;
		unsigned int          VSYNC_RESTART_AT_LIMIT : 1;
		unsigned int                VSYNC_HW_LOCK_EN : 1;
		unsigned int              VSYNC_HW_LOCK_TYPE : 1;
		unsigned int               VSYNC_SLIP_REQ_EN : 1;
		unsigned int                INVERT_LOCK_CNTL : 1;
		unsigned int          SLIP_DURING_HSYNC_ONLY : 1;
		unsigned int                   RESTART_TWICE : 1;
		unsigned int                   DELAY_RESTART : 1;
		unsigned int                                 : 23;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 23;
		unsigned int                   DELAY_RESTART : 1;
		unsigned int                   RESTART_TWICE : 1;
		unsigned int          SLIP_DURING_HSYNC_ONLY : 1;
		unsigned int                INVERT_LOCK_CNTL : 1;
		unsigned int               VSYNC_SLIP_REQ_EN : 1;
		unsigned int              VSYNC_HW_LOCK_TYPE : 1;
		unsigned int                VSYNC_HW_LOCK_EN : 1;
		unsigned int          VSYNC_RESTART_AT_LIMIT : 1;
		unsigned int           VSYNC_DIFF_MEASURE_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VSYNC_DIFF_LIMITS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DIFF_LIMIT_LOW : 12;
		unsigned int                                 : 4;
		unsigned int                 DIFF_LIMIT_HIGH : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 DIFF_LIMIT_HIGH : 12;
		unsigned int                                 : 4;
		unsigned int                  DIFF_LIMIT_LOW : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_VSYNC_DIFF_RD_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int               UPDATE_END_TOGGLE : 1;
		unsigned int                      VSYNC_DIFF : 12;
		unsigned int             VSYNC_DIFF_OVERFLOW : 1;
		unsigned int                        TV_FIRST : 1;
		unsigned int             UPDATE_START_TOGGLE : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int             UPDATE_START_TOGGLE : 1;
		unsigned int                        TV_FIRST : 1;
		unsigned int             VSYNC_DIFF_OVERFLOW : 1;
		unsigned int                      VSYNC_DIFF : 12;
		unsigned int               UPDATE_END_TOGGLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                         RB_BASE : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                         RB_BASE : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RB_BUFSZ : 6;
		unsigned int                                 : 2;
		unsigned int                        RB_BLKSZ : 6;
		unsigned int                                 : 2;
		unsigned int                        BUF_SWAP : 2;
		unsigned int                       MAX_FETCH : 2;
		unsigned int                                 : 7;
		unsigned int                    RB_NO_UPDATE : 1;
		unsigned int                                 : 3;
		unsigned int                  RB_RPTR_WR_ENA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  RB_RPTR_WR_ENA : 1;
		unsigned int                                 : 3;
		unsigned int                    RB_NO_UPDATE : 1;
		unsigned int                                 : 7;
		unsigned int                       MAX_FETCH : 2;
		unsigned int                        BUF_SWAP : 2;
		unsigned int                                 : 2;
		unsigned int                        RB_BLKSZ : 6;
		unsigned int                                 : 2;
		unsigned int                        RB_BUFSZ : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_RPTR_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    RB_RPTR_SWAP : 2;
		unsigned int                    RB_RPTR_ADDR : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                    RB_RPTR_ADDR : 30;
		unsigned int                    RB_RPTR_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_RPTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         RB_RPTR : 23;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                         RB_RPTR : 23;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_RPTR_WR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      RB_RPTR_WR : 23;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                      RB_RPTR_WR : 23;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_WPTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         RB_WPTR : 23;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                         RB_WPTR : 23;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_RB_WPTR_DELAY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 PRE_WRITE_TIMER : 28;
		unsigned int                 PRE_WRITE_LIMIT : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                 PRE_WRITE_LIMIT : 4;
		unsigned int                 PRE_WRITE_TIMER : 28;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_IB_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                         IB_BASE : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                         IB_BASE : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_IB_BUFSZ {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IB_BUFSZ : 23;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                        IB_BUFSZ : 23;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_IB2_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                        IB2_BASE : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IB2_BASE : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_IB2_BUFSZ {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IB2_BUFSZ : 23;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                       IB2_BUFSZ : 23;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CSQ_CNT_PRIMARY : 9;
		unsigned int                CSQ_CNT_INDIRECT : 9;
		unsigned int               CSQ_CNT_INDIRECT2 : 9;
		unsigned int                                 : 1;
		unsigned int                        CSQ_MODE : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CSQ_MODE : 4;
		unsigned int                                 : 1;
		unsigned int               CSQ_CNT_INDIRECT2 : 9;
		unsigned int                CSQ_CNT_INDIRECT : 9;
		unsigned int                 CSQ_CNT_PRIMARY : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_APER_PRIMARY {
	struct {
#if		defined(qLittleEndian)
		unsigned int             CP_CSQ_APER_PRIMARY : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             CP_CSQ_APER_PRIMARY : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_APER_INDIRECT {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CP_CSQ_APER_INDIRECT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int            CP_CSQ_APER_INDIRECT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_APER_INDIRECT2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int           CP_CSQ_APER_INDIRECT2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int           CP_CSQ_APER_INDIRECT2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_MODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 INDIRECT2_START : 7;
		unsigned int                                 : 1;
		unsigned int                 INDIRECT1_START : 7;
		unsigned int                                 : 11;
		unsigned int              CSQ_INDIRECT2_MODE : 1;
		unsigned int            CSQ_INDIRECT2_ENABLE : 1;
		unsigned int              CSQ_INDIRECT1_MODE : 1;
		unsigned int            CSQ_INDIRECT1_ENABLE : 1;
		unsigned int                CSQ_PRIMARY_MODE : 1;
		unsigned int              CSQ_PRIMARY_ENABLE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              CSQ_PRIMARY_ENABLE : 1;
		unsigned int                CSQ_PRIMARY_MODE : 1;
		unsigned int            CSQ_INDIRECT1_ENABLE : 1;
		unsigned int              CSQ_INDIRECT1_MODE : 1;
		unsigned int            CSQ_INDIRECT2_ENABLE : 1;
		unsigned int              CSQ_INDIRECT2_MODE : 1;
		unsigned int                                 : 11;
		unsigned int                 INDIRECT1_START : 7;
		unsigned int                                 : 1;
		unsigned int                 INDIRECT2_START : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_ME_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ME_STAT : 16;
		unsigned int                      ME_STATMUX : 5;
		unsigned int                                 : 8;
		unsigned int                         ME_BUSY : 1;
		unsigned int                         ME_MODE : 1;
		unsigned int                         ME_STEP : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         ME_STEP : 1;
		unsigned int                         ME_MODE : 1;
		unsigned int                         ME_BUSY : 1;
		unsigned int                                 : 8;
		unsigned int                      ME_STATMUX : 5;
		unsigned int                         ME_STAT : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_ME_RAM_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ME_RAM_ADDR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     ME_RAM_ADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_ME_RAM_RADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ME_RAM_RADDR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    ME_RAM_RADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_ME_RAM_DATAH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ME_RAM_DATAH : 6;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                    ME_RAM_DATAH : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_ME_RAM_DATAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ME_RAM_DATAL : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    ME_RAM_DATAL : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        CP_DEBUG : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CP_DEBUG : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG0 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG0 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG3 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG3 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG4 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG4 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG5 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG5 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG6 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG6 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_REG7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_REG7 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_REG7 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_UMSK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCRATCH_UMSK : 8;
		unsigned int                                 : 8;
		unsigned int                    SCRATCH_SWAP : 2;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int                    SCRATCH_SWAP : 2;
		unsigned int                                 : 8;
		unsigned int                    SCRATCH_UMSK : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCRATCH_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                    SCRATCH_ADDR : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCRATCH_ADDR : 27;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         CP_SYNC : 1;
		unsigned int                                 : 3;
		unsigned int                      TABLE_ADDR : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TABLE_ADDR : 28;
		unsigned int                                 : 3;
		unsigned int                         CP_SYNC : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_SRC_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SRC_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        SRC_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_DST_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DST_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        DST_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 1;
		unsigned int                        SRC_SWAP : 2;
		unsigned int                        DST_SWAP : 2;
		unsigned int                             SAS : 1;
		unsigned int                             DAS : 1;
		unsigned int                            SAIC : 1;
		unsigned int                            DAIC : 1;
		unsigned int                          INTDIS : 1;
		unsigned int                             EOL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                             EOL : 1;
		unsigned int                          INTDIS : 1;
		unsigned int                            DAIC : 1;
		unsigned int                            SAIC : 1;
		unsigned int                             DAS : 1;
		unsigned int                             SAS : 1;
		unsigned int                        DST_SWAP : 2;
		unsigned int                        SRC_SWAP : 2;
		unsigned int                                 : 1;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DTAQ_AVAIL : 5;
		unsigned int                                 : 3;
		unsigned int                  LAST_TABLE_NUM : 4;
		unsigned int               CURRENT_TABLE_NUM : 4;
		unsigned int                                 : 4;
		unsigned int                        ABORT_EN : 1;
		unsigned int                          ACTIVE : 1;
		unsigned int                            SWAP : 2;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SWAP : 2;
		unsigned int                          ACTIVE : 1;
		unsigned int                        ABORT_EN : 1;
		unsigned int                                 : 4;
		unsigned int               CURRENT_TABLE_NUM : 4;
		unsigned int                  LAST_TABLE_NUM : 4;
		unsigned int                                 : 3;
		unsigned int                      DTAQ_AVAIL : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_GUI_ACT_DSCRPTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                      TABLE_ADDR : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TABLE_ADDR : 28;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_GUI_SRC_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CP_GUI_SRC_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CP_GUI_SRC_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_GUI_DST_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CP_GUI_DST_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CP_GUI_DST_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_GUI_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CP_GUI_COMMAND : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  CP_GUI_COMMAND : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         CP_SYNC : 1;
		unsigned int                                 : 3;
		unsigned int                      TABLE_ADDR : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TABLE_ADDR : 28;
		unsigned int                                 : 3;
		unsigned int                         CP_SYNC : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_SRC_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SRC_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        SRC_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_DST_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DST_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        DST_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 1;
		unsigned int                        SRC_SWAP : 2;
		unsigned int                        DST_SWAP : 2;
		unsigned int                             SAS : 1;
		unsigned int                             DAS : 1;
		unsigned int                            SAIC : 1;
		unsigned int                            DAIC : 1;
		unsigned int                          INTDIS : 1;
		unsigned int                             EOL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                             EOL : 1;
		unsigned int                          INTDIS : 1;
		unsigned int                            DAIC : 1;
		unsigned int                            SAIC : 1;
		unsigned int                             DAS : 1;
		unsigned int                             SAS : 1;
		unsigned int                        DST_SWAP : 2;
		unsigned int                        SRC_SWAP : 2;
		unsigned int                                 : 1;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DTAQ_AVAIL : 5;
		unsigned int                                 : 3;
		unsigned int                  LAST_TABLE_NUM : 4;
		unsigned int               CURRENT_TABLE_NUM : 4;
		unsigned int                                 : 4;
		unsigned int                        ABORT_EN : 1;
		unsigned int                          ACTIVE : 1;
		unsigned int                            SWAP : 2;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                            SWAP : 2;
		unsigned int                          ACTIVE : 1;
		unsigned int                        ABORT_EN : 1;
		unsigned int                                 : 4;
		unsigned int               CURRENT_TABLE_NUM : 4;
		unsigned int                  LAST_TABLE_NUM : 4;
		unsigned int                                 : 3;
		unsigned int                      DTAQ_AVAIL : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VID_ACT_DSCRPTR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                      TABLE_ADDR : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TABLE_ADDR : 28;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_VID_SRC_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CP_VID_SRC_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CP_VID_SRC_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_VID_DST_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CP_VID_DST_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CP_VID_DST_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_VID_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CP_VID_COMMAND : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  CP_VID_COMMAND : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ2_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int               CSQ_WPTR_INDIRECT : 9;
		unsigned int              CSQ_RPTR_INDIRECT2 : 9;
		unsigned int              CSQ_WPTR_INDIRECT2 : 9;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int              CSQ_WPTR_INDIRECT2 : 9;
		unsigned int              CSQ_RPTR_INDIRECT2 : 9;
		unsigned int               CSQ_WPTR_INDIRECT : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                        CSQ_ADDR : 9;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                        CSQ_ADDR : 9;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        CSQ_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        CSQ_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_CSQ_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CSQ_RPTR_PRIMARY : 9;
		unsigned int                CSQ_WPTR_PRIMARY : 9;
		unsigned int               CSQ_RPTR_INDIRECT : 9;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int               CSQ_RPTR_INDIRECT : 9;
		unsigned int                CSQ_WPTR_PRIMARY : 9;
		unsigned int                CSQ_RPTR_PRIMARY : 9;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CP_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        MRU_BUSY : 1;
		unsigned int                        MWU_BUSY : 1;
		unsigned int                       RSIU_BUSY : 1;
		unsigned int                       RCIU_BUSY : 1;
		unsigned int                                 : 5;
		unsigned int                CSF_PRIMARY_BUSY : 1;
		unsigned int               CSF_INDIRECT_BUSY : 1;
		unsigned int                CSQ_PRIMARY_BUSY : 1;
		unsigned int               CSQ_INDIRECT_BUSY : 1;
		unsigned int                        CSI_BUSY : 1;
		unsigned int              CSF_INDIRECT2_BUSY : 1;
		unsigned int              CSQ_INDIRECT2_BUSY : 1;
		unsigned int                                 : 12;
		unsigned int                     GUIDMA_BUSY : 1;
		unsigned int                     VIDDMA_BUSY : 1;
		unsigned int                    CMDSTRM_BUSY : 1;
		unsigned int                         CP_BUSY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         CP_BUSY : 1;
		unsigned int                    CMDSTRM_BUSY : 1;
		unsigned int                     VIDDMA_BUSY : 1;
		unsigned int                     GUIDMA_BUSY : 1;
		unsigned int                                 : 12;
		unsigned int              CSQ_INDIRECT2_BUSY : 1;
		unsigned int              CSF_INDIRECT2_BUSY : 1;
		unsigned int                        CSI_BUSY : 1;
		unsigned int               CSQ_INDIRECT_BUSY : 1;
		unsigned int                CSQ_PRIMARY_BUSY : 1;
		unsigned int               CSF_INDIRECT_BUSY : 1;
		unsigned int                CSF_PRIMARY_BUSY : 1;
		unsigned int                                 : 5;
		unsigned int                       RCIU_BUSY : 1;
		unsigned int                       RSIU_BUSY : 1;
		unsigned int                        MWU_BUSY : 1;
		unsigned int                        MRU_BUSY : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT0 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT0 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT3 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT3 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT4 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT4 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT5 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT5 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT6 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT6 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT7 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT7 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT8 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT8 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DATAPORT9 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DATAPORT9 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT10 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT10 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT11 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT11 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT12 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT12 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT13 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT13 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT14 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT14 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_DATA15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DATAPORT15 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DATAPORT15 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT0 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT0 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT2 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT2 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT3 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT3 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT4 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT4 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT5 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT5 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT6 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT6 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT7 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT7 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT8 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT8 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        IDXPORT9 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        IDXPORT9 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT10 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT10 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT11 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT11 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT12 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT12 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT13 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT13 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT14 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT14 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PORT_IDX15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       IDXPORT15 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       IDXPORT15 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TCL_ENA : 1;
		unsigned int                                 : 1;
		unsigned int             PROG_VTX_SHADER_ENA : 1;
		unsigned int             PER_VTX_MTX_SEL_ENA : 1;
		unsigned int            SINGLE_BUF_STATE_ENA : 1;
		unsigned int                                 : 11;
		unsigned int                  FORCE_W_TO_ONE : 1;
		unsigned int                 D3D_TEX_DEFAULT : 1;
		unsigned int                  VF_MAX_VTX_NUM : 4;
		unsigned int               DX_CLIP_SPACE_DEF : 1;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int               DX_CLIP_SPACE_DEF : 1;
		unsigned int                  VF_MAX_VTX_NUM : 4;
		unsigned int                 D3D_TEX_DEFAULT : 1;
		unsigned int                  FORCE_W_TO_ONE : 1;
		unsigned int                                 : 11;
		unsigned int            SINGLE_BUF_STATE_ENA : 1;
		unsigned int             PER_VTX_MTX_SEL_ENA : 1;
		unsigned int             PROG_VTX_SHADER_ENA : 1;
		unsigned int                                 : 1;
		unsigned int                         TCL_ENA : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       PRIM_TYPE : 4;
		unsigned int                       PRIM_WALK : 2;
		unsigned int                     COLOR_ORDER : 1;
		unsigned int                                 : 2;
		unsigned int              TCL_OUTPUT_CTL_ENA : 1;
		unsigned int                 PROG_STREAM_ENA : 1;
		unsigned int                      INDEX_SIZE : 1;
		unsigned int                                 : 4;
		unsigned int                    NUM_VERTICES : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    NUM_VERTICES : 16;
		unsigned int                                 : 4;
		unsigned int                      INDEX_SIZE : 1;
		unsigned int                 PROG_STREAM_ENA : 1;
		unsigned int              TCL_OUTPUT_CTL_ENA : 1;
		unsigned int                                 : 2;
		unsigned int                     COLOR_ORDER : 1;
		unsigned int                       PRIM_WALK : 2;
		unsigned int                       PRIM_TYPE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_FMT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_Z0_PRESENT : 1;
		unsigned int                  VTX_W0_PRESENT : 1;
		unsigned int            VTX_BLEND_WEIGHT_CNT : 3;
		unsigned int          VTX_PV_MTX_SEL_PRESENT : 1;
		unsigned int                  VTX_N0_PRESENT : 1;
		unsigned int             VTX_PT_SIZE_PRESENT : 1;
		unsigned int        VTX_DISCRETE_FOG_PRESENT : 1;
		unsigned int         VTX_SHININESS_0_PRESENT : 1;
		unsigned int         VTX_SHININESS_1_PRESENT : 1;
		unsigned int                 VTX_COLOR_0_FMT : 2;
		unsigned int                 VTX_COLOR_1_FMT : 2;
		unsigned int                 VTX_COLOR_2_FMT : 2;
		unsigned int                 VTX_COLOR_3_FMT : 2;
		unsigned int                 VTX_COLOR_4_FMT : 2;
		unsigned int                 VTX_COLOR_5_FMT : 2;
		unsigned int                 VTX_COLOR_6_FMT : 2;
		unsigned int                 VTX_COLOR_7_FMT : 2;
		unsigned int                                 : 1;
		unsigned int                 VTX_XY1_PRESENT : 1;
		unsigned int                  VTX_Z1_PRESENT : 1;
		unsigned int                  VTX_W1_PRESENT : 1;
		unsigned int                  VTX_N1_PRESENT : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  VTX_N1_PRESENT : 1;
		unsigned int                  VTX_W1_PRESENT : 1;
		unsigned int                  VTX_Z1_PRESENT : 1;
		unsigned int                 VTX_XY1_PRESENT : 1;
		unsigned int                                 : 1;
		unsigned int                 VTX_COLOR_7_FMT : 2;
		unsigned int                 VTX_COLOR_6_FMT : 2;
		unsigned int                 VTX_COLOR_5_FMT : 2;
		unsigned int                 VTX_COLOR_4_FMT : 2;
		unsigned int                 VTX_COLOR_3_FMT : 2;
		unsigned int                 VTX_COLOR_2_FMT : 2;
		unsigned int                 VTX_COLOR_1_FMT : 2;
		unsigned int                 VTX_COLOR_0_FMT : 2;
		unsigned int         VTX_SHININESS_1_PRESENT : 1;
		unsigned int         VTX_SHININESS_0_PRESENT : 1;
		unsigned int        VTX_DISCRETE_FOG_PRESENT : 1;
		unsigned int             VTX_PT_SIZE_PRESENT : 1;
		unsigned int                  VTX_N0_PRESENT : 1;
		unsigned int          VTX_PV_MTX_SEL_PRESENT : 1;
		unsigned int            VTX_BLEND_WEIGHT_CNT : 3;
		unsigned int                  VTX_W0_PRESENT : 1;
		unsigned int                  VTX_Z0_PRESENT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_FMT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  TEX_0_COMP_CNT : 3;
		unsigned int                  TEX_1_COMP_CNT : 3;
		unsigned int                  TEX_2_COMP_CNT : 3;
		unsigned int                  TEX_3_COMP_CNT : 3;
		unsigned int                  TEX_4_COMP_CNT : 3;
		unsigned int                  TEX_5_COMP_CNT : 3;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int                  TEX_5_COMP_CNT : 3;
		unsigned int                  TEX_4_COMP_CNT : 3;
		unsigned int                  TEX_3_COMP_CNT : 3;
		unsigned int                  TEX_2_COMP_CNT : 3;
		unsigned int                  TEX_1_COMP_CNT : 3;
		unsigned int                  TEX_0_COMP_CNT : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_OUTPUT_VTX_FMT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_Z0_PRESENT : 1;
		unsigned int                  VTX_W0_PRESENT : 1;
		unsigned int            VTX_BLEND_WEIGHT_CNT : 3;
		unsigned int          VTX_PV_MTX_SEL_PRESENT : 1;
		unsigned int                  VTX_N0_PRESENT : 1;
		unsigned int             VTX_PT_SIZE_PRESENT : 1;
		unsigned int        VTX_DISCRETE_FOG_PRESENT : 1;
		unsigned int         VTX_SHININESS_0_PRESENT : 1;
		unsigned int         VTX_SHININESS_1_PRESENT : 1;
		unsigned int                 VTX_COLOR_0_FMT : 2;
		unsigned int                 VTX_COLOR_1_FMT : 2;
		unsigned int                 VTX_COLOR_2_FMT : 2;
		unsigned int                 VTX_COLOR_3_FMT : 2;
		unsigned int                 VTX_COLOR_4_FMT : 2;
		unsigned int                 VTX_COLOR_5_FMT : 2;
		unsigned int                 VTX_COLOR_6_FMT : 2;
		unsigned int                 VTX_COLOR_7_FMT : 2;
		unsigned int                                 : 1;
		unsigned int                 VTX_XY1_PRESENT : 1;
		unsigned int                  VTX_Z1_PRESENT : 1;
		unsigned int                  VTX_W1_PRESENT : 1;
		unsigned int                  VTX_N1_PRESENT : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  VTX_N1_PRESENT : 1;
		unsigned int                  VTX_W1_PRESENT : 1;
		unsigned int                  VTX_Z1_PRESENT : 1;
		unsigned int                 VTX_XY1_PRESENT : 1;
		unsigned int                                 : 1;
		unsigned int                 VTX_COLOR_7_FMT : 2;
		unsigned int                 VTX_COLOR_6_FMT : 2;
		unsigned int                 VTX_COLOR_5_FMT : 2;
		unsigned int                 VTX_COLOR_4_FMT : 2;
		unsigned int                 VTX_COLOR_3_FMT : 2;
		unsigned int                 VTX_COLOR_2_FMT : 2;
		unsigned int                 VTX_COLOR_1_FMT : 2;
		unsigned int                 VTX_COLOR_0_FMT : 2;
		unsigned int         VTX_SHININESS_1_PRESENT : 1;
		unsigned int         VTX_SHININESS_0_PRESENT : 1;
		unsigned int        VTX_DISCRETE_FOG_PRESENT : 1;
		unsigned int             VTX_PT_SIZE_PRESENT : 1;
		unsigned int                  VTX_N0_PRESENT : 1;
		unsigned int          VTX_PV_MTX_SEL_PRESENT : 1;
		unsigned int            VTX_BLEND_WEIGHT_CNT : 3;
		unsigned int                  VTX_W0_PRESENT : 1;
		unsigned int                  VTX_Z0_PRESENT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_OUTPUT_VTX_FMT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  TEX_0_COMP_CNT : 3;
		unsigned int                  TEX_1_COMP_CNT : 3;
		unsigned int                  TEX_2_COMP_CNT : 3;
		unsigned int                  TEX_3_COMP_CNT : 3;
		unsigned int                  TEX_4_COMP_CNT : 3;
		unsigned int                  TEX_5_COMP_CNT : 3;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int                  TEX_5_COMP_CNT : 3;
		unsigned int                  TEX_4_COMP_CNT : 3;
		unsigned int                  TEX_3_COMP_CNT : 3;
		unsigned int                  TEX_2_COMP_CNT : 3;
		unsigned int                  TEX_1_COMP_CNT : 3;
		unsigned int                  TEX_0_COMP_CNT : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_XSCALE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VPORT_XSCALE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    VPORT_XSCALE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_XOFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VPORT_XOFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VPORT_XOFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_YSCALE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VPORT_YSCALE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    VPORT_YSCALE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_YOFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VPORT_YOFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VPORT_YOFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_ZSCALE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VPORT_ZSCALE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    VPORT_ZSCALE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VPORT_ZOFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VPORT_ZOFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VPORT_ZOFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               VPORT_X_SCALE_ENA : 1;
		unsigned int              VPORT_X_OFFSET_ENA : 1;
		unsigned int               VPORT_Y_SCALE_ENA : 1;
		unsigned int              VPORT_Y_OFFSET_ENA : 1;
		unsigned int               VPORT_Z_SCALE_ENA : 1;
		unsigned int              VPORT_Z_OFFSET_ENA : 1;
		unsigned int                                 : 2;
		unsigned int                      VTX_XY_FMT : 1;
		unsigned int                       VTX_Z_FMT : 1;
		unsigned int                      VTX_W0_FMT : 1;
		unsigned int                VTX_W0_NORMALIZE : 1;
		unsigned int             VTX_ST_DENORMALIZED : 1;
		unsigned int                                 : 19;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 19;
		unsigned int             VTX_ST_DENORMALIZED : 1;
		unsigned int                VTX_W0_NORMALIZE : 1;
		unsigned int                      VTX_W0_FMT : 1;
		unsigned int                       VTX_Z_FMT : 1;
		unsigned int                      VTX_XY_FMT : 1;
		unsigned int                                 : 2;
		unsigned int              VPORT_Z_OFFSET_ENA : 1;
		unsigned int               VPORT_Z_SCALE_ENA : 1;
		unsigned int              VPORT_Y_OFFSET_ENA : 1;
		unsigned int               VPORT_Y_SCALE_ENA : 1;
		unsigned int              VPORT_X_OFFSET_ENA : 1;
		unsigned int               VPORT_X_SCALE_ENA : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_W0_RANGE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        W0_RANGE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        W0_RANGE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_NUM_ARRAYS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_NUM_ARRAYS : 4;
		unsigned int               VTX_REUSE_DISABLE : 1;
		unsigned int                                 : 9;
		unsigned int                       VC_PFETCH : 2;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                       VC_PFETCH : 2;
		unsigned int                                 : 9;
		unsigned int               VTX_REUSE_DISABLE : 1;
		unsigned int                  VTX_NUM_ARRAYS : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR01 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_AOS_COUNT0 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE0 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT1 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE1 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE1 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT1 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE0 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT0 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR0 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR0 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR1 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR1 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR23 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_AOS_COUNT2 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE2 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT3 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE3 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE3 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT3 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE2 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT2 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR2 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR2 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR3 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR3 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR45 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_AOS_COUNT4 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE4 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT5 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE5 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE5 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT5 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE4 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT4 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR4 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR4 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR5 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR5 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR67 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_AOS_COUNT6 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE6 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT7 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE7 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE7 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT7 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE6 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT6 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR6 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR6 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR7 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR7 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR89 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_AOS_COUNT8 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE8 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT9 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE9 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE9 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT9 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_STRIDE8 : 7;
		unsigned int                                 : 1;
		unsigned int                  VTX_AOS_COUNT8 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR8 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR8 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   VTX_AOS_ADDR9 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VTX_AOS_ADDR9 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ATTR1011 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 VTX_AOS_COUNT10 : 7;
		unsigned int                                 : 1;
		unsigned int                VTX_AOS_STRIDE10 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_COUNT11 : 7;
		unsigned int                                 : 1;
		unsigned int                VTX_AOS_STRIDE11 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                VTX_AOS_STRIDE11 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_COUNT11 : 7;
		unsigned int                                 : 1;
		unsigned int                VTX_AOS_STRIDE10 : 7;
		unsigned int                                 : 1;
		unsigned int                 VTX_AOS_COUNT10 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                  VTX_AOS_ADDR10 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                  VTX_AOS_ADDR10 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_AOS_ADDR11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                  VTX_AOS_ADDR11 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                  VTX_AOS_ADDR11 : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VF_MAX_VTX_INDX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        MAX_INDX : 24;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                        MAX_INDX : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VF_MIN_VTX_INDX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        MIN_INDX : 24;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                        MIN_INDX : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_PERF_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_SEL_0 : 4;
		unsigned int                      CLR_PERF_0 : 1;
		unsigned int                       EN_PERF_0 : 1;
		unsigned int                                 : 2;
		unsigned int           NUM_VERTS_TO_BYPASS_0 : 8;
		unsigned int            NUM_VERTS_TO_COUNT_0 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int            NUM_VERTS_TO_COUNT_0 : 16;
		unsigned int           NUM_VERTS_TO_BYPASS_0 : 8;
		unsigned int                                 : 2;
		unsigned int                       EN_PERF_0 : 1;
		unsigned int                      CLR_PERF_0 : 1;
		unsigned int                      PERF_SEL_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_PERF_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_SEL_1 : 4;
		unsigned int                      CLR_PERF_1 : 1;
		unsigned int                       EN_PERF_1 : 1;
		unsigned int                                 : 2;
		unsigned int           NUM_VERTS_TO_BYPASS_1 : 8;
		unsigned int            NUM_VERTS_TO_COUNT_1 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int            NUM_VERTS_TO_COUNT_1 : 16;
		unsigned int           NUM_VERTS_TO_BYPASS_1 : 8;
		unsigned int                                 : 2;
		unsigned int                       EN_PERF_1 : 1;
		unsigned int                      CLR_PERF_1 : 1;
		unsigned int                      PERF_SEL_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_PERF_COUNT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PERF_COUNT_0 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    PERF_COUNT_0 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_PERF_COUNT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PERF_COUNT_1 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    PERF_COUNT_1 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SE_DEBUG : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        SE_DEBUG : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VAP_CNTL_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         VC_SWAP : 2;
		unsigned int                                 : 6;
		unsigned int                      TCL_BYPASS : 1;
		unsigned int                                 : 2;
		unsigned int                        TCL_BUSY : 1;
		unsigned int                                 : 4;
		unsigned int                       PERF_BUSY : 1;
		unsigned int                                 : 7;
		unsigned int           PRIMITIVE_BYPASS_BUSY : 1;
		unsigned int                        RCP_BUSY : 1;
		unsigned int            VAPB_RBIU_SLAVE_BUSY : 1;
		unsigned int                        MIU_BUSY : 1;
		unsigned int                         VC_BUSY : 1;
		unsigned int                         VF_BUSY : 1;
		unsigned int                    REGPIPE_BUSY : 1;
		unsigned int                        VAP_BUSY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                        VAP_BUSY : 1;
		unsigned int                    REGPIPE_BUSY : 1;
		unsigned int                         VF_BUSY : 1;
		unsigned int                         VC_BUSY : 1;
		unsigned int                        MIU_BUSY : 1;
		unsigned int            VAPB_RBIU_SLAVE_BUSY : 1;
		unsigned int                        RCP_BUSY : 1;
		unsigned int           PRIMITIVE_BYPASS_BUSY : 1;
		unsigned int                                 : 7;
		unsigned int                       PERF_BUSY : 1;
		unsigned int                                 : 4;
		unsigned int                        TCL_BUSY : 1;
		unsigned int                                 : 2;
		unsigned int                      TCL_BYPASS : 1;
		unsigned int                                 : 6;
		unsigned int                         VC_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DATA_TYPE_0 : 4;
		unsigned int                   SKIP_DWORDS_0 : 4;
		unsigned int                   DST_VEC_LOC_0 : 5;
		unsigned int                      LAST_VEC_0 : 1;
		unsigned int                        SIGNED_0 : 1;
		unsigned int                     NORMALIZE_0 : 1;
		unsigned int                     DATA_TYPE_1 : 4;
		unsigned int                   SKIP_DWORDS_1 : 4;
		unsigned int                   DST_VEC_LOC_1 : 5;
		unsigned int                      LAST_VEC_1 : 1;
		unsigned int                        SIGNED_1 : 1;
		unsigned int                     NORMALIZE_1 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NORMALIZE_1 : 1;
		unsigned int                        SIGNED_1 : 1;
		unsigned int                      LAST_VEC_1 : 1;
		unsigned int                   DST_VEC_LOC_1 : 5;
		unsigned int                   SKIP_DWORDS_1 : 4;
		unsigned int                     DATA_TYPE_1 : 4;
		unsigned int                     NORMALIZE_0 : 1;
		unsigned int                        SIGNED_0 : 1;
		unsigned int                      LAST_VEC_0 : 1;
		unsigned int                   DST_VEC_LOC_0 : 5;
		unsigned int                   SKIP_DWORDS_0 : 4;
		unsigned int                     DATA_TYPE_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DATA_TYPE_2 : 4;
		unsigned int                   SKIP_DWORDS_2 : 4;
		unsigned int                   DST_VEC_LOC_2 : 5;
		unsigned int                      LAST_VEC_2 : 1;
		unsigned int                        SIGNED_2 : 1;
		unsigned int                     NORMALIZE_2 : 1;
		unsigned int                     DATA_TYPE_3 : 4;
		unsigned int                   SKIP_DWORDS_3 : 4;
		unsigned int                   DST_VEC_LOC_3 : 5;
		unsigned int                      LAST_VEC_3 : 1;
		unsigned int                        SIGNED_3 : 1;
		unsigned int                     NORMALIZE_3 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NORMALIZE_3 : 1;
		unsigned int                        SIGNED_3 : 1;
		unsigned int                      LAST_VEC_3 : 1;
		unsigned int                   DST_VEC_LOC_3 : 5;
		unsigned int                   SKIP_DWORDS_3 : 4;
		unsigned int                     DATA_TYPE_3 : 4;
		unsigned int                     NORMALIZE_2 : 1;
		unsigned int                        SIGNED_2 : 1;
		unsigned int                      LAST_VEC_2 : 1;
		unsigned int                   DST_VEC_LOC_2 : 5;
		unsigned int                   SKIP_DWORDS_2 : 4;
		unsigned int                     DATA_TYPE_2 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DATA_TYPE_4 : 4;
		unsigned int                   SKIP_DWORDS_4 : 4;
		unsigned int                   DST_VEC_LOC_4 : 5;
		unsigned int                      LAST_VEC_4 : 1;
		unsigned int                        SIGNED_4 : 1;
		unsigned int                     NORMALIZE_4 : 1;
		unsigned int                     DATA_TYPE_5 : 4;
		unsigned int                   SKIP_DWORDS_5 : 4;
		unsigned int                   DST_VEC_LOC_5 : 5;
		unsigned int                      LAST_VEC_5 : 1;
		unsigned int                        SIGNED_5 : 1;
		unsigned int                     NORMALIZE_5 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NORMALIZE_5 : 1;
		unsigned int                        SIGNED_5 : 1;
		unsigned int                      LAST_VEC_5 : 1;
		unsigned int                   DST_VEC_LOC_5 : 5;
		unsigned int                   SKIP_DWORDS_5 : 4;
		unsigned int                     DATA_TYPE_5 : 4;
		unsigned int                     NORMALIZE_4 : 1;
		unsigned int                        SIGNED_4 : 1;
		unsigned int                      LAST_VEC_4 : 1;
		unsigned int                   DST_VEC_LOC_4 : 5;
		unsigned int                   SKIP_DWORDS_4 : 4;
		unsigned int                     DATA_TYPE_4 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DATA_TYPE_6 : 4;
		unsigned int                   SKIP_DWORDS_6 : 4;
		unsigned int                   DST_VEC_LOC_6 : 5;
		unsigned int                      LAST_VEC_6 : 1;
		unsigned int                        SIGNED_6 : 1;
		unsigned int                     NORMALIZE_6 : 1;
		unsigned int                     DATA_TYPE_7 : 4;
		unsigned int                   SKIP_DWORDS_7 : 4;
		unsigned int                   DST_VEC_LOC_7 : 5;
		unsigned int                      LAST_VEC_7 : 1;
		unsigned int                        SIGNED_7 : 1;
		unsigned int                     NORMALIZE_7 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NORMALIZE_7 : 1;
		unsigned int                        SIGNED_7 : 1;
		unsigned int                      LAST_VEC_7 : 1;
		unsigned int                   DST_VEC_LOC_7 : 5;
		unsigned int                   SKIP_DWORDS_7 : 4;
		unsigned int                     DATA_TYPE_7 : 4;
		unsigned int                     NORMALIZE_6 : 1;
		unsigned int                        SIGNED_6 : 1;
		unsigned int                      LAST_VEC_6 : 1;
		unsigned int                   DST_VEC_LOC_6 : 5;
		unsigned int                   SKIP_DWORDS_6 : 4;
		unsigned int                     DATA_TYPE_6 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DATA_TYPE_8 : 4;
		unsigned int                   SKIP_DWORDS_8 : 4;
		unsigned int                   DST_VEC_LOC_8 : 5;
		unsigned int                      LAST_VEC_8 : 1;
		unsigned int                        SIGNED_8 : 1;
		unsigned int                     NORMALIZE_8 : 1;
		unsigned int                     DATA_TYPE_9 : 4;
		unsigned int                   SKIP_DWORDS_9 : 4;
		unsigned int                   DST_VEC_LOC_9 : 5;
		unsigned int                      LAST_VEC_9 : 1;
		unsigned int                        SIGNED_9 : 1;
		unsigned int                     NORMALIZE_9 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     NORMALIZE_9 : 1;
		unsigned int                        SIGNED_9 : 1;
		unsigned int                      LAST_VEC_9 : 1;
		unsigned int                   DST_VEC_LOC_9 : 5;
		unsigned int                   SKIP_DWORDS_9 : 4;
		unsigned int                     DATA_TYPE_9 : 4;
		unsigned int                     NORMALIZE_8 : 1;
		unsigned int                        SIGNED_8 : 1;
		unsigned int                      LAST_VEC_8 : 1;
		unsigned int                   DST_VEC_LOC_8 : 5;
		unsigned int                   SKIP_DWORDS_8 : 4;
		unsigned int                     DATA_TYPE_8 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DATA_TYPE_10 : 4;
		unsigned int                  SKIP_DWORDS_10 : 4;
		unsigned int                  DST_VEC_LOC_10 : 5;
		unsigned int                     LAST_VEC_10 : 1;
		unsigned int                       SIGNED_10 : 1;
		unsigned int                    NORMALIZE_10 : 1;
		unsigned int                    DATA_TYPE_11 : 4;
		unsigned int                  SKIP_DWORDS_11 : 4;
		unsigned int                  DST_VEC_LOC_11 : 5;
		unsigned int                     LAST_VEC_11 : 1;
		unsigned int                       SIGNED_11 : 1;
		unsigned int                    NORMALIZE_11 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    NORMALIZE_11 : 1;
		unsigned int                       SIGNED_11 : 1;
		unsigned int                     LAST_VEC_11 : 1;
		unsigned int                  DST_VEC_LOC_11 : 5;
		unsigned int                  SKIP_DWORDS_11 : 4;
		unsigned int                    DATA_TYPE_11 : 4;
		unsigned int                    NORMALIZE_10 : 1;
		unsigned int                       SIGNED_10 : 1;
		unsigned int                     LAST_VEC_10 : 1;
		unsigned int                  DST_VEC_LOC_10 : 5;
		unsigned int                  SKIP_DWORDS_10 : 4;
		unsigned int                    DATA_TYPE_10 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DATA_TYPE_12 : 4;
		unsigned int                  SKIP_DWORDS_12 : 4;
		unsigned int                  DST_VEC_LOC_12 : 5;
		unsigned int                     LAST_VEC_12 : 1;
		unsigned int                       SIGNED_12 : 1;
		unsigned int                    NORMALIZE_12 : 1;
		unsigned int                    DATA_TYPE_13 : 4;
		unsigned int                  SKIP_DWORDS_13 : 4;
		unsigned int                  DST_VEC_LOC_13 : 5;
		unsigned int                     LAST_VEC_13 : 1;
		unsigned int                       SIGNED_13 : 1;
		unsigned int                    NORMALIZE_13 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    NORMALIZE_13 : 1;
		unsigned int                       SIGNED_13 : 1;
		unsigned int                     LAST_VEC_13 : 1;
		unsigned int                  DST_VEC_LOC_13 : 5;
		unsigned int                  SKIP_DWORDS_13 : 4;
		unsigned int                    DATA_TYPE_13 : 4;
		unsigned int                    NORMALIZE_12 : 1;
		unsigned int                       SIGNED_12 : 1;
		unsigned int                     LAST_VEC_12 : 1;
		unsigned int                  DST_VEC_LOC_12 : 5;
		unsigned int                  SKIP_DWORDS_12 : 4;
		unsigned int                    DATA_TYPE_12 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PROG_STREAM_CNTL_7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DATA_TYPE_14 : 4;
		unsigned int                  SKIP_DWORDS_14 : 4;
		unsigned int                  DST_VEC_LOC_14 : 5;
		unsigned int                     LAST_VEC_14 : 1;
		unsigned int                       SIGNED_14 : 1;
		unsigned int                    NORMALIZE_14 : 1;
		unsigned int                    DATA_TYPE_15 : 4;
		unsigned int                  SKIP_DWORDS_15 : 4;
		unsigned int                  DST_VEC_LOC_15 : 5;
		unsigned int                     LAST_VEC_15 : 1;
		unsigned int                       SIGNED_15 : 1;
		unsigned int                    NORMALIZE_15 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    NORMALIZE_15 : 1;
		unsigned int                       SIGNED_15 : 1;
		unsigned int                     LAST_VEC_15 : 1;
		unsigned int                  DST_VEC_LOC_15 : 5;
		unsigned int                  SKIP_DWORDS_15 : 4;
		unsigned int                    DATA_TYPE_15 : 4;
		unsigned int                    NORMALIZE_14 : 1;
		unsigned int                       SIGNED_14 : 1;
		unsigned int                     LAST_VEC_14 : 1;
		unsigned int                  DST_VEC_LOC_14 : 5;
		unsigned int                  SKIP_DWORDS_14 : 4;
		unsigned int                    DATA_TYPE_14 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int           COLOR_0_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_1_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_2_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_3_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_4_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_5_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_6_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_7_ASSEMBLY_CNTL : 2;
		unsigned int         UPDATE_USER_COLOR_0_ENA : 1;
		unsigned int         UPDATE_USER_COLOR_1_ENA : 1;
		unsigned int                USE_ADDR_IND_TBL : 1;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int                USE_ADDR_IND_TBL : 1;
		unsigned int         UPDATE_USER_COLOR_1_ENA : 1;
		unsigned int         UPDATE_USER_COLOR_0_ENA : 1;
		unsigned int           COLOR_7_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_6_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_5_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_4_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_3_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_2_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_1_ASSEMBLY_CNTL : 2;
		unsigned int           COLOR_0_ASSEMBLY_CNTL : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          ADDR_0 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_1 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_2 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_3 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                          ADDR_3 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_2 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_1 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_0 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          ADDR_4 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_5 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_6 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_7 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                          ADDR_7 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_6 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_5 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_4 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          ADDR_8 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_9 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_10 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_11 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_11 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_10 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_9 : 7;
		unsigned int                                 : 1;
		unsigned int                          ADDR_8 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_12 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_13 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_14 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_15 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_15 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_14 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_13 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_12 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_16 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_17 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_18 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_19 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_19 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_18 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_17 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_16 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_20 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_21 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_22 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_23 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_23 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_22 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_21 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_20 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_24 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_25 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_26 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_27 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_27 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_26 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_25 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_24 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_28 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_29 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_30 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_31 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_31 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_30 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_29 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_28 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_32 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_33 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_34 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_35 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_35 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_34 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_33 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_32 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_36 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_37 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_38 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_39 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_39 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_38 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_37 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_36 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_40 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_41 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_42 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_43 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_43 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_42 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_41 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_40 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_44 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_45 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_46 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_47 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_47 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_46 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_45 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_44 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_48 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_49 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_50 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_51 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_51 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_50 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_49 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_48 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_52 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_53 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_54 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_55 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_55 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_54 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_53 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_52 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_56 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_57 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_58 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_59 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_59 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_58 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_57 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_56 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_STATE_IND_REG_15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         ADDR_60 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_61 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_62 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_63 : 7;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                         ADDR_63 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_62 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_61 : 7;
		unsigned int                                 : 1;
		unsigned int                         ADDR_60 : 7;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_VECTOR_INDX_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  OCTWORD_OFFSET : 10;
		unsigned int                                 : 6;
		unsigned int                  OCTWORD_STRIDE : 7;
		unsigned int                                 : 5;
		unsigned int                     DWORD_COUNT : 2;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                     DWORD_COUNT : 2;
		unsigned int                                 : 5;
		unsigned int                  OCTWORD_STRIDE : 7;
		unsigned int                                 : 6;
		unsigned int                  OCTWORD_OFFSET : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_VECTOR_DATA_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_SCALAR_INDX_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DWORD_OFFSET : 10;
		unsigned int                                 : 6;
		unsigned int                    DWORD_STRIDE : 7;
		unsigned int                                 : 9;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 9;
		unsigned int                    DWORD_STRIDE : 7;
		unsigned int                                 : 6;
		unsigned int                    DWORD_OFFSET : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_SCALAR_DATA_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_MATRIX_SEL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             MODELVIEW_MTX_0_SEL : 8;
		unsigned int             MODELVIEW_MTX_1_SEL : 8;
		unsigned int             MODELVIEW_MTX_2_SEL : 8;
		unsigned int             MODELVIEW_MTX_3_SEL : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int             MODELVIEW_MTX_3_SEL : 8;
		unsigned int             MODELVIEW_MTX_2_SEL : 8;
		unsigned int             MODELVIEW_MTX_1_SEL : 8;
		unsigned int             MODELVIEW_MTX_0_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_MATRIX_SEL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int          IT_MODELVIEW_MTX_0_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_1_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_2_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_3_SEL : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int          IT_MODELVIEW_MTX_3_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_2_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_1_SEL : 8;
		unsigned int          IT_MODELVIEW_MTX_0_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_MATRIX_SEL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int            MODEL2CLIP_MTX_0_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_1_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_2_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_3_SEL : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int            MODEL2CLIP_MTX_3_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_2_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_1_SEL : 8;
		unsigned int            MODEL2CLIP_MTX_0_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_MATRIX_SEL_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEX_XFORM_MTX_0_SEL : 8;
		unsigned int             TEX_XFORM_MTX_1_SEL : 8;
		unsigned int             TEX_XFORM_MTX_2_SEL : 8;
		unsigned int             TEX_XFORM_MTX_3_SEL : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int             TEX_XFORM_MTX_3_SEL : 8;
		unsigned int             TEX_XFORM_MTX_2_SEL : 8;
		unsigned int             TEX_XFORM_MTX_1_SEL : 8;
		unsigned int             TEX_XFORM_MTX_0_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_MATRIX_SEL_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEX_XFORM_MTX_4_SEL : 8;
		unsigned int             TEX_XFORM_MTX_5_SEL : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int             TEX_XFORM_MTX_5_SEL : 8;
		unsigned int             TEX_XFORM_MTX_4_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_PER_VTX_MTX_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MV_MTX_0_INDX : 8;
		unsigned int                 ITMV_MTX_0_INDX : 8;
		unsigned int                  M2C_MTX_0_INDX : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                  M2C_MTX_0_INDX : 8;
		unsigned int                 ITMV_MTX_0_INDX : 8;
		unsigned int                   MV_MTX_0_INDX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_OUTPUT_VTX_COMP_SEL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VTX_XYZW_SEL : 1;
		unsigned int                                 : 7;
		unsigned int                 VTX_COLOR_0_SEL : 1;
		unsigned int                 VTX_COLOR_1_SEL : 1;
		unsigned int                                 : 6;
		unsigned int                   VTX_TEX_0_SEL : 1;
		unsigned int                   VTX_TEX_1_SEL : 1;
		unsigned int                   VTX_TEX_2_SEL : 1;
		unsigned int                   VTX_TEX_3_SEL : 1;
		unsigned int                   VTX_TEX_4_SEL : 1;
		unsigned int                   VTX_TEX_5_SEL : 1;
		unsigned int                                 : 2;
		unsigned int            VTX_DISCRETE_FOG_SEL : 1;
		unsigned int                 VTX_PT_SIZE_SEL : 1;
		unsigned int                                 : 5;
		unsigned int             FORCE_IN_ORDER_PROC : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int             FORCE_IN_ORDER_PROC : 1;
		unsigned int                                 : 5;
		unsigned int                 VTX_PT_SIZE_SEL : 1;
		unsigned int            VTX_DISCRETE_FOG_SEL : 1;
		unsigned int                                 : 2;
		unsigned int                   VTX_TEX_5_SEL : 1;
		unsigned int                   VTX_TEX_4_SEL : 1;
		unsigned int                   VTX_TEX_3_SEL : 1;
		unsigned int                   VTX_TEX_2_SEL : 1;
		unsigned int                   VTX_TEX_1_SEL : 1;
		unsigned int                   VTX_TEX_0_SEL : 1;
		unsigned int                                 : 6;
		unsigned int                 VTX_COLOR_1_SEL : 1;
		unsigned int                 VTX_COLOR_0_SEL : 1;
		unsigned int                                 : 7;
		unsigned int                    VTX_XYZW_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_INPUT_VTX_VECTOR_ADDR_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int            VERTEX_POSITION_ADDR : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int            VERTEX_POSITION_ADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_INPUT_VTX_VECTOR_ADDR_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                VTX_COLOR_0_ADDR : 8;
		unsigned int                VTX_COLOR_1_ADDR : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                VTX_COLOR_1_ADDR : 8;
		unsigned int                VTX_COLOR_0_ADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_INPUT_VTX_VECTOR_ADDR_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_TEX_0_ADDR : 8;
		unsigned int                  VTX_TEX_1_ADDR : 8;
		unsigned int                  VTX_TEX_2_ADDR : 8;
		unsigned int                  VTX_TEX_3_ADDR : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                  VTX_TEX_3_ADDR : 8;
		unsigned int                  VTX_TEX_2_ADDR : 8;
		unsigned int                  VTX_TEX_1_ADDR : 8;
		unsigned int                  VTX_TEX_0_ADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_INPUT_VTX_VECTOR_ADDR_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VTX_TEX_4_ADDR : 8;
		unsigned int                  VTX_TEX_5_ADDR : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                  VTX_TEX_5_ADDR : 8;
		unsigned int                  VTX_TEX_4_ADDR : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_LIGHT_MODEL_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    LIGHTING_ENA : 1;
		unsigned int               LIGHTING_IN_MODEL : 1;
		unsigned int                    LOCAL_VIEWER : 1;
		unsigned int                NORMALIZE_NORMAL : 1;
		unsigned int                  RESCALE_NORMAL : 1;
		unsigned int                    SPECULAR_ENA : 1;
		unsigned int        DIFFUSE_SPECULAR_COMBINE : 1;
		unsigned int                  ALPHA_LIGHTING : 1;
		unsigned int           LOC_LIGHT_W_SCALE_SUB : 1;
		unsigned int           NO_NORMAL_DO_AMB_ONLY : 1;
		unsigned int          TWO_SIDED_LIGHTING_ENA : 1;
		unsigned int             FRONT_SHININESS_SRC : 2;
		unsigned int              BACK_SHININESS_SRC : 2;
		unsigned int                WAIT_ON_CLIP_DIS : 1;
		unsigned int                CLIP_DBL_BUF_ENA : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                CLIP_DBL_BUF_ENA : 1;
		unsigned int                WAIT_ON_CLIP_DIS : 1;
		unsigned int              BACK_SHININESS_SRC : 2;
		unsigned int             FRONT_SHININESS_SRC : 2;
		unsigned int          TWO_SIDED_LIGHTING_ENA : 1;
		unsigned int           NO_NORMAL_DO_AMB_ONLY : 1;
		unsigned int           LOC_LIGHT_W_SCALE_SUB : 1;
		unsigned int                  ALPHA_LIGHTING : 1;
		unsigned int        DIFFUSE_SPECULAR_COMBINE : 1;
		unsigned int                    SPECULAR_ENA : 1;
		unsigned int                  RESCALE_NORMAL : 1;
		unsigned int                NORMALIZE_NORMAL : 1;
		unsigned int                    LOCAL_VIEWER : 1;
		unsigned int               LIGHTING_IN_MODEL : 1;
		unsigned int                    LIGHTING_ENA : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_LIGHT_MODEL_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int              FRONT_EMISSIVE_SRC : 4;
		unsigned int               FRONT_AMBIENT_SRC : 4;
		unsigned int               FRONT_DIFFUSE_SRC : 4;
		unsigned int              FRONT_SPECULAR_SRC : 4;
		unsigned int               BACK_EMISSIVE_SRC : 4;
		unsigned int                BACK_AMBIENT_SRC : 4;
		unsigned int                BACK_DIFFUSE_SRC : 4;
		unsigned int               BACK_SPECULAR_SRC : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int               BACK_SPECULAR_SRC : 4;
		unsigned int                BACK_DIFFUSE_SRC : 4;
		unsigned int                BACK_AMBIENT_SRC : 4;
		unsigned int               BACK_EMISSIVE_SRC : 4;
		unsigned int              FRONT_SPECULAR_SRC : 4;
		unsigned int               FRONT_DIFFUSE_SRC : 4;
		unsigned int               FRONT_AMBIENT_SRC : 4;
		unsigned int              FRONT_EMISSIVE_SRC : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_PER_LIGHT_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     LIGHT_ENA_0 : 1;
		unsigned int                   AMBIENT_ENA_0 : 1;
		unsigned int                  SPECULAR_ENA_0 : 1;
		unsigned int                   LOCAL_LIGHT_0 : 1;
		unsigned int                      SPOT_ENA_0 : 1;
		unsigned int                SPOT_DUAL_CONE_0 : 1;
		unsigned int                   RNG_ATT_ENA_0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_0 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT0_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT0_2BIT_NUM1 : 2;
		unsigned int                     LIGHT_ENA_1 : 1;
		unsigned int                   AMBIENT_ENA_1 : 1;
		unsigned int                  SPECULAR_ENA_1 : 1;
		unsigned int                   LOCAL_LIGHT_1 : 1;
		unsigned int                      SPOT_ENA_1 : 1;
		unsigned int                SPOT_DUAL_CONE_1 : 1;
		unsigned int                   RNG_ATT_ENA_1 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_1 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT1_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT1_2BIT_NUM1 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int              RSVD_LT1_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT1_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT1_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT1_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_1 : 1;
		unsigned int                   RNG_ATT_ENA_1 : 1;
		unsigned int                SPOT_DUAL_CONE_1 : 1;
		unsigned int                      SPOT_ENA_1 : 1;
		unsigned int                   LOCAL_LIGHT_1 : 1;
		unsigned int                  SPECULAR_ENA_1 : 1;
		unsigned int                   AMBIENT_ENA_1 : 1;
		unsigned int                     LIGHT_ENA_1 : 1;
		unsigned int              RSVD_LT0_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT0_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT0_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT0_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_0 : 1;
		unsigned int                   RNG_ATT_ENA_0 : 1;
		unsigned int                SPOT_DUAL_CONE_0 : 1;
		unsigned int                      SPOT_ENA_0 : 1;
		unsigned int                   LOCAL_LIGHT_0 : 1;
		unsigned int                  SPECULAR_ENA_0 : 1;
		unsigned int                   AMBIENT_ENA_0 : 1;
		unsigned int                     LIGHT_ENA_0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_PER_LIGHT_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     LIGHT_ENA_2 : 1;
		unsigned int                   AMBIENT_ENA_2 : 1;
		unsigned int                  SPECULAR_ENA_2 : 1;
		unsigned int                   LOCAL_LIGHT_2 : 1;
		unsigned int                      SPOT_ENA_2 : 1;
		unsigned int                SPOT_DUAL_CONE_2 : 1;
		unsigned int                   RNG_ATT_ENA_2 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_2 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT2_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT2_2BIT_NUM1 : 2;
		unsigned int                     LIGHT_ENA_3 : 1;
		unsigned int                   AMBIENT_ENA_3 : 1;
		unsigned int                  SPECULAR_ENA_3 : 1;
		unsigned int                   LOCAL_LIGHT_3 : 1;
		unsigned int                      SPOT_ENA_3 : 1;
		unsigned int                SPOT_DUAL_CONE_3 : 1;
		unsigned int                   RNG_ATT_ENA_3 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_3 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT3_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT3_2BIT_NUM1 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int              RSVD_LT3_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT3_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT3_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT3_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_3 : 1;
		unsigned int                   RNG_ATT_ENA_3 : 1;
		unsigned int                SPOT_DUAL_CONE_3 : 1;
		unsigned int                      SPOT_ENA_3 : 1;
		unsigned int                   LOCAL_LIGHT_3 : 1;
		unsigned int                  SPECULAR_ENA_3 : 1;
		unsigned int                   AMBIENT_ENA_3 : 1;
		unsigned int                     LIGHT_ENA_3 : 1;
		unsigned int              RSVD_LT2_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT2_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT2_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT2_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_2 : 1;
		unsigned int                   RNG_ATT_ENA_2 : 1;
		unsigned int                SPOT_DUAL_CONE_2 : 1;
		unsigned int                      SPOT_ENA_2 : 1;
		unsigned int                   LOCAL_LIGHT_2 : 1;
		unsigned int                  SPECULAR_ENA_2 : 1;
		unsigned int                   AMBIENT_ENA_2 : 1;
		unsigned int                     LIGHT_ENA_2 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_PER_LIGHT_CNTL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     LIGHT_ENA_4 : 1;
		unsigned int                   AMBIENT_ENA_4 : 1;
		unsigned int                  SPECULAR_ENA_4 : 1;
		unsigned int                   LOCAL_LIGHT_4 : 1;
		unsigned int                      SPOT_ENA_4 : 1;
		unsigned int                SPOT_DUAL_CONE_4 : 1;
		unsigned int                   RNG_ATT_ENA_4 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_4 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT4_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT4_2BIT_NUM1 : 2;
		unsigned int                     LIGHT_ENA_5 : 1;
		unsigned int                   AMBIENT_ENA_5 : 1;
		unsigned int                  SPECULAR_ENA_5 : 1;
		unsigned int                   LOCAL_LIGHT_5 : 1;
		unsigned int                      SPOT_ENA_5 : 1;
		unsigned int                SPOT_DUAL_CONE_5 : 1;
		unsigned int                   RNG_ATT_ENA_5 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_5 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT5_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT5_2BIT_NUM1 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int              RSVD_LT5_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT5_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT5_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT5_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_5 : 1;
		unsigned int                   RNG_ATT_ENA_5 : 1;
		unsigned int                SPOT_DUAL_CONE_5 : 1;
		unsigned int                      SPOT_ENA_5 : 1;
		unsigned int                   LOCAL_LIGHT_5 : 1;
		unsigned int                  SPECULAR_ENA_5 : 1;
		unsigned int                   AMBIENT_ENA_5 : 1;
		unsigned int                     LIGHT_ENA_5 : 1;
		unsigned int              RSVD_LT4_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT4_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT4_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT4_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_4 : 1;
		unsigned int                   RNG_ATT_ENA_4 : 1;
		unsigned int                SPOT_DUAL_CONE_4 : 1;
		unsigned int                      SPOT_ENA_4 : 1;
		unsigned int                   LOCAL_LIGHT_4 : 1;
		unsigned int                  SPECULAR_ENA_4 : 1;
		unsigned int                   AMBIENT_ENA_4 : 1;
		unsigned int                     LIGHT_ENA_4 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_PER_LIGHT_CNTL_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     LIGHT_ENA_6 : 1;
		unsigned int                   AMBIENT_ENA_6 : 1;
		unsigned int                  SPECULAR_ENA_6 : 1;
		unsigned int                   LOCAL_LIGHT_6 : 1;
		unsigned int                      SPOT_ENA_6 : 1;
		unsigned int                SPOT_DUAL_CONE_6 : 1;
		unsigned int                   RNG_ATT_ENA_6 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_6 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT6_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT6_2BIT_NUM1 : 2;
		unsigned int                     LIGHT_ENA_7 : 1;
		unsigned int                   AMBIENT_ENA_7 : 1;
		unsigned int                  SPECULAR_ENA_7 : 1;
		unsigned int                   LOCAL_LIGHT_7 : 1;
		unsigned int                      SPOT_ENA_7 : 1;
		unsigned int                SPOT_DUAL_CONE_7 : 1;
		unsigned int                   RNG_ATT_ENA_7 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_7 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM0 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT7_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT7_2BIT_NUM1 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int              RSVD_LT7_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT7_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT7_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT7_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_7 : 1;
		unsigned int                   RNG_ATT_ENA_7 : 1;
		unsigned int                SPOT_DUAL_CONE_7 : 1;
		unsigned int                      SPOT_ENA_7 : 1;
		unsigned int                   LOCAL_LIGHT_7 : 1;
		unsigned int                  SPECULAR_ENA_7 : 1;
		unsigned int                   AMBIENT_ENA_7 : 1;
		unsigned int                     LIGHT_ENA_7 : 1;
		unsigned int              RSVD_LT6_2BIT_NUM1 : 2;
		unsigned int              RSVD_LT6_2BIT_NUM0 : 2;
		unsigned int              RSVD_LT6_1BIT_NUM3 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM2 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM1 : 1;
		unsigned int              RSVD_LT6_1BIT_NUM0 : 1;
		unsigned int          RNG_ATT_CONSTANT_ENA_6 : 1;
		unsigned int                   RNG_ATT_ENA_6 : 1;
		unsigned int                SPOT_DUAL_CONE_6 : 1;
		unsigned int                      SPOT_ENA_6 : 1;
		unsigned int                   LOCAL_LIGHT_6 : 1;
		unsigned int                  SPECULAR_ENA_6 : 1;
		unsigned int                   AMBIENT_ENA_6 : 1;
		unsigned int                     LIGHT_ENA_6 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_DEBUG_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                DEBUG_RD_SEL_ENA : 1;
		unsigned int                    DEBUG_RD_SEL : 1;
		unsigned int                    DEBUG_IMM_RD : 1;
		unsigned int                  ST_UPD_FIFO_SZ : 2;
		unsigned int             DIS_CLIP_ERR_DETECT : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int             DIS_CLIP_ERR_DETECT : 1;
		unsigned int                  ST_UPD_FIFO_SZ : 2;
		unsigned int                    DEBUG_IMM_RD : 1;
		unsigned int                    DEBUG_RD_SEL : 1;
		unsigned int                DEBUG_RD_SEL_ENA : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_STATE_FLUSH_REG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_FPU_LATENCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VE_ENG_LATENCY : 5;
		unsigned int                 VE_MULT_LATENCY : 5;
		unsigned int                VE_ACCUM_LATENCY : 5;
		unsigned int                  SC_ENG_LATENCY : 5;
		unsigned int                  VE_OUT_LATENCY : 5;
		unsigned int                 SC_MATH_LATENCY : 5;
		unsigned int                 RSVD_LTNCY_2BIT : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 RSVD_LTNCY_2BIT : 2;
		unsigned int                 SC_MATH_LATENCY : 5;
		unsigned int                  VE_OUT_LATENCY : 5;
		unsigned int                  SC_ENG_LATENCY : 5;
		unsigned int                VE_ACCUM_LATENCY : 5;
		unsigned int                 VE_MULT_LATENCY : 5;
		unsigned int                  VE_ENG_LATENCY : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_TEX_PROC_CNTL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 TCG_COMP_MASK_0 : 4;
		unsigned int                 TCG_COMP_MASK_1 : 4;
		unsigned int                 TCG_COMP_MASK_2 : 4;
		unsigned int                 TCG_COMP_MASK_3 : 4;
		unsigned int                 TCG_COMP_MASK_4 : 4;
		unsigned int                 TCG_COMP_MASK_5 : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 TCG_COMP_MASK_5 : 4;
		unsigned int                 TCG_COMP_MASK_4 : 4;
		unsigned int                 TCG_COMP_MASK_3 : 4;
		unsigned int                 TCG_COMP_MASK_2 : 4;
		unsigned int                 TCG_COMP_MASK_1 : 4;
		unsigned int                 TCG_COMP_MASK_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_TEX_PROC_CNTL_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 TCG_INPUT_TEX_0 : 4;
		unsigned int                 TCG_INPUT_TEX_1 : 4;
		unsigned int                 TCG_INPUT_TEX_2 : 4;
		unsigned int                 TCG_INPUT_TEX_3 : 4;
		unsigned int                 TCG_INPUT_TEX_4 : 4;
		unsigned int                 TCG_INPUT_TEX_5 : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 TCG_INPUT_TEX_5 : 4;
		unsigned int                 TCG_INPUT_TEX_4 : 4;
		unsigned int                 TCG_INPUT_TEX_3 : 4;
		unsigned int                 TCG_INPUT_TEX_2 : 4;
		unsigned int                 TCG_INPUT_TEX_1 : 4;
		unsigned int                 TCG_INPUT_TEX_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_TEX_PROC_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               TEX_CS_PROC_ENA_0 : 1;
		unsigned int               TEX_CS_PROC_ENA_1 : 1;
		unsigned int               TEX_CS_PROC_ENA_2 : 1;
		unsigned int               TEX_CS_PROC_ENA_3 : 1;
		unsigned int               TEX_CS_PROC_ENA_4 : 1;
		unsigned int               TEX_CS_PROC_ENA_5 : 1;
		unsigned int                                 : 2;
		unsigned int                 TEX_XFORM_ENA_0 : 1;
		unsigned int                 TEX_XFORM_ENA_1 : 1;
		unsigned int                 TEX_XFORM_ENA_2 : 1;
		unsigned int                 TEX_XFORM_ENA_3 : 1;
		unsigned int                 TEX_XFORM_ENA_4 : 1;
		unsigned int                 TEX_XFORM_ENA_5 : 1;
		unsigned int                                 : 2;
		unsigned int              TCG_FORCE_W_TO_ONE : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int              TCG_FORCE_W_TO_ONE : 1;
		unsigned int                                 : 2;
		unsigned int                 TEX_XFORM_ENA_5 : 1;
		unsigned int                 TEX_XFORM_ENA_4 : 1;
		unsigned int                 TEX_XFORM_ENA_3 : 1;
		unsigned int                 TEX_XFORM_ENA_2 : 1;
		unsigned int                 TEX_XFORM_ENA_1 : 1;
		unsigned int                 TEX_XFORM_ENA_0 : 1;
		unsigned int                                 : 2;
		unsigned int               TEX_CS_PROC_ENA_5 : 1;
		unsigned int               TEX_CS_PROC_ENA_4 : 1;
		unsigned int               TEX_CS_PROC_ENA_3 : 1;
		unsigned int               TEX_CS_PROC_ENA_2 : 1;
		unsigned int               TEX_CS_PROC_ENA_1 : 1;
		unsigned int               TEX_CS_PROC_ENA_0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_TEX_PROC_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int               TEX_CS_PROC_SRC_0 : 4;
		unsigned int               TEX_CS_PROC_SRC_1 : 4;
		unsigned int               TEX_CS_PROC_SRC_2 : 4;
		unsigned int               TEX_CS_PROC_SRC_3 : 4;
		unsigned int               TEX_CS_PROC_SRC_4 : 4;
		unsigned int               TEX_CS_PROC_SRC_5 : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int               TEX_CS_PROC_SRC_5 : 4;
		unsigned int               TEX_CS_PROC_SRC_4 : 4;
		unsigned int               TEX_CS_PROC_SRC_3 : 4;
		unsigned int               TEX_CS_PROC_SRC_2 : 4;
		unsigned int               TEX_CS_PROC_SRC_1 : 4;
		unsigned int               TEX_CS_PROC_SRC_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_TEX_CYL_WRAP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  TEX_CYL_WRAP_0 : 4;
		unsigned int                  TEX_CYL_WRAP_1 : 4;
		unsigned int                  TEX_CYL_WRAP_2 : 4;
		unsigned int                  TEX_CYL_WRAP_3 : 4;
		unsigned int                  TEX_CYL_WRAP_4 : 4;
		unsigned int                  TEX_CYL_WRAP_5 : 4;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                  TEX_CYL_WRAP_5 : 4;
		unsigned int                  TEX_CYL_WRAP_4 : 4;
		unsigned int                  TEX_CYL_WRAP_3 : 4;
		unsigned int                  TEX_CYL_WRAP_2 : 4;
		unsigned int                  TEX_CYL_WRAP_1 : 4;
		unsigned int                  TEX_CYL_WRAP_0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_UCP_VTX_BLEND_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               UCP_IN_CLIP_SPACE : 1;
		unsigned int              UCP_IN_MODEL_SPACE : 1;
		unsigned int                       UCP_ENA_0 : 1;
		unsigned int                       UCP_ENA_1 : 1;
		unsigned int                       UCP_ENA_2 : 1;
		unsigned int                       UCP_ENA_3 : 1;
		unsigned int                       UCP_ENA_4 : 1;
		unsigned int                       UCP_ENA_5 : 1;
		unsigned int                        FOG_MODE : 2;
		unsigned int                   RNG_BASED_FOG : 1;
		unsigned int                    CLIP_DISABLE : 1;
		unsigned int                    BLEND_OP_CNT : 3;
		unsigned int             USE_ST_BLEND_OP_CNT : 1;
		unsigned int        POSITION_BLEND_OPERATION : 1;
		unsigned int          NORMAL_BLEND_OPERATION : 1;
		unsigned int                 VTX_BLEND_SRC_0 : 1;
		unsigned int                 VTX_BLEND_SRC_1 : 1;
		unsigned int                 VTX_BLEND_SRC_2 : 1;
		unsigned int                 VTX_BLEND_SRC_3 : 1;
		unsigned int          BLEND_WEIGHT_MINUS_ONE : 1;
		unsigned int          VTX_BLEND_USE_PROJ_MTX : 1;
		unsigned int            VTX_BLEND_2_OPTIMIZE : 1;
		unsigned int                   CULL_EQ_0_ENA : 1;
		unsigned int                     CULL_METHOD : 2;
		unsigned int                  CULLING_FF_DIR : 1;
		unsigned int                     CULL_FF_ENA : 1;
		unsigned int                     CULL_BF_ENA : 1;
		unsigned int               UCP_CULL_ONLY_ENA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int               UCP_CULL_ONLY_ENA : 1;
		unsigned int                     CULL_BF_ENA : 1;
		unsigned int                     CULL_FF_ENA : 1;
		unsigned int                  CULLING_FF_DIR : 1;
		unsigned int                     CULL_METHOD : 2;
		unsigned int                   CULL_EQ_0_ENA : 1;
		unsigned int            VTX_BLEND_2_OPTIMIZE : 1;
		unsigned int          VTX_BLEND_USE_PROJ_MTX : 1;
		unsigned int          BLEND_WEIGHT_MINUS_ONE : 1;
		unsigned int                 VTX_BLEND_SRC_3 : 1;
		unsigned int                 VTX_BLEND_SRC_2 : 1;
		unsigned int                 VTX_BLEND_SRC_1 : 1;
		unsigned int                 VTX_BLEND_SRC_0 : 1;
		unsigned int          NORMAL_BLEND_OPERATION : 1;
		unsigned int        POSITION_BLEND_OPERATION : 1;
		unsigned int             USE_ST_BLEND_OP_CNT : 1;
		unsigned int                    BLEND_OP_CNT : 3;
		unsigned int                    CLIP_DISABLE : 1;
		unsigned int                   RNG_BASED_FOG : 1;
		unsigned int                        FOG_MODE : 2;
		unsigned int                       UCP_ENA_5 : 1;
		unsigned int                       UCP_ENA_4 : 1;
		unsigned int                       UCP_ENA_3 : 1;
		unsigned int                       UCP_ENA_2 : 1;
		unsigned int                       UCP_ENA_1 : 1;
		unsigned int                       UCP_ENA_0 : 1;
		unsigned int              UCP_IN_MODEL_SPACE : 1;
		unsigned int               UCP_IN_CLIP_SPACE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_TCL_POINT_SPRITE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         PS_MULT : 3;
		unsigned int                 PS_LIN_ATT_ZERO : 1;
		unsigned int            PS_USE_MODEL_EYE_VEC : 1;
		unsigned int                    PS_ATT_ALPHA : 1;
		unsigned int                     PS_UCP_MODE : 2;
		unsigned int                    PS_GEN_TEX_0 : 1;
		unsigned int                    PS_GEN_TEX_1 : 1;
		unsigned int                    PS_GEN_TEX_2 : 1;
		unsigned int                    PS_GEN_TEX_3 : 1;
		unsigned int                    PS_GEN_TEX_4 : 1;
		unsigned int                    PS_GEN_TEX_5 : 1;
		unsigned int                                 : 2;
		unsigned int            PS_SE_SEL_STATE_SIZE : 1;
		unsigned int            PS_DIS_VV_EARLY_EXIT : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int            PS_DIS_VV_EARLY_EXIT : 1;
		unsigned int            PS_SE_SEL_STATE_SIZE : 1;
		unsigned int                                 : 2;
		unsigned int                    PS_GEN_TEX_5 : 1;
		unsigned int                    PS_GEN_TEX_4 : 1;
		unsigned int                    PS_GEN_TEX_3 : 1;
		unsigned int                    PS_GEN_TEX_2 : 1;
		unsigned int                    PS_GEN_TEX_1 : 1;
		unsigned int                    PS_GEN_TEX_0 : 1;
		unsigned int                     PS_UCP_MODE : 2;
		unsigned int                    PS_ATT_ALPHA : 1;
		unsigned int            PS_USE_MODEL_EYE_VEC : 1;
		unsigned int                 PS_LIN_ATT_ZERO : 1;
		unsigned int                         PS_MULT : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PVS_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PVS_FIRST_INST : 10;
		unsigned int             PVS_XYZW_VALID_INST : 10;
		unsigned int                   PVS_LAST_INST : 10;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                   PVS_LAST_INST : 10;
		unsigned int             PVS_XYZW_VALID_INST : 10;
		unsigned int                  PVS_FIRST_INST : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_PVS_CONST_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int           PVS_CONST_BASE_OFFSET : 8;
		unsigned int                                 : 8;
		unsigned int              PVS_MAX_CONST_ADDR : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int              PVS_MAX_CONST_ADDR : 8;
		unsigned int                                 : 8;
		unsigned int           PVS_CONST_BASE_OFFSET : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_X_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_Y_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_Z_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_W_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_0_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_0_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_0_Z {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_PVMS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_0_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_0_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_0_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_0_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_1_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_1_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_1_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_1_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_2_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_2_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_2_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_2_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_3_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_3_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_3_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_3_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_4_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_4_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_4_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_4_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_5_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_5_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_5_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_5_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_6_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_6_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_6_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_6_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_7_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_7_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_7_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_7_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_0_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_0_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_0_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_0_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_1_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_1_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_1_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_1_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_2_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_2_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_2_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_2_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_3_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_3_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_3_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_3_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_4_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_4_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_4_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_4_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_5_S {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_5_T {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_5_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_TEX_5_Q {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_PNT_SPRT_SZ {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_DISC_FOG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_SHININESS_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_SHININESS_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_BLND_WT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_BLND_WT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_BLND_WT_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_BLND_WT_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_1_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_1_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_1_Z {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_1_W {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_1_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_1_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_NORM_1_Z {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_SPARE_43C {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_0_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_0_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_0_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_0_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_1_R {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_1_G {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_1_B {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_1_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_0_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_1_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_2_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_3_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_4_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_5_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_6_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_CLR_7_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_X_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_Y_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_PAR_CLR_LD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_USR_CLR_PKD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_X_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_Y_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_POS_0_Z_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_VTX_ST_END_OF_PKT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DATA_REGISTER : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DATA_REGISTER : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SOLID_COLOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     SOLID_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     SOLID_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_WIDTH_HEIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           WIDTH : 11;
		unsigned int                                 : 5;
		unsigned int                          HEIGHT : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                          HEIGHT : 11;
		unsigned int                                 : 5;
		unsigned int                           WIDTH : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_POINTSIZE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       POINTSIZE : 16;
		unsigned int                    MAXPOINTSIZE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    MAXPOINTSIZE : 16;
		unsigned int                       POINTSIZE : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  FFACE_CULL_DIR : 1;
		unsigned int                  BFACE_CULL_FCN : 2;
		unsigned int                  FFACE_CULL_FCN : 2;
		unsigned int                                 : 1;
		unsigned int                  FLAT_SHADE_VTX : 2;
		unsigned int               DIFFUSE_SHADE_FCN : 2;
		unsigned int                 ALPHA_SHADE_FCN : 2;
		unsigned int              SPECULAR_SHADE_FCN : 2;
		unsigned int                   FOG_SHADE_FCN : 2;
		unsigned int                  ZBIAS_EN_POINT : 1;
		unsigned int                   ZBIAS_EN_LINE : 1;
		unsigned int                    ZBIAS_EN_TRI : 1;
		unsigned int                                 : 1;
		unsigned int                     WIDELINE_EN : 1;
		unsigned int                                 : 3;
		unsigned int          DISCRETE_FOG_SHADE_FCN : 2;
		unsigned int                                 : 1;
		unsigned int                   VTX_PIXCENTER : 1;
		unsigned int                      ROUND_MODE : 2;
		unsigned int                 ROUND_PRECISION : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 ROUND_PRECISION : 2;
		unsigned int                      ROUND_MODE : 2;
		unsigned int                   VTX_PIXCENTER : 1;
		unsigned int                                 : 1;
		unsigned int          DISCRETE_FOG_SHADE_FCN : 2;
		unsigned int                                 : 3;
		unsigned int                     WIDELINE_EN : 1;
		unsigned int                                 : 1;
		unsigned int                    ZBIAS_EN_TRI : 1;
		unsigned int                   ZBIAS_EN_LINE : 1;
		unsigned int                  ZBIAS_EN_POINT : 1;
		unsigned int                   FOG_SHADE_FCN : 2;
		unsigned int              SPECULAR_SHADE_FCN : 2;
		unsigned int                 ALPHA_SHADE_FCN : 2;
		unsigned int               DIFFUSE_SHADE_FCN : 2;
		unsigned int                  FLAT_SHADE_VTX : 2;
		unsigned int                                 : 1;
		unsigned int                  FFACE_CULL_FCN : 2;
		unsigned int                  BFACE_CULL_FCN : 2;
		unsigned int                  FFACE_CULL_DIR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  STIPPLE_ENABLE : 1;
		unsigned int                  SCISSOR_ENABLE : 1;
		unsigned int                  PATTERN_ENABLE : 1;
		unsigned int              PERSPECTIVE_ENABLE : 1;
		unsigned int                   JITTER_ENABLE : 1;
		unsigned int                    POINT_SMOOTH : 1;
		unsigned int                                 : 2;
		unsigned int                  VTX_SAVE_T0_N3 : 1;
		unsigned int                  VTX_SAVE_T1_N3 : 1;
		unsigned int                  VTX_SAVE_T2_N3 : 1;
		unsigned int                  VTX_SAVE_T3_N3 : 1;
		unsigned int                  VTX_SAVE_T4_N3 : 1;
		unsigned int                                 : 3;
		unsigned int                  VTX_STQ0_ROUTE : 2;
		unsigned int                  VTX_STQ1_ROUTE : 2;
		unsigned int                  VTX_STQ2_ROUTE : 2;
		unsigned int                  VTX_STQ3_ROUTE : 2;
		unsigned int                  VTX_STQ4_ROUTE : 2;
		unsigned int                  VTX_STQ5_ROUTE : 2;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                  VTX_STQ5_ROUTE : 2;
		unsigned int                  VTX_STQ4_ROUTE : 2;
		unsigned int                  VTX_STQ3_ROUTE : 2;
		unsigned int                  VTX_STQ2_ROUTE : 2;
		unsigned int                  VTX_STQ1_ROUTE : 2;
		unsigned int                  VTX_STQ0_ROUTE : 2;
		unsigned int                                 : 3;
		unsigned int                  VTX_SAVE_T4_N3 : 1;
		unsigned int                  VTX_SAVE_T3_N3 : 1;
		unsigned int                  VTX_SAVE_T2_N3 : 1;
		unsigned int                  VTX_SAVE_T1_N3 : 1;
		unsigned int                  VTX_SAVE_T0_N3 : 1;
		unsigned int                                 : 2;
		unsigned int                    POINT_SMOOTH : 1;
		unsigned int                   JITTER_ENABLE : 1;
		unsigned int              PERSPECTIVE_ENABLE : 1;
		unsigned int                  PATTERN_ENABLE : 1;
		unsigned int                  SCISSOR_ENABLE : 1;
		unsigned int                  STIPPLE_ENABLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_PERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                   CULL_PRESETUP : 1;
		unsigned int                  CULL_POSTSETUP : 1;
		unsigned int                   BLOCK_DISABLE : 1;
		unsigned int                                 : 1;
		unsigned int                     HZ_OVERRIDE : 1;
		unsigned int                                 : 1;
		unsigned int                        PERFSEL0 : 5;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                                 : 1;
		unsigned int                        PERFSEL1 : 5;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                                 : 1;
		unsigned int                        PERFSEL2 : 5;
		unsigned int                       CLR_PERF2 : 1;
		unsigned int                        EN_PERF2 : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                        EN_PERF2 : 1;
		unsigned int                       CLR_PERF2 : 1;
		unsigned int                        PERFSEL2 : 5;
		unsigned int                                 : 1;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        PERFSEL1 : 5;
		unsigned int                                 : 1;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                        PERFSEL0 : 5;
		unsigned int                                 : 1;
		unsigned int                     HZ_OVERRIDE : 1;
		unsigned int                                 : 1;
		unsigned int                   BLOCK_DISABLE : 1;
		unsigned int                  CULL_POSTSETUP : 1;
		unsigned int                   CULL_PRESETUP : 1;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_PERF_COUNT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_PERF_COUNT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_PERF_COUNT_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        RE_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        RE_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_DEBUG7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      HIZ_RAM_RM : 4;
		unsigned int               ONE_PRIM_PER_PASS : 1;
		unsigned int                     RE_DBG_DATA : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     RE_DBG_DATA : 27;
		unsigned int               ONE_PRIM_PER_PASS : 1;
		unsigned int                      HIZ_RAM_RM : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_TOP_LEFT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          X_LEFT : 11;
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
		unsigned int                          X_LEFT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_MISC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                STIPPLE_X_OFFSET : 5;
		unsigned int                                 : 3;
		unsigned int                STIPPLE_Y_OFFSET : 5;
		unsigned int                                 : 3;
		unsigned int               STIPPLE_BIT_ORDER : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int               STIPPLE_BIT_ORDER : 1;
		unsigned int                                 : 3;
		unsigned int                STIPPLE_Y_OFFSET : 5;
		unsigned int                                 : 3;
		unsigned int                STIPPLE_X_OFFSET : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_STIPPLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    STIPPLE_ADDR : 5;
		unsigned int                                 : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 27;
		unsigned int                    STIPPLE_ADDR : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_STIPPLE_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    STIPPLE_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    STIPPLE_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_LINE_PATTERN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    LINE_PATTERN : 16;
		unsigned int                    REPEAT_COUNT : 8;
		unsigned int                   PATTERN_START : 4;
		unsigned int               PATTERN_BIT_ORDER : 1;
		unsigned int               AUTO_RESET_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               AUTO_RESET_ENABLE : 1;
		unsigned int               PATTERN_BIT_ORDER : 1;
		unsigned int                   PATTERN_START : 4;
		unsigned int                    REPEAT_COUNT : 8;
		unsigned int                    LINE_PATTERN : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_LINE_STATE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CURRENT_PTR : 4;
		unsigned int                                 : 4;
		unsigned int                   CURRENT_COUNT : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                   CURRENT_COUNT : 8;
		unsigned int                                 : 4;
		unsigned int                     CURRENT_PTR : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_TL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          X_LEFT : 11;
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
		unsigned int                          X_LEFT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_BR_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         X_RIGHT : 11;
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
		unsigned int                         X_RIGHT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_TL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          X_LEFT : 11;
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
		unsigned int                          X_LEFT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_BR_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         X_RIGHT : 11;
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
		unsigned int                         X_RIGHT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_TL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          X_LEFT : 11;
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                           Y_TOP : 11;
		unsigned int                                 : 5;
		unsigned int                          X_LEFT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_SCISSOR_BR_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         X_RIGHT : 11;
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                        Y_BOTTOM : 11;
		unsigned int                                 : 5;
		unsigned int                         X_RIGHT : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_AUX_SCISSOR_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 24;
		unsigned int             EXCLUSIVE_SCISSOR_0 : 1;
		unsigned int             EXCLUSIVE_SCISSOR_1 : 1;
		unsigned int             EXCLUSIVE_SCISSOR_2 : 1;
		unsigned int                                 : 1;
		unsigned int                SCISSOR_ENABLE_0 : 1;
		unsigned int                SCISSOR_ENABLE_1 : 1;
		unsigned int                SCISSOR_ENABLE_2 : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                SCISSOR_ENABLE_2 : 1;
		unsigned int                SCISSOR_ENABLE_1 : 1;
		unsigned int                SCISSOR_ENABLE_0 : 1;
		unsigned int                                 : 1;
		unsigned int             EXCLUSIVE_SCISSOR_2 : 1;
		unsigned int             EXCLUSIVE_SCISSOR_1 : 1;
		unsigned int             EXCLUSIVE_SCISSOR_0 : 1;
		unsigned int                                 : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_JITTER_TABLE0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SAMPLE_SEL_00 : 4;
		unsigned int                   SAMPLE_SEL_10 : 4;
		unsigned int                   SAMPLE_SEL_20 : 4;
		unsigned int                   SAMPLE_SEL_30 : 4;
		unsigned int                   SAMPLE_SEL_01 : 4;
		unsigned int                   SAMPLE_SEL_11 : 4;
		unsigned int                   SAMPLE_SEL_21 : 4;
		unsigned int                   SAMPLE_SEL_31 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   SAMPLE_SEL_31 : 4;
		unsigned int                   SAMPLE_SEL_21 : 4;
		unsigned int                   SAMPLE_SEL_11 : 4;
		unsigned int                   SAMPLE_SEL_01 : 4;
		unsigned int                   SAMPLE_SEL_30 : 4;
		unsigned int                   SAMPLE_SEL_20 : 4;
		unsigned int                   SAMPLE_SEL_10 : 4;
		unsigned int                   SAMPLE_SEL_00 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_JITTER_TABLE1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SAMPLE_SEL_02 : 4;
		unsigned int                   SAMPLE_SEL_12 : 4;
		unsigned int                   SAMPLE_SEL_22 : 4;
		unsigned int                   SAMPLE_SEL_32 : 4;
		unsigned int                   SAMPLE_SEL_03 : 4;
		unsigned int                   SAMPLE_SEL_13 : 4;
		unsigned int                   SAMPLE_SEL_23 : 4;
		unsigned int                   SAMPLE_SEL_33 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   SAMPLE_SEL_33 : 4;
		unsigned int                   SAMPLE_SEL_23 : 4;
		unsigned int                   SAMPLE_SEL_13 : 4;
		unsigned int                   SAMPLE_SEL_03 : 4;
		unsigned int                   SAMPLE_SEL_32 : 4;
		unsigned int                   SAMPLE_SEL_22 : 4;
		unsigned int                   SAMPLE_SEL_12 : 4;
		unsigned int                   SAMPLE_SEL_02 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_FOG_TABLE_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       FOG_INDEX : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                       FOG_INDEX : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_FOG_TABLE_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        FOG_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        FOG_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_ZBIAS_FACTOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ZBIAS_FACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    ZBIAS_FACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_ZBIAS_CONSTANT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  ZBIAS_CONSTANT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  ZBIAS_CONSTANT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_LINE_WIDTH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      LINE_WIDTH : 10;
		unsigned int                                 : 6;
		unsigned int                    MINPOINTSIZE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    MINPOINTSIZE : 16;
		unsigned int                                 : 6;
		unsigned int                      LINE_WIDTH : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RE_W_BIAS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          W_BIAS : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                          W_BIAS : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_MC_SRC2_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           MC_X2 : 13;
		unsigned int                                 : 3;
		unsigned int                           MC_Y2 : 12;
		unsigned int                                 : 2;
		unsigned int            MC_SEC_SRC_PITCH_MUL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int            MC_SEC_SRC_PITCH_MUL : 2;
		unsigned int                                 : 2;
		unsigned int                           MC_Y2 : 12;
		unsigned int                                 : 3;
		unsigned int                           MC_X2 : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_MC_SRC1_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           MC_X1 : 13;
		unsigned int                                 : 3;
		unsigned int                           MC_Y1 : 12;
		unsigned int                     MC_IDCT_ENB : 1;
		unsigned int                  MC_SEC_TEX_ENB : 1;
		unsigned int                MC_SRC_PITCH_MUL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                MC_SRC_PITCH_MUL : 2;
		unsigned int                  MC_SEC_TEX_ENB : 1;
		unsigned int                     MC_IDCT_ENB : 1;
		unsigned int                           MC_Y1 : 12;
		unsigned int                                 : 3;
		unsigned int                           MC_X1 : 13;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_MC_DST_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        MC_DST_Y : 14;
		unsigned int                                 : 2;
		unsigned int                        MC_DST_X : 14;
		unsigned int                MC_DST_PITCH_MUL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                MC_DST_PITCH_MUL : 2;
		unsigned int                        MC_DST_X : 14;
		unsigned int                                 : 2;
		unsigned int                        MC_DST_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_MC_CNTL_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int             MC_CNTL_SRC_1_INDEX : 4;
		unsigned int              MC_CNTL_DST_OFFSET : 21;
		unsigned int                    MC_ALPHA_ENB : 1;
		unsigned int             MC_CNTL_SRC_2_INDEX : 3;
		unsigned int        MC_CNTL_WIDTH_HEIGHT_SEL : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int        MC_CNTL_WIDTH_HEIGHT_SEL : 3;
		unsigned int             MC_CNTL_SRC_2_INDEX : 3;
		unsigned int                    MC_ALPHA_ENB : 1;
		unsigned int              MC_CNTL_DST_OFFSET : 21;
		unsigned int             MC_CNTL_SRC_1_INDEX : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SE_MC_BUF_BASE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 24;
		unsigned int                     MC_BUF_BASE : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                     MC_BUF_BASE : 8;
		unsigned int                                 : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFILTER_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MAG_FILTER : 1;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                                 : 8;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                     BORDER_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     BORDER_MODE : 1;
		unsigned int                       KILL_LT_0 : 1;
		unsigned int                         CLAMP_T : 3;
		unsigned int                        WRAPEN_T : 1;
		unsigned int                         CLAMP_S : 3;
		unsigned int                        WRAPEN_S : 1;
		unsigned int                 YUV_TEMPERATURE : 1;
		unsigned int                      YUV_TO_RGB : 1;
		unsigned int                   MAX_MIP_LEVEL : 4;
		unsigned int                                 : 8;
		unsigned int                        MAX_ANIS : 3;
		unsigned int                      MIN_FILTER : 4;
		unsigned int                      MAG_FILTER : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TXFORMAT : 5;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                         TXWIDTH : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               CHROMA_KEY_ENABLE : 1;
		unsigned int               ALPHA_MASK_ENABLE : 1;
		unsigned int                  LOOKUP_DISABLE : 1;
		unsigned int                        ST_ROUTE : 3;
		unsigned int                   FACE_HEIGHT_5 : 4;
		unsigned int                    FACE_WIDTH_5 : 4;
		unsigned int                        TXHEIGHT : 4;
		unsigned int                         TXWIDTH : 4;
		unsigned int                      NON_POWER2 : 1;
		unsigned int                    ALPHA_ENABLE : 1;
		unsigned int                       APPLE_YUV : 1;
		unsigned int                        TXFORMAT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXFORMAT_X_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TXDEPTH : 4;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                                 : 2;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                        LOD_BIAS : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                        LOD_BIAS : 13;
		unsigned int                  TEX_COORD_TYPE : 3;
		unsigned int                   MIN_MIP_LEVEL : 4;
		unsigned int                         CLAMP_Q : 3;
		unsigned int                        WRAPEN_Q : 1;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 2;
		unsigned int                   VOLUME_FILTER : 1;
		unsigned int                         TXDEPTH : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TEX_SIZE_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TEX_USIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 3;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                    SIGNED_ALPHA : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SIGNED_ALPHA : 1;
		unsigned int                      SIGNED_RGB : 1;
		unsigned int                                 : 3;
		unsigned int                       TEX_VSIZE : 11;
		unsigned int                                 : 5;
		unsigned int                       TEX_USIZE : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXPITCH_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 16;
		unsigned int                    TEX_TAG_CNTL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    TEX_TAG_CNTL : 2;
		unsigned int                                 : 16;
		unsigned int                         TXPITCH : 9;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_BORDER_COLOR_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BORD_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BORD_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_FACES_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FACE_WIDTH_1 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_4 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   FACE_HEIGHT_4 : 4;
		unsigned int                    FACE_WIDTH_4 : 4;
		unsigned int                   FACE_HEIGHT_3 : 4;
		unsigned int                    FACE_WIDTH_3 : 4;
		unsigned int                   FACE_HEIGHT_2 : 4;
		unsigned int                    FACE_WIDTH_2 : 4;
		unsigned int                   FACE_HEIGHT_1 : 4;
		unsigned int                    FACE_WIDTH_1 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXMULTI_CTL_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                LOOKUP_DISABLE_1 : 1;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                                 : 15;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                      ST_ROUTE_2 : 3;
		unsigned int                                 : 15;
		unsigned int                      CLAMP_MODE : 1;
		unsigned int                      ST_ROUTE_1 : 4;
		unsigned int                TEX_COORD_TYPE_1 : 3;
		unsigned int                LOOKUP_DISABLE_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                    TEX_0_ENABLE : 1;
		unsigned int                    TEX_1_ENABLE : 1;
		unsigned int                    TEX_2_ENABLE : 1;
		unsigned int                    TEX_3_ENABLE : 1;
		unsigned int                    TEX_4_ENABLE : 1;
		unsigned int                    TEX_5_ENABLE : 1;
		unsigned int               FILTER_ROUND_MODE : 1;
		unsigned int              TEX_BLEND_7_ENABLE : 1;
		unsigned int              TEX_BLEND_0_ENABLE : 1;
		unsigned int              TEX_BLEND_1_ENABLE : 1;
		unsigned int              TEX_BLEND_2_ENABLE : 1;
		unsigned int              TEX_BLEND_3_ENABLE : 1;
		unsigned int              TEX_BLEND_4_ENABLE : 1;
		unsigned int              TEX_BLEND_5_ENABLE : 1;
		unsigned int              TEX_BLEND_6_ENABLE : 1;
		unsigned int               MULTI_PASS_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int                 SPECULAR_ENABLE : 1;
		unsigned int                      FOG_ENABLE : 1;
		unsigned int               ALPHA_TEST_ENABLE : 1;
		unsigned int                  ANTI_ALIAS_CTL : 2;
		unsigned int                                 : 5;
		unsigned int                       MC_ENABLE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       MC_ENABLE : 1;
		unsigned int                                 : 5;
		unsigned int                  ANTI_ALIAS_CTL : 2;
		unsigned int               ALPHA_TEST_ENABLE : 1;
		unsigned int                      FOG_ENABLE : 1;
		unsigned int                 SPECULAR_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int               MULTI_PASS_ENABLE : 1;
		unsigned int              TEX_BLEND_6_ENABLE : 1;
		unsigned int              TEX_BLEND_5_ENABLE : 1;
		unsigned int              TEX_BLEND_4_ENABLE : 1;
		unsigned int              TEX_BLEND_3_ENABLE : 1;
		unsigned int              TEX_BLEND_2_ENABLE : 1;
		unsigned int              TEX_BLEND_1_ENABLE : 1;
		unsigned int              TEX_BLEND_0_ENABLE : 1;
		unsigned int              TEX_BLEND_7_ENABLE : 1;
		unsigned int               FILTER_ROUND_MODE : 1;
		unsigned int                    TEX_5_ENABLE : 1;
		unsigned int                    TEX_4_ENABLE : 1;
		unsigned int                    TEX_3_ENABLE : 1;
		unsigned int                    TEX_2_ENABLE : 1;
		unsigned int                    TEX_1_ENABLE : 1;
		unsigned int                    TEX_0_ENABLE : 1;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CNTL_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEX_0_ENABLE_PASS_1 : 1;
		unsigned int             TEX_1_ENABLE_PASS_1 : 1;
		unsigned int             TEX_2_ENABLE_PASS_1 : 1;
		unsigned int             TEX_3_ENABLE_PASS_1 : 1;
		unsigned int             TEX_4_ENABLE_PASS_1 : 1;
		unsigned int             TEX_5_ENABLE_PASS_1 : 1;
		unsigned int                   INDIRECT_REGS : 6;
		unsigned int             TEX_BLEND_A0_ENABLE : 1;
		unsigned int             TEX_BLEND_A1_ENABLE : 1;
		unsigned int             TEX_BLEND_A2_ENABLE : 1;
		unsigned int             TEX_BLEND_A3_ENABLE : 1;
		unsigned int             TEX_BLEND_A4_ENABLE : 1;
		unsigned int             TEX_BLEND_A5_ENABLE : 1;
		unsigned int             TEX_BLEND_A6_ENABLE : 1;
		unsigned int             TEX_BLEND_A7_ENABLE : 1;
		unsigned int                                 : 11;
		unsigned int              SHADER_OUTPUT_CNTL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              SHADER_OUTPUT_CNTL : 1;
		unsigned int                                 : 11;
		unsigned int             TEX_BLEND_A7_ENABLE : 1;
		unsigned int             TEX_BLEND_A6_ENABLE : 1;
		unsigned int             TEX_BLEND_A5_ENABLE : 1;
		unsigned int             TEX_BLEND_A4_ENABLE : 1;
		unsigned int             TEX_BLEND_A3_ENABLE : 1;
		unsigned int             TEX_BLEND_A2_ENABLE : 1;
		unsigned int             TEX_BLEND_A1_ENABLE : 1;
		unsigned int             TEX_BLEND_A0_ENABLE : 1;
		unsigned int                   INDIRECT_REGS : 6;
		unsigned int             TEX_5_ENABLE_PASS_1 : 1;
		unsigned int             TEX_4_ENABLE_PASS_1 : 1;
		unsigned int             TEX_3_ENABLE_PASS_1 : 1;
		unsigned int             TEX_2_ENABLE_PASS_1 : 1;
		unsigned int             TEX_1_ENABLE_PASS_1 : 1;
		unsigned int             TEX_0_ENABLE_PASS_1 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_MISC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       REF_ALPHA : 8;
		unsigned int                   ALPHA_TEST_OP : 3;
		unsigned int                                 : 5;
		unsigned int                     CHROMA_FUNC : 2;
		unsigned int                 CHROMA_KEY_MODE : 1;
		unsigned int                                 : 5;
		unsigned int                 RIGHT_HAND_CUBE : 1;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                 RIGHT_HAND_CUBE : 1;
		unsigned int                                 : 5;
		unsigned int                 CHROMA_KEY_MODE : 1;
		unsigned int                     CHROMA_FUNC : 2;
		unsigned int                                 : 5;
		unsigned int                   ALPHA_TEST_OP : 3;
		unsigned int                       REF_ALPHA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CHROMA_COLOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CHROMA_COLOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    CHROMA_COLOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CHROMA_MASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CHROMA_MASK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     CHROMA_MASK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_FOG_COLOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       FOG_COLOR : 24;
		unsigned int                       FOG_TABLE : 1;
		unsigned int                   FOG_INDEX_SEL : 3;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                   FOG_INDEX_SEL : 3;
		unsigned int                       FOG_TABLE : 1;
		unsigned int                       FOG_COLOR : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PERF_COUNT0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PP_CACHE_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  PP_CACHE_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PERF_COUNT1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PP_CACHE_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  PP_CACHE_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PERF_COUNT2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  PP_CACHE_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  PP_CACHE_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_MC_CONTEXT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     MC_BUF_BASE : 8;
		unsigned int                      SRC1_INDEX : 4;
		unsigned int                      SRC2_INDEX : 3;
		unsigned int                         MC_FUNC : 3;
		unsigned int                   DST_PITCH_MUL : 2;
		unsigned int                 SRC_2_PITCH_MUL : 2;
		unsigned int                 SRC_1_PITCH_MUL : 2;
		unsigned int        MC_CNTL_WIDTH_HEIGHT_SEL : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int        MC_CNTL_WIDTH_HEIGHT_SEL : 3;
		unsigned int                 SRC_1_PITCH_MUL : 2;
		unsigned int                 SRC_2_PITCH_MUL : 2;
		unsigned int                   DST_PITCH_MUL : 2;
		unsigned int                         MC_FUNC : 3;
		unsigned int                      SRC2_INDEX : 3;
		unsigned int                      SRC1_INDEX : 4;
		unsigned int                     MC_BUF_BASE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_LUMI_MATRIX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          LSCALE : 16;
		unsigned int                         LOFFSET : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                         LOFFSET : 16;
		unsigned int                          LSCALE : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ROT_MATRIX0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                             M00 : 16;
		unsigned int                             M10 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                             M10 : 16;
		unsigned int                             M00 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ROT_MATRIX1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                             M01 : 16;
		unsigned int                             M11 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                             M11 : 16;
		unsigned int                             M01 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TRI_PERF {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TRI_JUICE : 5;
		unsigned int                                 : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 27;
		unsigned int                       TRI_JUICE : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   RR_FIFO_SCALE : 2;
		unsigned int                   REQUEST_SCALE : 1;
		unsigned int                                 : 1;
		unsigned int                    PP_COUNT_CTL : 2;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                    PP_COUNT_CTL : 2;
		unsigned int                                 : 1;
		unsigned int                   REQUEST_SCALE : 1;
		unsigned int                   RR_FIFO_SCALE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TXOFFSET_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                        TXOFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                        TXOFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F1_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F2_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F3_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F4_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_CUBIC_OFFSET_F5_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ENDIAN_SWAP : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                     FACE_OFFSET : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                     FACE_OFFSET : 27;
		unsigned int                      MICRO_TILE : 2;
		unsigned int                      MACRO_TILE : 1;
		unsigned int                     ENDIAN_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TAM_DEBUG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TAM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TAM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TAM_DEBUG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TAM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TAM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TAM_DEBUG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TAM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TAM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TDM_DEBUG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TDM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TDM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TDM_DEBUG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TDM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TDM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TDM_DEBUG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TDM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TDM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PB_DEBUG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PB_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PB_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PB_DEBUG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PB_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PB_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PB_DEBUG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PB_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PB_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TAM_DEBUG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TAM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TAM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TDM_DEBUG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       TDM_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       TDM_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PB_DEBUG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PB_DWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PB_DWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_16 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_SRC_OFFSET_17 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                       MC_OFFSET : 20;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_SIGN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SGN_TF0_B : 1;
		unsigned int                       SGN_TF0_G : 1;
		unsigned int                       SGN_TF0_R : 1;
		unsigned int                       SGN_TF0_A : 1;
		unsigned int                       SGN_TF1_B : 1;
		unsigned int                       SGN_TF1_G : 1;
		unsigned int                       SGN_TF1_R : 1;
		unsigned int                       SGN_TF1_A : 1;
		unsigned int                       SGN_TF2_B : 1;
		unsigned int                       SGN_TF2_G : 1;
		unsigned int                       SGN_TF2_R : 1;
		unsigned int                       SGN_TF2_A : 1;
		unsigned int                       SGN_TF3_B : 1;
		unsigned int                       SGN_TF3_G : 1;
		unsigned int                       SGN_TF3_R : 1;
		unsigned int                       SGN_TF3_A : 1;
		unsigned int                       SGN_TF4_B : 1;
		unsigned int                       SGN_TF4_G : 1;
		unsigned int                       SGN_TF4_R : 1;
		unsigned int                       SGN_TF4_A : 1;
		unsigned int                       SGN_TF5_B : 1;
		unsigned int                       SGN_TF5_G : 1;
		unsigned int                       SGN_TF5_R : 1;
		unsigned int                       SGN_TF5_A : 1;
		unsigned int                       SGN_TF6_B : 1;
		unsigned int                       SGN_TF6_G : 1;
		unsigned int                       SGN_TF6_R : 1;
		unsigned int                       SGN_TF6_A : 1;
		unsigned int                       SGN_TF7_B : 1;
		unsigned int                       SGN_TF7_G : 1;
		unsigned int                       SGN_TF7_R : 1;
		unsigned int                       SGN_TF7_A : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       SGN_TF7_A : 1;
		unsigned int                       SGN_TF7_R : 1;
		unsigned int                       SGN_TF7_G : 1;
		unsigned int                       SGN_TF7_B : 1;
		unsigned int                       SGN_TF6_A : 1;
		unsigned int                       SGN_TF6_R : 1;
		unsigned int                       SGN_TF6_G : 1;
		unsigned int                       SGN_TF6_B : 1;
		unsigned int                       SGN_TF5_A : 1;
		unsigned int                       SGN_TF5_R : 1;
		unsigned int                       SGN_TF5_G : 1;
		unsigned int                       SGN_TF5_B : 1;
		unsigned int                       SGN_TF4_A : 1;
		unsigned int                       SGN_TF4_R : 1;
		unsigned int                       SGN_TF4_G : 1;
		unsigned int                       SGN_TF4_B : 1;
		unsigned int                       SGN_TF3_A : 1;
		unsigned int                       SGN_TF3_R : 1;
		unsigned int                       SGN_TF3_G : 1;
		unsigned int                       SGN_TF3_B : 1;
		unsigned int                       SGN_TF2_A : 1;
		unsigned int                       SGN_TF2_R : 1;
		unsigned int                       SGN_TF2_G : 1;
		unsigned int                       SGN_TF2_B : 1;
		unsigned int                       SGN_TF1_A : 1;
		unsigned int                       SGN_TF1_R : 1;
		unsigned int                       SGN_TF1_G : 1;
		unsigned int                       SGN_TF1_B : 1;
		unsigned int                       SGN_TF0_A : 1;
		unsigned int                       SGN_TF0_R : 1;
		unsigned int                       SGN_TF0_G : 1;
		unsigned int                       SGN_TF0_B : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_TFACTOR_7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         TFACTOR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                         TFACTOR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I0_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I1_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I2_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I3_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I4_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I5_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I6_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I7_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I0_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I1_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I2_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I3_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I4_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I5_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I6_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I7_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I0_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I1_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I2_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I3_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I4_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I5_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I6_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I7_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I0_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I1_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I2_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I3_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I4_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I5_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I6_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_PIXSHADER_I7_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                          F1_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                          F0_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I0_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I1_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I2_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I3_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I4_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I5_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I6_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I7_C0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     COLOR_ARG_A : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     COLOR_ARG_C : 5;
		unsigned int                     COLOR_ARG_B : 5;
		unsigned int                     COLOR_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I0_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I1_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I2_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I3_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I4_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I5_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I6_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I7_C1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                   OUTPUT_ROTATE : 2;
		unsigned int                                 : 1;
		unsigned int                     OUTPUT_MASK : 3;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I0_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I1_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I2_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I3_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I4_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I5_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I6_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I7_A0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     ALPHA_ARG_A : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                                 : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                       BLEND_CTL : 3;
		unsigned int                       NEG_ARG_C : 1;
		unsigned int                     SCALE_ARG_C : 1;
		unsigned int                      BIAS_ARG_C : 1;
		unsigned int                      COMP_ARG_C : 1;
		unsigned int                       NEG_ARG_B : 1;
		unsigned int                     SCALE_ARG_B : 1;
		unsigned int                      BIAS_ARG_B : 1;
		unsigned int                      COMP_ARG_B : 1;
		unsigned int                       NEG_ARG_A : 1;
		unsigned int                     SCALE_ARG_A : 1;
		unsigned int                      BIAS_ARG_A : 1;
		unsigned int                      COMP_ARG_A : 1;
		unsigned int                                 : 1;
		unsigned int                     ALPHA_ARG_C : 5;
		unsigned int                     ALPHA_ARG_B : 5;
		unsigned int                     ALPHA_ARG_A : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I0_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I1_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I2_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I3_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I4_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I5_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I6_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PP_ADRSHADER_I7_A1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          F0_SEL : 4;
		unsigned int                          F1_SEL : 4;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 2;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 1;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 5;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_C : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 REPLICATE_ARG_C : 2;
		unsigned int                 REPLICATE_ARG_B : 2;
		unsigned int                 REPLICATE_ARG_A : 2;
		unsigned int                                 : 5;
		unsigned int                       DOT_ALPHA : 1;
		unsigned int                                 : 1;
		unsigned int                   OUTPUT_SELECT : 3;
		unsigned int                                 : 2;
		unsigned int                    OUTPUT_CLAMP : 2;
		unsigned int                                 : 1;
		unsigned int                    OUTPUT_SCALE : 3;
		unsigned int                          F1_SEL : 4;
		unsigned int                          F0_SEL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_ROP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 16;
		unsigned int                             ROP : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                             ROP : 8;
		unsigned int                                 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_CLRCMP_SRC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CLRCMP_SRC : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      CLRCMP_SRC : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_CLRCMP_DST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CLRCMP_DST : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      CLRCMP_DST : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_CLRCMP_FLIPE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CLRCMP_FLIPE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    CLRCMP_FLIPE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_CLRCMP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         FCN_SRC : 3;
		unsigned int                                 : 5;
		unsigned int                         FCN_DST : 3;
		unsigned int                                 : 13;
		unsigned int                             SRC : 2;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                             SRC : 2;
		unsigned int                                 : 13;
		unsigned int                         FCN_DST : 3;
		unsigned int                                 : 5;
		unsigned int                         FCN_SRC : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_CLRCMP_MSK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CLRCMP_MSK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      CLRCMP_MSK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_WRITEMASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       WRITEMASK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       WRITEMASK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_DATATYPE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DP_DST_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int               DP_BRUSH_DATATYPE : 4;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int               DP_BRUSH_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int                 DP_DST_DATATYPE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_GUI_MASTER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int              GMC_BRUSH_DATATYPE : 4;
		unsigned int                GMC_DST_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int                         GMC_ROP : 8;
		unsigned int                                 : 4;
		unsigned int             GMC_CLR_CMP_FCN_DIS : 1;
		unsigned int                                 : 1;
		unsigned int                  GMC_WR_MSK_DIS : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                  GMC_WR_MSK_DIS : 1;
		unsigned int                                 : 1;
		unsigned int             GMC_CLR_CMP_FCN_DIS : 1;
		unsigned int                                 : 4;
		unsigned int                         GMC_ROP : 8;
		unsigned int                                 : 4;
		unsigned int                GMC_DST_DATATYPE : 4;
		unsigned int              GMC_BRUSH_DATATYPE : 4;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_16 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_17 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_18 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_19 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_20 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_21 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_22 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_23 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_24 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_25 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_26 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_27 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_28 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_29 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_30 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_31 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_32 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_33 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_34 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_35 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_36 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_37 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_38 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_39 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_40 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_41 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_42 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_43 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_44 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_45 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_46 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_47 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_48 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_49 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_50 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_51 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_52 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_53 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_54 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_55 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_56 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_57 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_58 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_59 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_60 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_61 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_62 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_BRUSHDATA_63 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       BRUSHDATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       BRUSHDATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_DSTCACHE_MODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DC_BYPASS : 2;
		unsigned int                    DC_LINE_SIZE : 2;
		unsigned int                                 : 4;
		unsigned int             DC_AUTOFLUSH_ENABLE : 2;
		unsigned int              DC_AUTOFREE_ENABLE : 2;
		unsigned int                                 : 4;
		unsigned int                    DC_FORCE_RMW : 1;
		unsigned int                                 : 7;
		unsigned int              DC_DISABLE_RI_FILL : 1;
		unsigned int              DC_DISABLE_RI_READ : 1;
		unsigned int             DC_DISABLE_MASK_CHK : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int             DC_DISABLE_MASK_CHK : 1;
		unsigned int              DC_DISABLE_RI_READ : 1;
		unsigned int              DC_DISABLE_RI_FILL : 1;
		unsigned int                                 : 7;
		unsigned int                    DC_FORCE_RMW : 1;
		unsigned int                                 : 4;
		unsigned int              DC_AUTOFREE_ENABLE : 2;
		unsigned int             DC_AUTOFLUSH_ENABLE : 2;
		unsigned int                                 : 4;
		unsigned int                    DC_LINE_SIZE : 2;
		unsigned int                       DC_BYPASS : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_DSTCACHE_CTLSTAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DC_FLUSH : 2;
		unsigned int                         DC_FREE : 2;
		unsigned int                                 : 27;
		unsigned int                         DC_BUSY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         DC_BUSY : 1;
		unsigned int                                 : 27;
		unsigned int                         DC_FREE : 2;
		unsigned int                        DC_FLUSH : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_SRC_ENDIAN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SRC_ENDIAN : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                      SRC_ENDIAN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_DST_ENDIAN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_ENDIAN : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                      DST_ENDIAN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_PD1_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD1_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD1_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_PD2_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD2_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD2_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_WRITEBACK_DATA_LO {
	struct {
#if		defined(qLittleEndian)
		unsigned int               WRITEBACK_DATA_LO : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               WRITEBACK_DATA_LO : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_WRITEBACK_DATA_HI {
	struct {
#if		defined(qLittleEndian)
		unsigned int               WRITEBACK_DATA_HI : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               WRITEBACK_DATA_HI : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB2D_WRITEBACK_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                  WRITEBACK_ADDR : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                  WRITEBACK_ADDR : 29;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_BLENDCOLOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                            ARGB : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                            ARGB : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ABLENDCNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                        COMB_FCN : 3;
		unsigned int                                 : 1;
		unsigned int                        SRCBLEND : 6;
		unsigned int                                 : 2;
		unsigned int                       DESTBLEND : 6;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DESTBLEND : 6;
		unsigned int                                 : 2;
		unsigned int                        SRCBLEND : 6;
		unsigned int                                 : 1;
		unsigned int                        COMB_FCN : 3;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_BLENDCNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                        COMB_FCN : 3;
		unsigned int                                 : 1;
		unsigned int                        SRCBLEND : 6;
		unsigned int                                 : 2;
		unsigned int                       DESTBLEND : 6;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DESTBLEND : 6;
		unsigned int                                 : 2;
		unsigned int                        SRCBLEND : 6;
		unsigned int                                 : 1;
		unsigned int                        COMB_FCN : 3;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DEPTHOFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 12;
		unsigned int                     DEPTHOFFSET : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                     DEPTHOFFSET : 20;
		unsigned int                                 : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DEPTHPITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 5;
		unsigned int                      DEPTHPITCH : 8;
		unsigned int                                 : 5;
		unsigned int                     DEPTHENDIAN : 2;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                     DEPTHENDIAN : 2;
		unsigned int                                 : 5;
		unsigned int                      DEPTHPITCH : 8;
		unsigned int                                 : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZSTENCILCNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DEPTHFORMAT : 4;
		unsigned int                           ZFUNC : 3;
		unsigned int                                 : 5;
		unsigned int                     STENCILFUNC : 3;
		unsigned int                                 : 1;
		unsigned int                     STENCILFAIL : 3;
		unsigned int                                 : 1;
		unsigned int                    STENCILZPASS : 3;
		unsigned int                                 : 1;
		unsigned int                    STENCILZFAIL : 3;
		unsigned int                     FORCEZCLEAR : 1;
		unsigned int                    ZCOMPRESSION : 1;
		unsigned int                     FORCEZDIRTY : 1;
		unsigned int                    ZWRITEENABLE : 1;
		unsigned int                  ZDECOMPRESSION : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  ZDECOMPRESSION : 1;
		unsigned int                    ZWRITEENABLE : 1;
		unsigned int                     FORCEZDIRTY : 1;
		unsigned int                    ZCOMPRESSION : 1;
		unsigned int                     FORCEZCLEAR : 1;
		unsigned int                    STENCILZFAIL : 3;
		unsigned int                                 : 1;
		unsigned int                    STENCILZPASS : 3;
		unsigned int                                 : 1;
		unsigned int                     STENCILFAIL : 3;
		unsigned int                                 : 1;
		unsigned int                     STENCILFUNC : 3;
		unsigned int                                 : 5;
		unsigned int                           ZFUNC : 3;
		unsigned int                     DEPTHFORMAT : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DEPTHCLEARVALUE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DEPTHCLEARVALUE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 DEPTHCLEARVALUE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZMASKOFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                     ZMASKOFFSET : 13;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                     ZMASKOFFSET : 13;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int              ALPHA_BLEND_ENABLE : 1;
		unsigned int               PLANE_MASK_ENABLE : 1;
		unsigned int                   DITHER_ENABLE : 1;
		unsigned int                    ROUND_ENABLE : 1;
		unsigned int                    SCALE_DITHER : 1;
		unsigned int                     DITHER_INIT : 1;
		unsigned int                      ROP_ENABLE : 1;
		unsigned int                  STENCIL_ENABLE : 1;
		unsigned int                        Z_ENABLE : 1;
		unsigned int           DEPTHXY_OFFSET_ENABLE : 1;
		unsigned int                     COLORFORMAT : 4;
		unsigned int             CLRCMP_FLIPE_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int           SEPARATE_ALPHA_ENABLE : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int           SEPARATE_ALPHA_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int             CLRCMP_FLIPE_ENABLE : 1;
		unsigned int                     COLORFORMAT : 4;
		unsigned int           DEPTHXY_OFFSET_ENABLE : 1;
		unsigned int                        Z_ENABLE : 1;
		unsigned int                  STENCIL_ENABLE : 1;
		unsigned int                      ROP_ENABLE : 1;
		unsigned int                     DITHER_INIT : 1;
		unsigned int                    SCALE_DITHER : 1;
		unsigned int                    ROUND_ENABLE : 1;
		unsigned int                   DITHER_ENABLE : 1;
		unsigned int               PLANE_MASK_ENABLE : 1;
		unsigned int              ALPHA_BLEND_ENABLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_COLOROFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                     COLOROFFSET : 28;
#else		/* !defined(qLittleEndian) */
		unsigned int                     COLOROFFSET : 28;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_COLORPITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                      COLORPITCH : 10;
		unsigned int                                 : 3;
		unsigned int                       COLORTILE : 1;
		unsigned int                  COLORMICROTILE : 1;
		unsigned int                     COLORENDIAN : 2;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                     COLORENDIAN : 2;
		unsigned int                  COLORMICROTILE : 1;
		unsigned int                       COLORTILE : 1;
		unsigned int                                 : 3;
		unsigned int                      COLORPITCH : 10;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DEPTHXY_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DEPTHX_OFFSET : 12;
		unsigned int                                 : 4;
		unsigned int                   DEPTHY_OFFSET : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                   DEPTHY_OFFSET : 12;
		unsigned int                                 : 4;
		unsigned int                   DEPTHX_OFFSET : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_CLRCMP_FLIPE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CLRCMP_FLIPE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    CLRCMP_FLIPE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_CLRCMP_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CLRCMP_CLR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      CLRCMP_CLR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_CLRCMP_MSK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      CLRCMP_MSK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      CLRCMP_MSK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZMASK_WRINDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                   ZMASK_WRINDEX : 13;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                   ZMASK_WRINDEX : 13;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZMASK_DWORD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      ZMASKDWORD : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ZMASKDWORD : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZMASK_RDINDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 4;
		unsigned int                   ZMASK_RDINDEX : 13;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                   ZMASK_RDINDEX : 13;
		unsigned int                                 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_STENCILREFMASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      STENCILREF : 8;
		unsigned int                                 : 8;
		unsigned int                     STENCILMASK : 8;
		unsigned int                STENCILWRITEMASK : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                STENCILWRITEMASK : 8;
		unsigned int                     STENCILMASK : 8;
		unsigned int                                 : 8;
		unsigned int                      STENCILREF : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ROPCNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int                             ROP : 4;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                             ROP : 4;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PLANEMASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       PLANEMASK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       PLANEMASK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZCACHE_MODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int                    ZMASK_RAM_RM : 4;
		unsigned int                                 : 12;
		unsigned int              ZC_DISABLE_RI_FILL : 1;
		unsigned int              ZC_DISABLE_RI_READ : 1;
		unsigned int                                 : 1;
		unsigned int             ZC_DISABLE_RI_FLUSH : 1;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int             ZC_DISABLE_RI_FLUSH : 1;
		unsigned int                                 : 1;
		unsigned int              ZC_DISABLE_RI_READ : 1;
		unsigned int              ZC_DISABLE_RI_FILL : 1;
		unsigned int                                 : 12;
		unsigned int                    ZMASK_RAM_RM : 4;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZCACHE_CTLSTAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ZC_FLUSH : 1;
		unsigned int                                 : 1;
		unsigned int                         ZC_FREE : 1;
		unsigned int                                 : 28;
		unsigned int                         ZC_BUSY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         ZC_BUSY : 1;
		unsigned int                                 : 28;
		unsigned int                         ZC_FREE : 1;
		unsigned int                                 : 1;
		unsigned int                        ZC_FLUSH : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DSTCACHE_MODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DC_BYPASS : 2;
		unsigned int                    DC_LINE_SIZE : 2;
		unsigned int                                 : 4;
		unsigned int             DC_AUTOFLUSH_ENABLE : 2;
		unsigned int              DC_AUTOFREE_ENABLE : 2;
		unsigned int                                 : 4;
		unsigned int                    DC_FORCE_RMW : 1;
		unsigned int                                 : 7;
		unsigned int              DC_DISABLE_RI_FILL : 1;
		unsigned int              DC_DISABLE_RI_READ : 1;
		unsigned int             DC_DISABLE_MASK_CHK : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int             DC_DISABLE_MASK_CHK : 1;
		unsigned int              DC_DISABLE_RI_READ : 1;
		unsigned int              DC_DISABLE_RI_FILL : 1;
		unsigned int                                 : 7;
		unsigned int                    DC_FORCE_RMW : 1;
		unsigned int                                 : 4;
		unsigned int              DC_AUTOFREE_ENABLE : 2;
		unsigned int             DC_AUTOFLUSH_ENABLE : 2;
		unsigned int                                 : 4;
		unsigned int                    DC_LINE_SIZE : 2;
		unsigned int                       DC_BYPASS : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DSTCACHE_CTLSTAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DC_FLUSH : 2;
		unsigned int                         DC_FREE : 2;
		unsigned int                                 : 27;
		unsigned int                         DC_BUSY : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                         DC_BUSY : 1;
		unsigned int                                 : 27;
		unsigned int                         DC_FREE : 2;
		unsigned int                        DC_FLUSH : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PD0_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DISABLE_RB : 1;
		unsigned int                                 : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 31;
		unsigned int                      DISABLE_RB : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_DSTPERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PERFSEL0 : 3;
		unsigned int                                 : 1;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                                 : 2;
		unsigned int                        PERFSEL1 : 3;
		unsigned int                                 : 1;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                                 : 1;
		unsigned int                        PERFSEL1 : 3;
		unsigned int                                 : 2;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                                 : 1;
		unsigned int                        PERFSEL0 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PD1_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int       RB3D_DBG_DISABLE_ZMASK_L0 : 1;
		unsigned int                        PD1_DATA : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD1_DATA : 31;
		unsigned int       RB3D_DBG_DISABLE_ZMASK_L0 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PD1_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD1_ADDR : 3;
		unsigned int                                 : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 29;
		unsigned int                        PD1_ADDR : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PD2_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD2_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD2_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_PD3_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD3_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD3_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_WRITEBACK_DATA_LO {
	struct {
#if		defined(qLittleEndian)
		unsigned int               WRITEBACK_DATA_LO : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               WRITEBACK_DATA_LO : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_WRITEBACK_DATA_HI {
	struct {
#if		defined(qLittleEndian)
		unsigned int               WRITEBACK_DATA_HI : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               WRITEBACK_DATA_HI : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_WRITEBACK_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int                  WRITEBACK_ADDR : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                  WRITEBACK_ADDR : 29;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZPERF_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PERFSEL0 : 4;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                                 : 2;
		unsigned int                        PERFSEL1 : 4;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                        EN_PERF1 : 1;
		unsigned int                       CLR_PERF1 : 1;
		unsigned int                        PERFSEL1 : 4;
		unsigned int                                 : 2;
		unsigned int                        EN_PERF0 : 1;
		unsigned int                       CLR_PERF0 : 1;
		unsigned int                        PERFSEL0 : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZPASS_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      ZPASS_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ZPASS_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZPASS_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 2;
		unsigned int                      ZPASS_ADDR : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                      ZPASS_ADDR : 30;
		unsigned int                                 : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZPERF_COUNT_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union RB3D_ZPERF_COUNT_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PERF_COUNT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      PERF_COUNT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DST_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DST_PITCH : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                       DST_PITCH : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_TILE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        DST_TILE : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                        DST_TILE : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_PITCH_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_OFFSET : 22;
		unsigned int                       DST_PITCH : 8;
		unsigned int                        DST_TILE : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                        DST_TILE : 2;
		unsigned int                       DST_PITCH : 8;
		unsigned int                      DST_OFFSET : 22;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_X : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                           DST_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_Y : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                           DST_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_X_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_Y : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_X : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                           DST_X : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_Y_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_X : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_Y : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                           DST_Y : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_WIDTH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                       DST_WIDTH : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_HEIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                      DST_HEIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_WIDTH_HEIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
		unsigned int                      DST_HEIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_HEIGHT_WIDTH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_HEIGHT_WIDTH_8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 16;
		unsigned int                       DST_WIDTH : 8;
		unsigned int                      DST_HEIGHT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                      DST_HEIGHT : 8;
		unsigned int                       DST_WIDTH : 8;
		unsigned int                                 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_HEIGHT_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_Y : 14;
		unsigned int                                 : 2;
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                      DST_HEIGHT : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_WIDTH_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_X : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_WIDTH_X_INCY {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           DST_X : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DST_WIDTH : 14;
		unsigned int                                 : 2;
		unsigned int                           DST_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_LINE_START {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     DST_START_X : 14;
		unsigned int                                 : 2;
		unsigned int                     DST_START_Y : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                     DST_START_Y : 14;
		unsigned int                                 : 2;
		unsigned int                     DST_START_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_LINE_END {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DST_END_X : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_END_Y : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       DST_END_Y : 14;
		unsigned int                                 : 2;
		unsigned int                       DST_END_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DST_LINE_PATCOUNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   LINE_PATCOUNT : 5;
		unsigned int                                 : 3;
		unsigned int                       BRES_CNTL : 8;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                       BRES_CNTL : 8;
		unsigned int                                 : 3;
		unsigned int                   LINE_PATCOUNT : 5;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_DST_ENDIAN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      DST_ENDIAN : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                      DST_ENDIAN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_Y_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         BRUSH_X : 3;
		unsigned int                                 : 5;
		unsigned int                         BRUSH_Y : 3;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int                         BRUSH_Y : 3;
		unsigned int                                 : 5;
		unsigned int                         BRUSH_X : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA16 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA17 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA18 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA19 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA20 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA21 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA22 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA23 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA24 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA25 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA26 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA27 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA28 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA29 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA30 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA31 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA32 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA33 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA34 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA35 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA36 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA37 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA38 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA39 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA40 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA41 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA42 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA43 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA44 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA45 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA46 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA47 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA48 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA49 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA50 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA51 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA52 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA53 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA54 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA55 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA56 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA57 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA58 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA59 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA60 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA61 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA62 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BRUSH_DATA63 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BRUSH_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      BRUSH_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_BRUSH_FRGD_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int               DP_BRUSH_FRGD_CLR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               DP_BRUSH_FRGD_CLR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_BRUSH_BKGD_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int               DP_BRUSH_BKGD_CLR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int               DP_BRUSH_BKGD_CLR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SRC_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                      SRC_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SRC_PITCH : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                       SRC_PITCH : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_TILE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SRC_TILE : 1;
		unsigned int                                 : 31;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 31;
		unsigned int                        SRC_TILE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_PITCH_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SRC_OFFSET : 22;
		unsigned int                       SRC_PITCH : 8;
		unsigned int                        SRC_TILE : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                        SRC_TILE : 1;
		unsigned int                       SRC_PITCH : 8;
		unsigned int                      SRC_OFFSET : 22;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SRC_X : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                           SRC_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SRC_Y : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                           SRC_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_X_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SRC_Y : 14;
		unsigned int                                 : 2;
		unsigned int                           SRC_X : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                           SRC_X : 14;
		unsigned int                                 : 2;
		unsigned int                           SRC_Y : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_Y_X {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           SRC_X : 14;
		unsigned int                                 : 2;
		unsigned int                           SRC_Y : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                           SRC_Y : 14;
		unsigned int                                 : 2;
		unsigned int                           SRC_X : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_CLUT_ADDRESS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                SRC_CLUT_ADDRESS : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                SRC_CLUT_ADDRESS : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_CLUT_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SRC_CLUT_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   SRC_CLUT_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_CLUT_DATA_RD {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SRC_CLUT_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   SRC_CLUT_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       HOST_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                       HOST_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union HOST_DATA_LAST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  HOST_DATA_LAST : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  HOST_DATA_LAST : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_SRC_ENDIAN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SRC_ENDIAN : 2;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                      SRC_ENDIAN : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_SRC_FRGD_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DP_SRC_FRGD_CLR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 DP_SRC_FRGD_CLR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_SRC_BKGD_CLR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DP_SRC_BKGD_CLR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 DP_SRC_BKGD_CLR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_LEFT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         SC_LEFT : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                         SC_LEFT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SC_RIGHT : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                        SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_TOP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          SC_TOP : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                          SC_TOP : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_BOTTOM {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                       SC_BOTTOM : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_SC_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SC_RIGHT : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                        SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_SC_BOTTOM {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                       SC_BOTTOM : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       DST_X_DIR : 1;
		unsigned int                       DST_Y_DIR : 1;
		unsigned int                                 : 1;
		unsigned int                        DST_TILE : 2;
		unsigned int                                 : 27;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 27;
		unsigned int                        DST_TILE : 2;
		unsigned int                                 : 1;
		unsigned int                       DST_Y_DIR : 1;
		unsigned int                       DST_X_DIR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_CNTL_XDIR_YDIR_YMAJOR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 15;
		unsigned int                       DST_Y_DIR : 1;
		unsigned int                                 : 15;
		unsigned int                       DST_X_DIR : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       DST_X_DIR : 1;
		unsigned int                                 : 15;
		unsigned int                       DST_Y_DIR : 1;
		unsigned int                                 : 15;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_DATATYPE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DP_DST_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int               DP_BRUSH_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int                 DP_SRC_DATATYPE : 3;
		unsigned int                                 : 11;
		unsigned int               DP_BYTE_PIX_ORDER : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int               DP_BYTE_PIX_ORDER : 1;
		unsigned int                                 : 11;
		unsigned int                 DP_SRC_DATATYPE : 3;
		unsigned int                                 : 4;
		unsigned int               DP_BRUSH_DATATYPE : 4;
		unsigned int                                 : 4;
		unsigned int                 DP_DST_DATATYPE : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_MIX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 8;
		unsigned int                   DP_SRC_SOURCE : 3;
		unsigned int                                 : 5;
		unsigned int                         DP_ROP3 : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                         DP_ROP3 : 8;
		unsigned int                                 : 5;
		unsigned int                   DP_SRC_SOURCE : 3;
		unsigned int                                 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_WRITE_MSK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    DP_WRITE_MSK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    DP_WRITE_MSK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_XOP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           XOP_A : 8;
		unsigned int                           XOP_B : 8;
		unsigned int                           XOP_C : 8;
		unsigned int                          XOP_OP : 2;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                          XOP_OP : 2;
		unsigned int                           XOP_C : 8;
		unsigned int                           XOP_B : 8;
		unsigned int                           XOP_A : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLR_CMP_CLR_SRC {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CLR_CMP_CLR_SRC : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CLR_CMP_CLR_SRC : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLR_CMP_CLR_DST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CLR_CMP_CLR_DST : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CLR_CMP_CLR_DST : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLR_CMP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CLR_CMP_FCN_SRC : 3;
		unsigned int                                 : 5;
		unsigned int                 CLR_CMP_FCN_DST : 3;
		unsigned int                                 : 13;
		unsigned int                     CLR_CMP_SRC : 2;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                     CLR_CMP_SRC : 2;
		unsigned int                                 : 13;
		unsigned int                 CLR_CMP_FCN_DST : 3;
		unsigned int                                 : 5;
		unsigned int                 CLR_CMP_FCN_SRC : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLR_CMP_MSK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CLR_CMP_MSK : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     CLR_CMP_MSK : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DSTCACHE_MODE {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   DSTCACHE_MODE : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   DSTCACHE_MODE : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DSTCACHE_CTLSTAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                DSTCACHE_CTLSTAT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                DSTCACHE_CTLSTAT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PD2_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        PD2_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                        PD2_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEFAULT_PITCH_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DEFAULT_OFFSET : 22;
		unsigned int                   DEFAULT_PITCH : 8;
		unsigned int                    DEFAULT_TILE : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    DEFAULT_TILE : 2;
		unsigned int                   DEFAULT_PITCH : 8;
		unsigned int                  DEFAULT_OFFSET : 22;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEFAULT_SC_BOTTOM_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                DEFAULT_SC_RIGHT : 14;
		unsigned int                                 : 2;
		unsigned int               DEFAULT_SC_BOTTOM : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               DEFAULT_SC_BOTTOM : 14;
		unsigned int                                 : 2;
		unsigned int                DEFAULT_SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEFAULT2_PITCH_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DEFAULT_OFFSET : 22;
		unsigned int                   DEFAULT_PITCH : 8;
		unsigned int                    DEFAULT_TILE : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                    DEFAULT_TILE : 2;
		unsigned int                   DEFAULT_PITCH : 8;
		unsigned int                  DEFAULT_OFFSET : 22;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEFAULT2_SC_BOTTOM_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                DEFAULT_SC_RIGHT : 14;
		unsigned int                                 : 2;
		unsigned int               DEFAULT_SC_BOTTOM : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int               DEFAULT_SC_BOTTOM : 14;
		unsigned int                                 : 2;
		unsigned int                DEFAULT_SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DP_GUI_MASTER_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int       GMC_SRC_PITCH_OFFSET_CNTL : 1;
		unsigned int       GMC_DST_PITCH_OFFSET_CNTL : 1;
		unsigned int                GMC_SRC_CLIPPING : 1;
		unsigned int                GMC_DST_CLIPPING : 1;
		unsigned int              GMC_BRUSH_DATATYPE : 4;
		unsigned int                GMC_DST_DATATYPE : 4;
		unsigned int                GMC_SRC_DATATYPE : 2;
		unsigned int              GMC_BYTE_PIX_ORDER : 1;
		unsigned int                 GMC_DEFAULT_SEL : 1;
		unsigned int                        GMC_ROP3 : 8;
		unsigned int               GMC_DP_SRC_SOURCE : 3;
		unsigned int               GMC_SRC_DATATYPE2 : 1;
		unsigned int             GMC_CLR_CMP_FCN_DIS : 1;
		unsigned int                                 : 1;
		unsigned int                  GMC_WR_MSK_DIS : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                  GMC_WR_MSK_DIS : 1;
		unsigned int                                 : 1;
		unsigned int             GMC_CLR_CMP_FCN_DIS : 1;
		unsigned int               GMC_SRC_DATATYPE2 : 1;
		unsigned int               GMC_DP_SRC_SOURCE : 3;
		unsigned int                        GMC_ROP3 : 8;
		unsigned int                 GMC_DEFAULT_SEL : 1;
		unsigned int              GMC_BYTE_PIX_ORDER : 1;
		unsigned int                GMC_SRC_DATATYPE : 2;
		unsigned int                GMC_DST_DATATYPE : 4;
		unsigned int              GMC_BRUSH_DATATYPE : 4;
		unsigned int                GMC_DST_CLIPPING : 1;
		unsigned int                GMC_SRC_CLIPPING : 1;
		unsigned int       GMC_DST_PITCH_OFFSET_CNTL : 1;
		unsigned int       GMC_SRC_PITCH_OFFSET_CNTL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_TOP_LEFT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         SC_LEFT : 14;
		unsigned int                                 : 2;
		unsigned int                          SC_TOP : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                          SC_TOP : 14;
		unsigned int                                 : 2;
		unsigned int                         SC_LEFT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SC_BOTTOM_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SC_RIGHT : 14;
		unsigned int                                 : 2;
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 2;
		unsigned int                        SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SRC_SC_BOTTOM_RIGHT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        SC_RIGHT : 14;
		unsigned int                                 : 2;
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                       SC_BOTTOM : 14;
		unsigned int                                 : 2;
		unsigned int                        SC_RIGHT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG3 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG4 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG5 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG7 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG8 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG9 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG10 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG11 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG12 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG13 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG14 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DEBUG15 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_0_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_1_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_2_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_3_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_4_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_5_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_6_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union BIOS_7_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    BIOS_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    BIOS_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union I2C_CNTL_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        I2C_DONE : 1;
		unsigned int                        I2C_NACK : 1;
		unsigned int                        I2C_HALT : 1;
		unsigned int                                 : 2;
		unsigned int                    I2C_SOFT_RST : 1;
		unsigned int                    I2C_DRIVE_EN : 1;
		unsigned int                   I2C_DRIVE_SEL : 1;
		unsigned int                       I2C_START : 1;
		unsigned int                        I2C_STOP : 1;
		unsigned int                     I2C_RECEIVE : 1;
		unsigned int                       I2C_ABORT : 1;
		unsigned int                          I2C_GO : 1;
		unsigned int                                 : 3;
		unsigned int                    I2C_PRESCALE : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                    I2C_PRESCALE : 16;
		unsigned int                                 : 3;
		unsigned int                          I2C_GO : 1;
		unsigned int                       I2C_ABORT : 1;
		unsigned int                     I2C_RECEIVE : 1;
		unsigned int                        I2C_STOP : 1;
		unsigned int                       I2C_START : 1;
		unsigned int                   I2C_DRIVE_SEL : 1;
		unsigned int                    I2C_DRIVE_EN : 1;
		unsigned int                    I2C_SOFT_RST : 1;
		unsigned int                                 : 2;
		unsigned int                        I2C_HALT : 1;
		unsigned int                        I2C_NACK : 1;
		unsigned int                        I2C_DONE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union I2C_CNTL_1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  I2C_DATA_COUNT : 4;
		unsigned int                  I2C_ADDR_COUNT : 3;
		unsigned int                                 : 1;
		unsigned int            I2C_INTRA_BYTE_DELAY : 8;
		unsigned int                         I2C_SEL : 1;
		unsigned int                          I2C_EN : 1;
		unsigned int                                 : 6;
		unsigned int                  I2C_TIME_LIMIT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                  I2C_TIME_LIMIT : 8;
		unsigned int                                 : 6;
		unsigned int                          I2C_EN : 1;
		unsigned int                         I2C_SEL : 1;
		unsigned int            I2C_INTRA_BYTE_DELAY : 8;
		unsigned int                                 : 1;
		unsigned int                  I2C_ADDR_COUNT : 3;
		unsigned int                  I2C_DATA_COUNT : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union I2C_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        I2C_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        I2C_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CONFIG_XSTRAP {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VGA_DISABLE : 1;
		unsigned int                                 : 1;
		unsigned int                       BLANK_ROM : 1;
		unsigned int                          ENINTB : 1;
		unsigned int                      MULTI_FUNC : 2;
		unsigned int                         AGPSKEW : 2;
		unsigned int                      X1CLK_SKEW : 2;
		unsigned int                                 : 3;
		unsigned int                      VIP_DEVICE : 1;
		unsigned int                      ID_DISABLE : 1;
		unsigned int                                 : 1;
		unsigned int                         AP_SIZE : 2;
		unsigned int                                 : 2;
		unsigned int                        ROMIDCFG : 4;
		unsigned int                          BUSCFG : 3;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int                          BUSCFG : 3;
		unsigned int                        ROMIDCFG : 4;
		unsigned int                                 : 2;
		unsigned int                         AP_SIZE : 2;
		unsigned int                                 : 1;
		unsigned int                      ID_DISABLE : 1;
		unsigned int                      VIP_DEVICE : 1;
		unsigned int                                 : 3;
		unsigned int                      X1CLK_SKEW : 2;
		unsigned int                         AGPSKEW : 2;
		unsigned int                      MULTI_FUNC : 2;
		unsigned int                          ENINTB : 1;
		unsigned int                       BLANK_ROM : 1;
		unsigned int                                 : 1;
		unsigned int                     VGA_DISABLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TEST_DEBUG_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int               TEST_DEBUG_OUT_EN : 1;
		unsigned int                TEST_DEBUG_IN_EN : 1;
		unsigned int                    TEST_IDDQ_EN : 1;
		unsigned int                                 : 5;
		unsigned int                  TEST_BLOCK_SEL : 6;
		unsigned int                                 : 1;
		unsigned int                     TEST_ENABLE : 1;
		unsigned int                   TEST_DELAY_IN : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                   TEST_DELAY_IN : 1;
		unsigned int                     TEST_ENABLE : 1;
		unsigned int                                 : 1;
		unsigned int                  TEST_BLOCK_SEL : 6;
		unsigned int                                 : 5;
		unsigned int                    TEST_IDDQ_EN : 1;
		unsigned int                TEST_DEBUG_IN_EN : 1;
		unsigned int               TEST_DEBUG_OUT_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TEST_DEBUG_MUX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  TEST_DEBUG_SEL : 6;
		unsigned int                                 : 2;
		unsigned int                       TEST_CLK0 : 5;
		unsigned int                                 : 2;
		unsigned int                   TEST_CLK0_INV : 1;
		unsigned int                       TEST_CLK1 : 5;
		unsigned int                                 : 2;
		unsigned int                   TEST_CLK1_INV : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                   TEST_CLK1_INV : 1;
		unsigned int                                 : 2;
		unsigned int                       TEST_CLK1 : 5;
		unsigned int                   TEST_CLK0_INV : 1;
		unsigned int                                 : 2;
		unsigned int                       TEST_CLK0 : 5;
		unsigned int                                 : 2;
		unsigned int                  TEST_DEBUG_SEL : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TEST_DEBUG_OUT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 TEST_DEBUG_OUTR : 12;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                 TEST_DEBUG_OUTR : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIDEOMUX_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VIPH_INT_SEL : 1;
		unsigned int                                 : 15;
		unsigned int                  ROM_CLK_DIVIDE : 5;
		unsigned int                      STR_ROMCLK : 1;
		unsigned int          VIP_INTERNAL_DEBUG_SEL : 3;
		unsigned int               GEYSERVILLE_SENSE : 1;
		unsigned int             GEYSERVILLE_INT_POL : 1;
		unsigned int                                 : 5;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 5;
		unsigned int             GEYSERVILLE_INT_POL : 1;
		unsigned int               GEYSERVILLE_SENSE : 1;
		unsigned int          VIP_INTERNAL_DEBUG_SEL : 3;
		unsigned int                      STR_ROMCLK : 1;
		unsigned int                  ROM_CLK_DIVIDE : 5;
		unsigned int                                 : 15;
		unsigned int                    VIPH_INT_SEL : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPPAD_STRENGTH_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int             ZV_LCDDATA_STRENGTH : 2;
		unsigned int                                 : 6;
		unsigned int             ZV_LCDCNTL_STRENGTH : 2;
		unsigned int                                 : 2;
		unsigned int                   GPIO_STRENGTH : 2;
		unsigned int                                 : 18;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 18;
		unsigned int                   GPIO_STRENGTH : 2;
		unsigned int                                 : 2;
		unsigned int             ZV_LCDCNTL_STRENGTH : 2;
		unsigned int                                 : 6;
		unsigned int             ZV_LCDDATA_STRENGTH : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIOPAD_MASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       GPIO_MASK : 17;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                       GPIO_MASK : 17;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIOPAD_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          GPIO_A : 17;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                          GPIO_A : 17;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIOPAD_EN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                         GPIO_EN : 17;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                         GPIO_EN : 17;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union GPIOPAD_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          GPIO_Y : 17;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                          GPIO_Y : 17;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ZV_LCDPAD_MASK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 ZV_LCDDATA_MASK : 24;
		unsigned int                 ZV_LCDCNTL_MASK : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 ZV_LCDCNTL_MASK : 4;
		unsigned int                 ZV_LCDDATA_MASK : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ZV_LCDPAD_A {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ZV_LCDDATA_A : 24;
		unsigned int                    ZV_LCDCNTL_A : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                    ZV_LCDCNTL_A : 4;
		unsigned int                    ZV_LCDDATA_A : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ZV_LCDPAD_EN {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   ZV_LCDDATA_EN : 24;
		unsigned int                   ZV_LCDCNTL_EN : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                   ZV_LCDCNTL_EN : 4;
		unsigned int                   ZV_LCDDATA_EN : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ZV_LCDPAD_Y {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    ZV_LCDDATA_Y : 24;
		unsigned int                    ZV_LCDCNTL_Y : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                    ZV_LCDCNTL_Y : 4;
		unsigned int                    ZV_LCDDATA_Y : 24;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union EXTERN_TRIG_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 EXTERN_TRIG_CLR : 1;
		unsigned int                EXTERN_TRIG_READ : 1;
		unsigned int                                 : 30;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 30;
		unsigned int                EXTERN_TRIG_READ : 1;
		unsigned int                 EXTERN_TRIG_CLR : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ROM_INDEX {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       ROM_INDEX : 17;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                       ROM_INDEX : 17;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union ROM_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        ROM_DATA : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                        ROM_DATA : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEPROM_CNTL1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    WRITE_ENABLE : 1;
		unsigned int                   WRITE_DISABLE : 1;
		unsigned int                     READ_CONFIG : 1;
		unsigned int                    WRITE_CONFIG : 1;
		unsigned int                     READ_STATUS : 1;
		unsigned int                    SECT_TO_SRAM : 1;
		unsigned int                                 : 1;
		unsigned int                      READY_BUSY : 1;
		unsigned int                     SEPROM_BUSY : 1;
		unsigned int                BCNT_OVER_WTE_EN : 1;
		unsigned int                        RB_MASKB : 1;
		unsigned int                      SOFT_RESET : 1;
		unsigned int                     STATE_IDLEb : 1;
		unsigned int                                 : 3;
		unsigned int                        BYTE_CNT : 8;
		unsigned int                    SCK_PRESCALE : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                    SCK_PRESCALE : 8;
		unsigned int                        BYTE_CNT : 8;
		unsigned int                                 : 3;
		unsigned int                     STATE_IDLEb : 1;
		unsigned int                      SOFT_RESET : 1;
		unsigned int                        RB_MASKB : 1;
		unsigned int                BCNT_OVER_WTE_EN : 1;
		unsigned int                     SEPROM_BUSY : 1;
		unsigned int                      READY_BUSY : 1;
		unsigned int                                 : 1;
		unsigned int                    SECT_TO_SRAM : 1;
		unsigned int                     READ_STATUS : 1;
		unsigned int                    WRITE_CONFIG : 1;
		unsigned int                     READ_CONFIG : 1;
		unsigned int                   WRITE_DISABLE : 1;
		unsigned int                    WRITE_ENABLE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SEPROM_CNTL2 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      WAIT_CYCLE : 8;
		unsigned int                AUTO_ADDR_SAMPLE : 1;
		unsigned int                                 : 7;
		unsigned int                     SEC_COMMAND : 8;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                     SEC_COMMAND : 8;
		unsigned int                                 : 7;
		unsigned int                AUTO_ADDR_SAMPLE : 1;
		unsigned int                      WAIT_CYCLE : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIP_HW_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VIP_HW_0_DEBUG : 1;
		unsigned int                  VIP_HW_1_DEBUG : 1;
		unsigned int                  VIP_HW_2_DEBUG : 1;
		unsigned int                  VIP_HW_3_DEBUG : 1;
		unsigned int                  VIP_HW_4_DEBUG : 1;
		unsigned int                  VIP_HW_5_DEBUG : 1;
		unsigned int                  VIP_HW_6_DEBUG : 1;
		unsigned int                  VIP_HW_7_DEBUG : 1;
		unsigned int                  VIP_HW_8_DEBUG : 1;
		unsigned int                  VIP_HW_9_DEBUG : 1;
		unsigned int                  VIP_HW_A_DEBUG : 1;
		unsigned int                  VIP_HW_B_DEBUG : 1;
		unsigned int                  VIP_HW_C_DEBUG : 1;
		unsigned int                  VIP_HW_D_DEBUG : 1;
		unsigned int                  VIP_HW_E_DEBUG : 1;
		unsigned int                  VIP_HW_F_DEBUG : 1;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                  VIP_HW_F_DEBUG : 1;
		unsigned int                  VIP_HW_E_DEBUG : 1;
		unsigned int                  VIP_HW_D_DEBUG : 1;
		unsigned int                  VIP_HW_C_DEBUG : 1;
		unsigned int                  VIP_HW_B_DEBUG : 1;
		unsigned int                  VIP_HW_A_DEBUG : 1;
		unsigned int                  VIP_HW_9_DEBUG : 1;
		unsigned int                  VIP_HW_8_DEBUG : 1;
		unsigned int                  VIP_HW_7_DEBUG : 1;
		unsigned int                  VIP_HW_6_DEBUG : 1;
		unsigned int                  VIP_HW_5_DEBUG : 1;
		unsigned int                  VIP_HW_4_DEBUG : 1;
		unsigned int                  VIP_HW_3_DEBUG : 1;
		unsigned int                  VIP_HW_2_DEBUG : 1;
		unsigned int                  VIP_HW_1_DEBUG : 1;
		unsigned int                  VIP_HW_0_DEBUG : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEDIA_0_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 MEDIA_0_SCRATCH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 MEDIA_0_SCRATCH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MEDIA_1_SCRATCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  MEDIA_1_SCRACH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                  MEDIA_1_SCRACH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VID_BUFFER_CONTROL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int          CAP0_BUFFER_WATER_MARK : 6;
		unsigned int                                 : 10;
		unsigned int                  FULL_BUFFER_EN : 1;
		unsigned int           CAP0_ANC_VBI_QUAD_BUF : 1;
		unsigned int                                 : 2;
		unsigned int                VID_BUFFER_RESET : 1;
		unsigned int                        CAP_SWAP : 2;
		unsigned int                                 : 1;
		unsigned int               CAP0_BUFFER_EMPTY : 1;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int               CAP0_BUFFER_EMPTY : 1;
		unsigned int                                 : 1;
		unsigned int                        CAP_SWAP : 2;
		unsigned int                VID_BUFFER_RESET : 1;
		unsigned int                                 : 2;
		unsigned int           CAP0_ANC_VBI_QUAD_BUF : 1;
		unsigned int                  FULL_BUFFER_EN : 1;
		unsigned int                                 : 10;
		unsigned int          CAP0_BUFFER_WATER_MARK : 6;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP_INT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CAP0_BUF0_INT_EN : 1;
		unsigned int           CAP0_BUF0_EVEN_INT_EN : 1;
		unsigned int                CAP0_BUF1_INT_EN : 1;
		unsigned int           CAP0_BUF1_EVEN_INT_EN : 1;
		unsigned int                CAP0_VBI0_INT_EN : 1;
		unsigned int                CAP0_VBI1_INT_EN : 1;
		unsigned int             CAP0_ONESHOT_INT_EN : 1;
		unsigned int                CAP0_ANC0_INT_EN : 1;
		unsigned int                CAP0_ANC1_INT_EN : 1;
		unsigned int                CAP0_VBI2_INT_EN : 1;
		unsigned int                CAP0_VBI3_INT_EN : 1;
		unsigned int                CAP0_ANC2_INT_EN : 1;
		unsigned int                CAP0_ANC3_INT_EN : 1;
		unsigned int                                 : 19;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 19;
		unsigned int                CAP0_ANC3_INT_EN : 1;
		unsigned int                CAP0_ANC2_INT_EN : 1;
		unsigned int                CAP0_VBI3_INT_EN : 1;
		unsigned int                CAP0_VBI2_INT_EN : 1;
		unsigned int                CAP0_ANC1_INT_EN : 1;
		unsigned int                CAP0_ANC0_INT_EN : 1;
		unsigned int             CAP0_ONESHOT_INT_EN : 1;
		unsigned int                CAP0_VBI1_INT_EN : 1;
		unsigned int                CAP0_VBI0_INT_EN : 1;
		unsigned int           CAP0_BUF1_EVEN_INT_EN : 1;
		unsigned int                CAP0_BUF1_INT_EN : 1;
		unsigned int           CAP0_BUF0_EVEN_INT_EN : 1;
		unsigned int                CAP0_BUF0_INT_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP_INT_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CAP0_BUF0_INT : 1;
		unsigned int              CAP0_BUF0_EVEN_INT : 1;
		unsigned int                   CAP0_BUF1_INT : 1;
		unsigned int              CAP0_BUF1_EVEN_INT : 1;
		unsigned int                   CAP0_VBI0_INT : 1;
		unsigned int                   CAP0_VBI1_INT : 1;
		unsigned int                CAP0_ONESHOT_INT : 1;
		unsigned int                   CAP0_ANC0_INT : 1;
		unsigned int                   CAP0_ANC1_INT : 1;
		unsigned int                   CAP0_VBI2_INT : 1;
		unsigned int                   CAP0_VBI3_INT : 1;
		unsigned int                   CAP0_ANC2_INT : 1;
		unsigned int                   CAP0_ANC3_INT : 1;
		unsigned int                                 : 19;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 19;
		unsigned int                   CAP0_ANC3_INT : 1;
		unsigned int                   CAP0_ANC2_INT : 1;
		unsigned int                   CAP0_VBI3_INT : 1;
		unsigned int                   CAP0_VBI2_INT : 1;
		unsigned int                   CAP0_ANC1_INT : 1;
		unsigned int                   CAP0_ANC0_INT : 1;
		unsigned int                CAP0_ONESHOT_INT : 1;
		unsigned int                   CAP0_VBI1_INT : 1;
		unsigned int                   CAP0_VBI0_INT : 1;
		unsigned int              CAP0_BUF1_EVEN_INT : 1;
		unsigned int                   CAP0_BUF1_INT : 1;
		unsigned int              CAP0_BUF0_EVEN_INT : 1;
		unsigned int                   CAP0_BUF0_INT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union FCP_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    FCP0_SRC_SEL : 3;
		unsigned int                                 : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 29;
		unsigned int                    FCP0_SRC_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF0_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_BUF0_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_BUF0_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF1_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_BUF1_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_BUF1_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF0_EVEN_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CAP_BUF0_EVEN_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int            CAP_BUF0_EVEN_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF1_EVEN_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int            CAP_BUF1_EVEN_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int            CAP_BUF1_EVEN_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF_PITCH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CAP_BUF_PITCH : 12;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                   CAP_BUF_PITCH : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_V_WINDOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CAP_V_START : 12;
		unsigned int                                 : 4;
		unsigned int                       CAP_V_END : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                       CAP_V_END : 12;
		unsigned int                                 : 4;
		unsigned int                     CAP_V_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_H_WINDOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     CAP_H_START : 12;
		unsigned int                                 : 4;
		unsigned int                     CAP_H_WIDTH : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                     CAP_H_WIDTH : 12;
		unsigned int                                 : 4;
		unsigned int                     CAP_H_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI0_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI0_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_VBI0_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI1_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI1_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_VBI1_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI_V_WINDOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI_V_START : 12;
		unsigned int                                 : 4;
		unsigned int                   CAP_VBI_V_END : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                   CAP_VBI_V_END : 12;
		unsigned int                                 : 4;
		unsigned int                 CAP_VBI_V_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI_H_WINDOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI_H_START : 12;
		unsigned int                                 : 4;
		unsigned int                 CAP_VBI_H_WIDTH : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                 CAP_VBI_H_WIDTH : 12;
		unsigned int                                 : 4;
		unsigned int                 CAP_VBI_H_START : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_PORT_MODE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                  CAP_PORT_WIDTH : 1;
		unsigned int              CAP_PORT_BYTE_USED : 1;
		unsigned int                                 : 29;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 29;
		unsigned int              CAP_PORT_BYTE_USED : 1;
		unsigned int                  CAP_PORT_WIDTH : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_TRIG_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CAP_TRIGGER_R : 2;
		unsigned int                                 : 2;
		unsigned int                          CAP_EN : 1;
		unsigned int                                 : 3;
		unsigned int                   CAP_VSYNC_CNT : 8;
		unsigned int                   CAP_VSYNC_CLR : 1;
		unsigned int                                 : 15;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 15;
		unsigned int                   CAP_VSYNC_CLR : 1;
		unsigned int                   CAP_VSYNC_CNT : 8;
		unsigned int                                 : 3;
		unsigned int                          CAP_EN : 1;
		unsigned int                                 : 2;
		unsigned int                   CAP_TRIGGER_R : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_DEBUG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CAP_H_STATUS : 12;
		unsigned int                                 : 4;
		unsigned int                    CAP_V_STATUS : 12;
		unsigned int                      CAP_V_SYNC : 1;
		unsigned int         CAP_BUF_OVERFLOW_STATUS : 1;
		unsigned int            CAP_BUF_OVERFLOW_CLR : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int            CAP_BUF_OVERFLOW_CLR : 1;
		unsigned int         CAP_BUF_OVERFLOW_STATUS : 1;
		unsigned int                      CAP_V_SYNC : 1;
		unsigned int                    CAP_V_STATUS : 12;
		unsigned int                                 : 4;
		unsigned int                    CAP_H_STATUS : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_CONFIG {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  CAP_INPUT_MODE : 1;
		unsigned int                 CAP_START_FIELD : 1;
		unsigned int                 CAP_START_BUF_R : 1;
		unsigned int                 CAP_START_BUF_W : 1;
		unsigned int                    CAP_BUF_TYPE : 2;
		unsigned int                CAP_ONESHOT_MODE : 1;
		unsigned int                    CAP_BUF_MODE : 2;
		unsigned int                   CAP_MIRROR_EN : 1;
		unsigned int           CAP_ONESHOT_MIRROR_EN : 1;
		unsigned int             CAP_VIDEO_SIGNED_UV : 1;
		unsigned int               CAP_ANC_DECODE_EN : 1;
		unsigned int                      CAP_VBI_EN : 1;
		unsigned int           CAP_SOFT_PULL_DOWN_EN : 1;
		unsigned int          CAP_VIP_EXTEND_FLAG_EN : 1;
		unsigned int               CAP_FAKE_FIELD_EN : 1;
		unsigned int       CAP_FIELD_START_LINE_DIFF : 2;
		unsigned int                   CAP_HORZ_DOWN : 2;
		unsigned int                   CAP_VERT_DOWN : 2;
		unsigned int               CAP_STREAM_FORMAT : 3;
		unsigned int                   CAP_HDWNS_DEC : 1;
		unsigned int               CAP_IMAGE_FLIP_EN : 1;
		unsigned int       CAP_ONESHOT_IMAGE_FLIP_EN : 1;
		unsigned int             CAP_VIDEO_IN_FORMAT : 1;
		unsigned int                   VBI_HORZ_DOWN : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VBI_HORZ_DOWN : 2;
		unsigned int             CAP_VIDEO_IN_FORMAT : 1;
		unsigned int       CAP_ONESHOT_IMAGE_FLIP_EN : 1;
		unsigned int               CAP_IMAGE_FLIP_EN : 1;
		unsigned int                   CAP_HDWNS_DEC : 1;
		unsigned int               CAP_STREAM_FORMAT : 3;
		unsigned int                   CAP_VERT_DOWN : 2;
		unsigned int                   CAP_HORZ_DOWN : 2;
		unsigned int       CAP_FIELD_START_LINE_DIFF : 2;
		unsigned int               CAP_FAKE_FIELD_EN : 1;
		unsigned int          CAP_VIP_EXTEND_FLAG_EN : 1;
		unsigned int           CAP_SOFT_PULL_DOWN_EN : 1;
		unsigned int                      CAP_VBI_EN : 1;
		unsigned int               CAP_ANC_DECODE_EN : 1;
		unsigned int             CAP_VIDEO_SIGNED_UV : 1;
		unsigned int           CAP_ONESHOT_MIRROR_EN : 1;
		unsigned int                   CAP_MIRROR_EN : 1;
		unsigned int                    CAP_BUF_MODE : 2;
		unsigned int                CAP_ONESHOT_MODE : 1;
		unsigned int                    CAP_BUF_TYPE : 2;
		unsigned int                 CAP_START_BUF_W : 1;
		unsigned int                 CAP_START_BUF_R : 1;
		unsigned int                 CAP_START_FIELD : 1;
		unsigned int                  CAP_INPUT_MODE : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC0_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_ANC0_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_ANC0_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC1_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_ANC1_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_ANC1_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC_H_WINDOW {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   CAP_ANC_WIDTH : 12;
		unsigned int                                 : 20;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 20;
		unsigned int                   CAP_ANC_WIDTH : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VIDEO_SYNC_TEST {
	struct {
#if		defined(qLittleEndian)
		unsigned int                CAP_TEST_VID_SOF : 1;
		unsigned int                CAP_TEST_VID_EOF : 1;
		unsigned int                CAP_TEST_VID_EOL : 1;
		unsigned int              CAP_TEST_VID_FIELD : 1;
		unsigned int                                 : 1;
		unsigned int                CAP_TEST_SYNC_EN : 1;
		unsigned int                                 : 26;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 26;
		unsigned int                CAP_TEST_SYNC_EN : 1;
		unsigned int                                 : 1;
		unsigned int              CAP_TEST_VID_FIELD : 1;
		unsigned int                CAP_TEST_VID_EOL : 1;
		unsigned int                CAP_TEST_VID_EOF : 1;
		unsigned int                CAP_TEST_VID_SOF : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ONESHOT_BUF_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int          CAP_ONESHOT_BUF_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int          CAP_ONESHOT_BUF_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_BUF_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_PRE_VID_BUF : 2;
		unsigned int                 CAP_CUR_VID_BUF : 2;
		unsigned int                   CAP_PRE_FIELD : 1;
		unsigned int                   CAP_CUR_FIELD : 1;
		unsigned int                 CAP_PRE_VBI_BUF : 2;
		unsigned int                 CAP_CUR_VBI_BUF : 2;
		unsigned int              CAP_VBI_BUF_STATUS : 1;
		unsigned int                 CAP_PRE_ANC_BUF : 2;
		unsigned int                 CAP_CUR_ANC_BUF : 2;
		unsigned int              CAP_ANC_BUF_STATUS : 1;
		unsigned int             CAP_ANC_PRE_BUF_CNT : 12;
		unsigned int                     CAP_VIP_INC : 1;
		unsigned int        CAP_VIP_PRE_REPEAT_FIELD : 1;
		unsigned int              CAP_CAP_BUF_STATUS : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int              CAP_CAP_BUF_STATUS : 1;
		unsigned int        CAP_VIP_PRE_REPEAT_FIELD : 1;
		unsigned int                     CAP_VIP_INC : 1;
		unsigned int             CAP_ANC_PRE_BUF_CNT : 12;
		unsigned int              CAP_ANC_BUF_STATUS : 1;
		unsigned int                 CAP_CUR_ANC_BUF : 2;
		unsigned int                 CAP_PRE_ANC_BUF : 2;
		unsigned int              CAP_VBI_BUF_STATUS : 1;
		unsigned int                 CAP_CUR_VBI_BUF : 2;
		unsigned int                 CAP_PRE_VBI_BUF : 2;
		unsigned int                   CAP_CUR_FIELD : 1;
		unsigned int                   CAP_PRE_FIELD : 1;
		unsigned int                 CAP_CUR_VID_BUF : 2;
		unsigned int                 CAP_PRE_VID_BUF : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC_BUF01_BLOCK_CNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int         CAP0_ANC_BUF0_BLOCK_CNT : 12;
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF1_BLOCK_CNT : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF1_BLOCK_CNT : 12;
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF0_BLOCK_CNT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC_BUF23_BLOCK_CNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int         CAP0_ANC_BUF2_BLOCK_CNT : 12;
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF3_BLOCK_CNT : 12;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF3_BLOCK_CNT : 12;
		unsigned int                                 : 4;
		unsigned int         CAP0_ANC_BUF2_BLOCK_CNT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI2_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI2_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_VBI2_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_VBI3_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_VBI3_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_VBI3_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC2_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_ANC2_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_ANC2_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CAP0_ANC3_OFFSET {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 CAP_ANC3_OFFSET : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                 CAP_ANC3_OFFSET : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH0_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 3;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int              END_OF_LIST_STATUS : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              END_OF_LIST_STATUS : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                                 : 3;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH1_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 3;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int              END_OF_LIST_STATUS : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              END_OF_LIST_STATUS : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                                 : 3;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH2_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 3;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int              END_OF_LIST_STATUS : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              END_OF_LIST_STATUS : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                                 : 3;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH3_COMMAND {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      BYTE_COUNT : 21;
		unsigned int                                 : 3;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int              END_OF_LIST_STATUS : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int              END_OF_LIST_STATUS : 1;
		unsigned int                   INTERRUPT_DIS : 1;
		unsigned int                DEST_OFFSET_HOLD : 1;
		unsigned int              SOURCE_OFFSET_HOLD : 1;
		unsigned int                   TRANSFER_DEST : 1;
		unsigned int                 TRANSFER_SOURCE : 1;
		unsigned int                    SWAP_CONTROL : 2;
		unsigned int                                 : 3;
		unsigned int                      BYTE_COUNT : 21;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH_STATUS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 DMA_VIPH0_AVAIL : 4;
		unsigned int                 DMA_VIPH1_AVAIL : 4;
		unsigned int                 DMA_VIPH2_AVAIL : 4;
		unsigned int                 DMA_VIPH3_AVAIL : 4;
		unsigned int               DMA_VIPH0_CURRENT : 2;
		unsigned int               DMA_VIPH1_CURRENT : 2;
		unsigned int               DMA_VIPH2_CURRENT : 2;
		unsigned int               DMA_VIPH3_CURRENT : 2;
		unsigned int                DMA_VIPH0_ACTIVE : 1;
		unsigned int                DMA_VIPH1_ACTIVE : 1;
		unsigned int                DMA_VIPH2_ACTIVE : 1;
		unsigned int                DMA_VIPH3_ACTIVE : 1;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                DMA_VIPH3_ACTIVE : 1;
		unsigned int                DMA_VIPH2_ACTIVE : 1;
		unsigned int                DMA_VIPH1_ACTIVE : 1;
		unsigned int                DMA_VIPH0_ACTIVE : 1;
		unsigned int               DMA_VIPH3_CURRENT : 2;
		unsigned int               DMA_VIPH2_CURRENT : 2;
		unsigned int               DMA_VIPH1_CURRENT : 2;
		unsigned int               DMA_VIPH0_CURRENT : 2;
		unsigned int                 DMA_VIPH3_AVAIL : 4;
		unsigned int                 DMA_VIPH2_AVAIL : 4;
		unsigned int                 DMA_VIPH1_AVAIL : 4;
		unsigned int                 DMA_VIPH0_AVAIL : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH_CHUNK_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int            DMA_VIPH3_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH2_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH1_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH0_TABLE_SWAP : 2;
		unsigned int                                 : 20;
		unsigned int               DMA_VIPH3_NOCHUNK : 1;
		unsigned int               DMA_VIPH2_NOCHUNK : 1;
		unsigned int               DMA_VIPH1_NOCHUNK : 1;
		unsigned int               DMA_VIPH0_NOCHUNK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int               DMA_VIPH0_NOCHUNK : 1;
		unsigned int               DMA_VIPH1_NOCHUNK : 1;
		unsigned int               DMA_VIPH2_NOCHUNK : 1;
		unsigned int               DMA_VIPH3_NOCHUNK : 1;
		unsigned int                                 : 20;
		unsigned int            DMA_VIPH0_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH1_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH2_TABLE_SWAP : 2;
		unsigned int            DMA_VIPH3_TABLE_SWAP : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH_CHUNK_1_VAL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  DMA_VIP0_CHUNK : 8;
		unsigned int                  DMA_VIP1_CHUNK : 8;
		unsigned int                  DMA_VIP2_CHUNK : 8;
		unsigned int                  DMA_VIP3_CHUNK : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                  DMA_VIP3_CHUNK : 8;
		unsigned int                  DMA_VIP2_CHUNK : 8;
		unsigned int                  DMA_VIP1_CHUNK : 8;
		unsigned int                  DMA_VIP0_CHUNK : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIP0_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIP1_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIP2_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIP3_TABLE_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int             DMA_VIPH_TABLE_ADDR : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH0_ACTIVE {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH1_ACTIVE {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH2_ACTIVE {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH3_ACTIVE {
	struct {
#if		defined(qLittleEndian)
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int         DMA_VIPH_TABLE_ADDR_ACT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union DMA_VIPH_ABORT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH0_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH1_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH2_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH3_ABORT_EN : 1;
		unsigned int                                 : 4;
		unsigned int                 DMA_VIPH0_RESET : 1;
		unsigned int                 DMA_VIPH1_RESET : 1;
		unsigned int                 DMA_VIPH2_RESET : 1;
		unsigned int                 DMA_VIPH3_RESET : 1;
		unsigned int                                 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 8;
		unsigned int                 DMA_VIPH3_RESET : 1;
		unsigned int                 DMA_VIPH2_RESET : 1;
		unsigned int                 DMA_VIPH1_RESET : 1;
		unsigned int                 DMA_VIPH0_RESET : 1;
		unsigned int                                 : 4;
		unsigned int              DMA_VIPH3_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH2_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH1_ABORT_EN : 1;
		unsigned int                                 : 3;
		unsigned int              DMA_VIPH0_ABORT_EN : 1;
		unsigned int                                 : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_REG_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_REG_AD : 16;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int                     VIPH_REG_AD : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_REG_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_REG_DT_R : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                   VIPH_REG_DT_R : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH0_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH0_DT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIPH_CH0_DT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH1_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH1_DT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIPH_CH1_DT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH2_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH2_DT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIPH_CH2_DT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH3_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH3_DT : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                     VIPH_CH3_DT : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH0_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH0_AD : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     VIPH_CH0_AD : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH1_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH1_AD : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     VIPH_CH1_AD : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH2_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH2_AD : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     VIPH_CH2_AD : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH3_ADDR {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     VIPH_CH3_AD : 8;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                     VIPH_CH3_AD : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH0_SBCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH0_SCNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH0_SCNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH1_SBCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH1_SCNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH1_SCNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH2_SBCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH2_SCNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH2_SCNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH3_SBCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH3_SCNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH3_SCNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH0_ABCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH0_ACNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH0_ACNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH1_ABCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH1_ACNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH1_ACNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH2_ABCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH2_ACNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH2_ACNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CH3_ABCNT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   VIPH_CH3_ACNT : 20;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                   VIPH_CH3_ACNT : 20;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_CONTROL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    VIPH_CLK_SEL : 8;
		unsigned int                                 : 5;
		unsigned int                    VIPH_REG_RDY : 1;
		unsigned int                                 : 2;
		unsigned int                   VIPH_MAX_WAIT : 4;
		unsigned int                   VIPH_DMA_MODE : 1;
		unsigned int                         VIPH_EN : 1;
		unsigned int                                 : 2;
		unsigned int                    VIPH_DV0_WID : 1;
		unsigned int                    VIPH_DV1_WID : 1;
		unsigned int                    VIPH_DV2_WID : 1;
		unsigned int                    VIPH_DV3_WID : 1;
		unsigned int                   VIPH_PWR_DOWN : 1;
		unsigned int                 VIPH_VIPCLK_DIS : 1;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int                 VIPH_VIPCLK_DIS : 1;
		unsigned int                   VIPH_PWR_DOWN : 1;
		unsigned int                    VIPH_DV3_WID : 1;
		unsigned int                    VIPH_DV2_WID : 1;
		unsigned int                    VIPH_DV1_WID : 1;
		unsigned int                    VIPH_DV0_WID : 1;
		unsigned int                                 : 2;
		unsigned int                         VIPH_EN : 1;
		unsigned int                   VIPH_DMA_MODE : 1;
		unsigned int                   VIPH_MAX_WAIT : 4;
		unsigned int                                 : 2;
		unsigned int                    VIPH_REG_RDY : 1;
		unsigned int                                 : 5;
		unsigned int                    VIPH_CLK_SEL : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_DV_LAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VIPH_TIME_UNIT : 12;
		unsigned int                                 : 4;
		unsigned int                    VIPH_DV0_LAT : 4;
		unsigned int                    VIPH_DV1_LAT : 4;
		unsigned int                    VIPH_DV2_LAT : 4;
		unsigned int                    VIPH_DV3_LAT : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                    VIPH_DV3_LAT : 4;
		unsigned int                    VIPH_DV2_LAT : 4;
		unsigned int                    VIPH_DV1_LAT : 4;
		unsigned int                    VIPH_DV0_LAT : 4;
		unsigned int                                 : 4;
		unsigned int                  VIPH_TIME_UNIT : 12;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_DMA_CHUNK {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  VIPH_CH0_CHUNK : 4;
		unsigned int                  VIPH_CH1_CHUNK : 2;
		unsigned int                  VIPH_CH2_CHUNK : 2;
		unsigned int                  VIPH_CH3_CHUNK : 2;
		unsigned int                                 : 6;
		unsigned int                  VIPH_CH0_ABORT : 1;
		unsigned int                  VIPH_CH1_ABORT : 1;
		unsigned int                  VIPH_CH2_ABORT : 1;
		unsigned int                  VIPH_CH3_ABORT : 1;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int                  VIPH_CH3_ABORT : 1;
		unsigned int                  VIPH_CH2_ABORT : 1;
		unsigned int                  VIPH_CH1_ABORT : 1;
		unsigned int                  VIPH_CH0_ABORT : 1;
		unsigned int                                 : 6;
		unsigned int                  VIPH_CH3_CHUNK : 2;
		unsigned int                  VIPH_CH2_CHUNK : 2;
		unsigned int                  VIPH_CH1_CHUNK : 2;
		unsigned int                  VIPH_CH0_CHUNK : 4;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_DV_INT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 VIPH_DV0_INT_EN : 1;
		unsigned int                 VIPH_DV1_INT_EN : 1;
		unsigned int                 VIPH_DV2_INT_EN : 1;
		unsigned int                 VIPH_DV3_INT_EN : 1;
		unsigned int                    VIPH_DV0_INT : 1;
		unsigned int                    VIPH_DV1_INT : 1;
		unsigned int                    VIPH_DV2_INT : 1;
		unsigned int                    VIPH_DV3_INT : 1;
		unsigned int                                 : 24;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 24;
		unsigned int                    VIPH_DV3_INT : 1;
		unsigned int                    VIPH_DV2_INT : 1;
		unsigned int                    VIPH_DV1_INT : 1;
		unsigned int                    VIPH_DV0_INT : 1;
		unsigned int                 VIPH_DV3_INT_EN : 1;
		unsigned int                 VIPH_DV2_INT_EN : 1;
		unsigned int                 VIPH_DV1_INT_EN : 1;
		unsigned int                 VIPH_DV0_INT_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union VIPH_TIMEOUT_STAT {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 VIPH_FIFO0_STAT : 1;
		unsigned int                 VIPH_FIFO1_STAT : 1;
		unsigned int                 VIPH_FIFO2_STAT : 1;
		unsigned int                 VIPH_FIFO3_STAT : 1;
		unsigned int                   VIPH_REG_STAT : 1;
		unsigned int              VIPH_AUTO_INT_STAT : 1;
		unsigned int                                 : 2;
		unsigned int                 VIPH_FIFO0_MASK : 1;
		unsigned int                 VIPH_FIFO1_MASK : 1;
		unsigned int                 VIPH_FIFO2_MASK : 1;
		unsigned int                 VIPH_FIFO3_MASK : 1;
		unsigned int                   VIPH_REG_MASK : 1;
		unsigned int              VIPH_AUTO_INT_MASK : 1;
		unsigned int                                 : 2;
		unsigned int               VIPH_DV0_INT_MASK : 1;
		unsigned int               VIPH_DV1_INT_MASK : 1;
		unsigned int               VIPH_DV2_INT_MASK : 1;
		unsigned int               VIPH_DV3_INT_MASK : 1;
		unsigned int                  VIPH_INTPIN_EN : 1;
		unsigned int                 VIPH_INTPIN_INT : 1;
		unsigned int                                 : 2;
		unsigned int                   VIPH_REGR_DIS : 1;
		unsigned int                                 : 7;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 7;
		unsigned int                   VIPH_REGR_DIS : 1;
		unsigned int                                 : 2;
		unsigned int                 VIPH_INTPIN_INT : 1;
		unsigned int                  VIPH_INTPIN_EN : 1;
		unsigned int               VIPH_DV3_INT_MASK : 1;
		unsigned int               VIPH_DV2_INT_MASK : 1;
		unsigned int               VIPH_DV1_INT_MASK : 1;
		unsigned int               VIPH_DV0_INT_MASK : 1;
		unsigned int                                 : 2;
		unsigned int              VIPH_AUTO_INT_MASK : 1;
		unsigned int                   VIPH_REG_MASK : 1;
		unsigned int                 VIPH_FIFO3_MASK : 1;
		unsigned int                 VIPH_FIFO2_MASK : 1;
		unsigned int                 VIPH_FIFO1_MASK : 1;
		unsigned int                 VIPH_FIFO0_MASK : 1;
		unsigned int                                 : 2;
		unsigned int              VIPH_AUTO_INT_STAT : 1;
		unsigned int                   VIPH_REG_STAT : 1;
		unsigned int                 VIPH_FIFO3_STAT : 1;
		unsigned int                 VIPH_FIFO2_STAT : 1;
		unsigned int                 VIPH_FIFO1_STAT : 1;
		unsigned int                 VIPH_FIFO0_STAT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLK_PIN_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                          OSC_EN : 1;
		unsigned int                                 : 1;
		unsigned int                    XTL_LOW_GAIN : 1;
		unsigned int                                 : 1;
		unsigned int                 DONT_USE_XTALIN : 1;
		unsigned int               SLOW_CLOCK_SOURCE : 1;
		unsigned int                                 : 5;
		unsigned int                CG_CLK_TO_OUTPIN : 1;
		unsigned int           CG_COUNT_UP_TO_OUTPIN : 1;
		unsigned int          ACCESS_REGS_IN_SUSPEND : 1;
		unsigned int                        CG_SPARE : 1;
		unsigned int             SCLK_DYN_START_CNTL : 1;
		unsigned int                  CP_CLK_RUNNING : 1;
		unsigned int                     CG_SPARE_RD : 2;
		unsigned int               XTALIN_ALWAYS_ONb : 1;
		unsigned int                                 : 4;
		unsigned int                    PWRSEQ_DELAY : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                    PWRSEQ_DELAY : 8;
		unsigned int                                 : 4;
		unsigned int               XTALIN_ALWAYS_ONb : 1;
		unsigned int                     CG_SPARE_RD : 2;
		unsigned int                  CP_CLK_RUNNING : 1;
		unsigned int             SCLK_DYN_START_CNTL : 1;
		unsigned int                        CG_SPARE : 1;
		unsigned int          ACCESS_REGS_IN_SUSPEND : 1;
		unsigned int           CG_COUNT_UP_TO_OUTPIN : 1;
		unsigned int                CG_CLK_TO_OUTPIN : 1;
		unsigned int                                 : 5;
		unsigned int               SLOW_CLOCK_SOURCE : 1;
		unsigned int                 DONT_USE_XTALIN : 1;
		unsigned int                                 : 1;
		unsigned int                    XTL_LOW_GAIN : 1;
		unsigned int                                 : 1;
		unsigned int                          OSC_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      PPLL_RESET : 1;
		unsigned int                      PPLL_SLEEP : 1;
		unsigned int                     PPLL_TST_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 PPLL_REFCLK_SEL : 1;
		unsigned int                  PPLL_FBCLK_SEL : 1;
		unsigned int                     PPLL_TCPOFF : 1;
		unsigned int                    PPLL_TVCOMAX : 1;
		unsigned int                        PPLL_PCP : 3;
		unsigned int                        PPLL_PVG : 3;
		unsigned int                        PPLL_PDC : 2;
		unsigned int           PPLL_ATOMIC_UPDATE_EN : 1;
		unsigned int       PPLL_VGA_ATOMIC_UPDATE_EN : 1;
		unsigned int         PPLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int         PPLL_DISABLE_AUTO_RESET : 1;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int         PPLL_DISABLE_AUTO_RESET : 1;
		unsigned int         PPLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int       PPLL_VGA_ATOMIC_UPDATE_EN : 1;
		unsigned int           PPLL_ATOMIC_UPDATE_EN : 1;
		unsigned int                        PPLL_PDC : 2;
		unsigned int                        PPLL_PVG : 3;
		unsigned int                        PPLL_PCP : 3;
		unsigned int                    PPLL_TVCOMAX : 1;
		unsigned int                     PPLL_TCPOFF : 1;
		unsigned int                  PPLL_FBCLK_SEL : 1;
		unsigned int                 PPLL_REFCLK_SEL : 1;
		unsigned int                                 : 1;
		unsigned int                     PPLL_TST_EN : 1;
		unsigned int                      PPLL_SLEEP : 1;
		unsigned int                      PPLL_RESET : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PPLL_REF_DIV {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    PPLL_REF_DIV : 10;
		unsigned int                                 : 5;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                PPLL_REF_DIV_SRC : 2;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int                PPLL_REF_DIV_SRC : 2;
		unsigned int            PPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 5;
		unsigned int                    PPLL_REF_DIV : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SPLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SPLL_SLEEP : 1;
		unsigned int                      SPLL_RESET : 1;
		unsigned int                     SPLL_TST_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 SPLL_REFCLK_SEL : 1;
		unsigned int                  SPLL_FBCLK_SEL : 1;
		unsigned int                     SPLL_TCPOFF : 1;
		unsigned int                    SPLL_TVCOMAX : 1;
		unsigned int                        SPLL_PCP : 3;
		unsigned int                        SPLL_PVG : 3;
		unsigned int                        SPLL_PDC : 2;
		unsigned int                SPLL_X1_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                SPLL_X2_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                       SPLL_MODE : 4;
		unsigned int     MYCLK_SOURCED_FROM_SPLL_SEL : 2;
		unsigned int          ENABLE_MYCLK_FROM_SPLL : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int          ENABLE_MYCLK_FROM_SPLL : 1;
		unsigned int     MYCLK_SOURCED_FROM_SPLL_SEL : 2;
		unsigned int                       SPLL_MODE : 4;
		unsigned int                                 : 1;
		unsigned int                SPLL_X2_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                SPLL_X1_CLK_SKEW : 3;
		unsigned int                        SPLL_PDC : 2;
		unsigned int                        SPLL_PVG : 3;
		unsigned int                        SPLL_PCP : 3;
		unsigned int                    SPLL_TVCOMAX : 1;
		unsigned int                     SPLL_TCPOFF : 1;
		unsigned int                  SPLL_FBCLK_SEL : 1;
		unsigned int                 SPLL_REFCLK_SEL : 1;
		unsigned int                                 : 1;
		unsigned int                     SPLL_TST_EN : 1;
		unsigned int                      SPLL_RESET : 1;
		unsigned int                      SPLL_SLEEP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SPLL_AUX_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SPLL_PDC_C : 2;
		unsigned int                     SPLL_CKINVA : 1;
		unsigned int                     SPLL_CKINVC : 1;
		unsigned int                SPLL_X3_CLK_SKEW : 3;
		unsigned int                      SPLL_MODEC : 2;
		unsigned int                                 : 3;
		unsigned int             TRANSIT_DONE_LENGTH : 1;
		unsigned int                                 : 1;
		unsigned int             SPLL_REFCLK_SRC_SEL : 2;
		unsigned int                                 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 16;
		unsigned int             SPLL_REFCLK_SRC_SEL : 2;
		unsigned int                                 : 1;
		unsigned int             TRANSIT_DONE_LENGTH : 1;
		unsigned int                                 : 3;
		unsigned int                      SPLL_MODEC : 2;
		unsigned int                SPLL_X3_CLK_SKEW : 3;
		unsigned int                     SPLL_CKINVC : 1;
		unsigned int                     SPLL_CKINVA : 1;
		unsigned int                      SPLL_PDC_C : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCLK_CNTL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SCLK_SRC_SEL : 3;
		unsigned int             CP_MAX_DYN_STOP_LAT : 1;
		unsigned int            HDP_MAX_DYN_STOP_LAT : 1;
		unsigned int             TV_MAX_DYN_STOP_LAT : 1;
		unsigned int             E2_MAX_DYN_STOP_LAT : 1;
		unsigned int             SE_MAX_DYN_STOP_LAT : 1;
		unsigned int           IDCT_MAX_DYN_STOP_LAT : 1;
		unsigned int            VIP_MAX_DYN_STOP_LAT : 1;
		unsigned int             RE_MAX_DYN_STOP_LAT : 1;
		unsigned int             PB_MAX_DYN_STOP_LAT : 1;
		unsigned int            TAM_MAX_DYN_STOP_LAT : 1;
		unsigned int            TDM_MAX_DYN_STOP_LAT : 1;
		unsigned int             RB_MAX_DYN_STOP_LAT : 1;
		unsigned int                     FORCE_DISP2 : 1;
		unsigned int                        FORCE_CP : 1;
		unsigned int                       FORCE_HDP : 1;
		unsigned int                     FORCE_DISP1 : 1;
		unsigned int                       FORCE_TOP : 1;
		unsigned int                        FORCE_E2 : 1;
		unsigned int                        FORCE_SE : 1;
		unsigned int                      FORCE_IDCT : 1;
		unsigned int                       FORCE_VIP : 1;
		unsigned int                        FORCE_RE : 1;
		unsigned int                        FORCE_PB : 1;
		unsigned int                       FORCE_TAM : 1;
		unsigned int                       FORCE_TDM : 1;
		unsigned int                        FORCE_RB : 1;
		unsigned int                   FORCE_TV_SCLK : 1;
		unsigned int                    FORCE_SUBPIC : 1;
		unsigned int                       FORCE_OV0 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                       FORCE_OV0 : 1;
		unsigned int                    FORCE_SUBPIC : 1;
		unsigned int                   FORCE_TV_SCLK : 1;
		unsigned int                        FORCE_RB : 1;
		unsigned int                       FORCE_TDM : 1;
		unsigned int                       FORCE_TAM : 1;
		unsigned int                        FORCE_PB : 1;
		unsigned int                        FORCE_RE : 1;
		unsigned int                       FORCE_VIP : 1;
		unsigned int                      FORCE_IDCT : 1;
		unsigned int                        FORCE_SE : 1;
		unsigned int                        FORCE_E2 : 1;
		unsigned int                       FORCE_TOP : 1;
		unsigned int                     FORCE_DISP1 : 1;
		unsigned int                       FORCE_HDP : 1;
		unsigned int                        FORCE_CP : 1;
		unsigned int                     FORCE_DISP2 : 1;
		unsigned int             RB_MAX_DYN_STOP_LAT : 1;
		unsigned int            TDM_MAX_DYN_STOP_LAT : 1;
		unsigned int            TAM_MAX_DYN_STOP_LAT : 1;
		unsigned int             PB_MAX_DYN_STOP_LAT : 1;
		unsigned int             RE_MAX_DYN_STOP_LAT : 1;
		unsigned int            VIP_MAX_DYN_STOP_LAT : 1;
		unsigned int           IDCT_MAX_DYN_STOP_LAT : 1;
		unsigned int             SE_MAX_DYN_STOP_LAT : 1;
		unsigned int             E2_MAX_DYN_STOP_LAT : 1;
		unsigned int             TV_MAX_DYN_STOP_LAT : 1;
		unsigned int            HDP_MAX_DYN_STOP_LAT : 1;
		unsigned int             CP_MAX_DYN_STOP_LAT : 1;
		unsigned int                    SCLK_SRC_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union AGP_PLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      APLL_SLEEP : 1;
		unsigned int                      APLL_RESET : 1;
		unsigned int                       APLL_XSEL : 2;
		unsigned int                     APLL_TST_EN : 1;
		unsigned int                     APLL_TCPOFF : 1;
		unsigned int                    APLL_TVCOMAX : 1;
		unsigned int                   APLL_REF_SKEW : 3;
		unsigned int                    APLL_FB_SKEW : 3;
		unsigned int                APLL_X0_CLK_SKEW : 3;
		unsigned int                APLL_X1_CLK_SKEW : 3;
		unsigned int                                 : 6;
		unsigned int                  APLL_PUMP_GAIN : 3;
		unsigned int                   APLL_VCO_GAIN : 3;
		unsigned int          APLL_SEL_SKWADJ_PCICLK : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int          APLL_SEL_SKWADJ_PCICLK : 1;
		unsigned int                   APLL_VCO_GAIN : 3;
		unsigned int                  APLL_PUMP_GAIN : 3;
		unsigned int                                 : 6;
		unsigned int                APLL_X1_CLK_SKEW : 3;
		unsigned int                APLL_X0_CLK_SKEW : 3;
		unsigned int                    APLL_FB_SKEW : 3;
		unsigned int                   APLL_REF_SKEW : 3;
		unsigned int                    APLL_TVCOMAX : 1;
		unsigned int                     APLL_TCPOFF : 1;
		unsigned int                     APLL_TST_EN : 1;
		unsigned int                       APLL_XSEL : 2;
		unsigned int                      APLL_RESET : 1;
		unsigned int                      APLL_SLEEP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_PLL_FINE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                           TV_M1 : 11;
		unsigned int                           TV_N1 : 11;
		unsigned int                  TV_DIVIDER_SEL : 1;
		unsigned int                   TV_MNFLIP_REQ : 1;
		unsigned int                  TV_MNFLIP_DONE : 1;
		unsigned int                     TV_SLIP_REQ : 1;
		unsigned int                    TV_SLIP_DONE : 1;
		unsigned int                    TV_MNFLIP_EN : 1;
		unsigned int                   TV_SLIP_COUNT : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                   TV_SLIP_COUNT : 4;
		unsigned int                    TV_MNFLIP_EN : 1;
		unsigned int                    TV_SLIP_DONE : 1;
		unsigned int                     TV_SLIP_REQ : 1;
		unsigned int                  TV_MNFLIP_DONE : 1;
		unsigned int                   TV_MNFLIP_REQ : 1;
		unsigned int                  TV_DIVIDER_SEL : 1;
		unsigned int                           TV_N1 : 11;
		unsigned int                           TV_M1 : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_PLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                        TV_M0_LO : 8;
		unsigned int                        TV_N0_LO : 9;
		unsigned int                                 : 1;
		unsigned int                        TV_M0_HI : 3;
		unsigned int                        TV_N0_HI : 2;
		unsigned int                      TV_SLIP_EN : 1;
		unsigned int                            TV_P : 4;
		unsigned int                       TV_DTO_EN : 1;
		unsigned int                     TV_DTO_TYPE : 1;
		unsigned int                  TV_REF_CLK_SEL : 1;
		unsigned int                                 : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 1;
		unsigned int                  TV_REF_CLK_SEL : 1;
		unsigned int                     TV_DTO_TYPE : 1;
		unsigned int                       TV_DTO_EN : 1;
		unsigned int                            TV_P : 4;
		unsigned int                      TV_SLIP_EN : 1;
		unsigned int                        TV_N0_HI : 2;
		unsigned int                        TV_M0_HI : 3;
		unsigned int                                 : 1;
		unsigned int                        TV_N0_LO : 9;
		unsigned int                        TV_M0_LO : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_PLL_CNTL1 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                                 : 1;
		unsigned int                     TVPLL_RESET : 1;
		unsigned int                                 : 1;
		unsigned int                     TVPLL_SLEEP : 1;
		unsigned int                TVPLL_REFCLK_SEL : 1;
		unsigned int                 TVPLL_FBCLK_SEL : 1;
		unsigned int                    TVPLL_TCPOFF : 1;
		unsigned int                   TVPLL_TVCOMAX : 1;
		unsigned int                           TVPCP : 3;
		unsigned int                           TVPVG : 3;
		unsigned int                           TVPDC : 2;
		unsigned int                                 : 14;
		unsigned int                   TVCLK_SRC_SEL : 1;
		unsigned int                      TVPLL_TEST : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                      TVPLL_TEST : 1;
		unsigned int                   TVCLK_SRC_SEL : 1;
		unsigned int                                 : 14;
		unsigned int                           TVPDC : 2;
		unsigned int                           TVPVG : 3;
		unsigned int                           TVPCP : 3;
		unsigned int                   TVPLL_TVCOMAX : 1;
		unsigned int                    TVPLL_TCPOFF : 1;
		unsigned int                 TVPLL_FBCLK_SEL : 1;
		unsigned int                TVPLL_REFCLK_SEL : 1;
		unsigned int                     TVPLL_SLEEP : 1;
		unsigned int                                 : 1;
		unsigned int                     TVPLL_RESET : 1;
		unsigned int                                 : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union TV_DTO_INCREMENTS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     TV_DTO_INC0 : 16;
		unsigned int                     TV_DTO_INC1 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                     TV_DTO_INC1 : 16;
		unsigned int                     TV_DTO_INC0 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union P2PLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     P2PLL_RESET : 1;
		unsigned int                     P2PLL_SLEEP : 1;
		unsigned int                    P2PLL_TST_EN : 1;
		unsigned int                                 : 1;
		unsigned int                P2PLL_REFCLK_SEL : 1;
		unsigned int                 P2PLL_FBCLK_SEL : 1;
		unsigned int                    P2PLL_TCPOFF : 1;
		unsigned int                   P2PLL_TVCOMAX : 1;
		unsigned int                       P2PLL_PCP : 3;
		unsigned int                       P2PLL_PVG : 3;
		unsigned int                       P2PLL_PDC : 2;
		unsigned int          P2PLL_ATOMIC_UPDATE_EN : 1;
		unsigned int                                 : 1;
		unsigned int        P2PLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int        P2PLL_DISABLE_AUTO_RESET : 1;
		unsigned int                                 : 12;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 12;
		unsigned int        P2PLL_DISABLE_AUTO_RESET : 1;
		unsigned int        P2PLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int                                 : 1;
		unsigned int          P2PLL_ATOMIC_UPDATE_EN : 1;
		unsigned int                       P2PLL_PDC : 2;
		unsigned int                       P2PLL_PVG : 3;
		unsigned int                       P2PLL_PCP : 3;
		unsigned int                   P2PLL_TVCOMAX : 1;
		unsigned int                    P2PLL_TCPOFF : 1;
		unsigned int                 P2PLL_FBCLK_SEL : 1;
		unsigned int                P2PLL_REFCLK_SEL : 1;
		unsigned int                                 : 1;
		unsigned int                    P2PLL_TST_EN : 1;
		unsigned int                     P2PLL_SLEEP : 1;
		unsigned int                     P2PLL_RESET : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union P2PLL_REF_DIV {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   P2PLL_REF_DIV : 10;
		unsigned int                                 : 5;
		unsigned int           P2PLL_ATOMIC_UPDATE_W : 1;
		unsigned int               P2PLL_REF_DIV_SRC : 2;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int               P2PLL_REF_DIV_SRC : 2;
		unsigned int           P2PLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 5;
		unsigned int                   P2PLL_REF_DIV : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SSPLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     SSPLL_RESET : 1;
		unsigned int                     SSPLL_SLEEP : 1;
		unsigned int                    SSPLL_TST_EN : 1;
		unsigned int                                 : 1;
		unsigned int                SSPLL_REFCLK_SEL : 1;
		unsigned int                 SSPLL_FBCLK_SEL : 1;
		unsigned int                    SSPLL_TCPOFF : 1;
		unsigned int                   SSPLL_TVCOMAX : 1;
		unsigned int                       SSPLL_PCP : 3;
		unsigned int                       SSPLL_PVG : 3;
		unsigned int                       SSPLL_PDC : 2;
		unsigned int          SSPLL_ATOMIC_UPDATE_EN : 1;
		unsigned int                                 : 1;
		unsigned int        SSPLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int                                 : 13;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 13;
		unsigned int        SSPLL_ATOMIC_UPDATE_SYNC : 1;
		unsigned int                                 : 1;
		unsigned int          SSPLL_ATOMIC_UPDATE_EN : 1;
		unsigned int                       SSPLL_PDC : 2;
		unsigned int                       SSPLL_PVG : 3;
		unsigned int                       SSPLL_PCP : 3;
		unsigned int                   SSPLL_TVCOMAX : 1;
		unsigned int                    SSPLL_TCPOFF : 1;
		unsigned int                 SSPLL_FBCLK_SEL : 1;
		unsigned int                SSPLL_REFCLK_SEL : 1;
		unsigned int                                 : 1;
		unsigned int                    SSPLL_TST_EN : 1;
		unsigned int                     SSPLL_SLEEP : 1;
		unsigned int                     SSPLL_RESET : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SSPLL_REF_DIV {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   SSPLL_REF_DIV : 10;
		unsigned int                                 : 5;
		unsigned int           SSPLL_ATOMIC_UPDATE_W : 1;
		unsigned int               SSPLL_REF_DIV_SRC : 2;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int               SSPLL_REF_DIV_SRC : 2;
		unsigned int           SSPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                                 : 5;
		unsigned int                   SSPLL_REF_DIV : 10;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SSPLL_DIV_0 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    SSPLL_FB_DIV : 11;
		unsigned int                                 : 1;
		unsigned int           SSPLL_FB_DIV_FRACTION : 3;
		unsigned int           SSPLL_ATOMIC_UPDATE_W : 1;
		unsigned int                  SSPLL_POST_DIV : 3;
		unsigned int                                 : 9;
		unsigned int    SSPLL_FB_DIV_FRACTION_UPDATE : 1;
		unsigned int                                 : 3;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 3;
		unsigned int    SSPLL_FB_DIV_FRACTION_UPDATE : 1;
		unsigned int                                 : 9;
		unsigned int                  SSPLL_POST_DIV : 3;
		unsigned int           SSPLL_ATOMIC_UPDATE_W : 1;
		unsigned int           SSPLL_FB_DIV_FRACTION : 3;
		unsigned int                                 : 1;
		unsigned int                    SSPLL_FB_DIV : 11;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SS_INT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                       SS_INT_EN : 1;
		unsigned int                      SS_INT_SEL : 1;
		unsigned int                    SS_STEP_SIZE : 2;
		unsigned int                        SS_DELAY : 3;
		unsigned int                                 : 1;
		unsigned int               SS_DELTA_FRACTION : 3;
		unsigned int                                 : 1;
		unsigned int                SS_DELTA_INTEGER : 6;
		unsigned int              SS_PLL_DISPLAY_SRC : 1;
		unsigned int               SS_PLL_DISPLAY_EN : 1;
		unsigned int               SS_BUF_GENLOCK_EN : 1;
		unsigned int        SS_BUF_GENLOCK_THRESHOLD : 3;
		unsigned int         SS_BUF_GENLOCK_DURATION : 3;
		unsigned int           SS_BUF_GENLOCK_HEIGHT : 3;
		unsigned int                                 : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 2;
		unsigned int           SS_BUF_GENLOCK_HEIGHT : 3;
		unsigned int         SS_BUF_GENLOCK_DURATION : 3;
		unsigned int        SS_BUF_GENLOCK_THRESHOLD : 3;
		unsigned int               SS_BUF_GENLOCK_EN : 1;
		unsigned int               SS_PLL_DISPLAY_EN : 1;
		unsigned int              SS_PLL_DISPLAY_SRC : 1;
		unsigned int                SS_DELTA_INTEGER : 6;
		unsigned int                                 : 1;
		unsigned int               SS_DELTA_FRACTION : 3;
		unsigned int                                 : 1;
		unsigned int                        SS_DELAY : 3;
		unsigned int                    SS_STEP_SIZE : 2;
		unsigned int                      SS_INT_SEL : 1;
		unsigned int                       SS_INT_EN : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SS_TST_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      SS_TST_CNT : 14;
		unsigned int                                 : 2;
		unsigned int                  SS_TST_CNT_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                       SS_TST_GE : 1;
		unsigned int                       SS_TST_LE : 1;
		unsigned int                      SS_TST_DEC : 1;
		unsigned int                   ANALOG_MON_SS : 1;
		unsigned int           EXP_IMPLEMENTATION_EN : 1;
		unsigned int                SS_ANTIGLITCH_EN : 1;
		unsigned int              HDP_BUSY_HALF_SCLK : 1;
		unsigned int               EN_DIV2_HALF_SCLK : 1;
		unsigned int                                 : 3;
		unsigned int                     SS_TST_MODE : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                     SS_TST_MODE : 1;
		unsigned int                                 : 3;
		unsigned int               EN_DIV2_HALF_SCLK : 1;
		unsigned int              HDP_BUSY_HALF_SCLK : 1;
		unsigned int                SS_ANTIGLITCH_EN : 1;
		unsigned int           EXP_IMPLEMENTATION_EN : 1;
		unsigned int                   ANALOG_MON_SS : 1;
		unsigned int                      SS_TST_DEC : 1;
		unsigned int                       SS_TST_LE : 1;
		unsigned int                       SS_TST_GE : 1;
		unsigned int                                 : 2;
		unsigned int                  SS_TST_CNT_SEL : 2;
		unsigned int                                 : 2;
		unsigned int                      SS_TST_CNT : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union SCLK_MORE_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int       DISPREGS_MAX_DYN_STOP_LAT : 1;
		unsigned int         MC_GUI_MAX_DYN_STOP_LAT : 1;
		unsigned int        MC_HOST_MAX_DYN_STOP_LAT : 1;
		unsigned int                                 : 5;
		unsigned int                  FORCE_DISPREGS : 1;
		unsigned int                    FORCE_MC_GUI : 1;
		unsigned int                   FORCE_MC_HOST : 1;
		unsigned int                                 : 1;
		unsigned int                    STOP_SCLK_EN : 1;
		unsigned int                     STOP_SCLK_A : 1;
		unsigned int                     STOP_SCLK_B : 1;
		unsigned int                     STOP_SCLK_C : 1;
		unsigned int                 HALF_SPEED_SCLK : 1;
		unsigned int              IO_CG_VOLTAGE_DROP : 1;
		unsigned int                 TVFB_SOFT_RESET : 1;
		unsigned int               VOLTAGE_DROP_SYNC : 1;
		unsigned int               VOLTAGE_DELAY_SEL : 2;
		unsigned int            IDLE_DELAY_HALF_SCLK : 1;
		unsigned int              AGP_BUSY_HALF_SCLK : 1;
		unsigned int                   CG_SPARE_RD_C : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                   CG_SPARE_RD_C : 8;
		unsigned int              AGP_BUSY_HALF_SCLK : 1;
		unsigned int            IDLE_DELAY_HALF_SCLK : 1;
		unsigned int               VOLTAGE_DELAY_SEL : 2;
		unsigned int               VOLTAGE_DROP_SYNC : 1;
		unsigned int                 TVFB_SOFT_RESET : 1;
		unsigned int              IO_CG_VOLTAGE_DROP : 1;
		unsigned int                 HALF_SPEED_SCLK : 1;
		unsigned int                     STOP_SCLK_C : 1;
		unsigned int                     STOP_SCLK_B : 1;
		unsigned int                     STOP_SCLK_A : 1;
		unsigned int                    STOP_SCLK_EN : 1;
		unsigned int                                 : 1;
		unsigned int                   FORCE_MC_HOST : 1;
		unsigned int                    FORCE_MC_GUI : 1;
		unsigned int                  FORCE_DISPREGS : 1;
		unsigned int                                 : 5;
		unsigned int        MC_HOST_MAX_DYN_STOP_LAT : 1;
		unsigned int         MC_GUI_MAX_DYN_STOP_LAT : 1;
		unsigned int       DISPREGS_MAX_DYN_STOP_LAT : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CLK_PWRMGT_CNTL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                 MPLL_PWRMGT_OFF : 1;
		unsigned int                 SPLL_PWRMGT_OFF : 1;
		unsigned int                 PPLL_PWRMGT_OFF : 1;
		unsigned int                P2PLL_PWRMGT_OFF : 1;
		unsigned int                    MCLK_TURNOFF : 1;
		unsigned int                    SCLK_TURNOFF : 1;
		unsigned int                    PCLK_TURNOFF : 1;
		unsigned int                   P2CLK_TURNOFF : 1;
		unsigned int                      MC_CH_MODE : 1;
		unsigned int                       TEST_MODE : 1;
		unsigned int                  GLOBAL_PMAN_EN : 1;
		unsigned int                                 : 1;
		unsigned int              ENGINE_DYNCLK_MODE : 1;
		unsigned int                 ACTIVE_HILO_LAT : 2;
		unsigned int               DISP_DYN_STOP_LAT : 1;
		unsigned int                         MC_BUSY : 1;
		unsigned int                     MC_INT_CNTL : 1;
		unsigned int                       MC_SWITCH : 1;
		unsigned int                       DLL_READY : 1;
		unsigned int                         DISP_PM : 1;
		unsigned int                   DYN_STOP_MODE : 3;
		unsigned int                    CG_NO1_DEBUG : 6;
		unsigned int                TVPLL_PWRMGT_OFF : 1;
		unsigned int                   TVCLK_TURNOFF : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                   TVCLK_TURNOFF : 1;
		unsigned int                TVPLL_PWRMGT_OFF : 1;
		unsigned int                    CG_NO1_DEBUG : 6;
		unsigned int                   DYN_STOP_MODE : 3;
		unsigned int                         DISP_PM : 1;
		unsigned int                       DLL_READY : 1;
		unsigned int                       MC_SWITCH : 1;
		unsigned int                     MC_INT_CNTL : 1;
		unsigned int                         MC_BUSY : 1;
		unsigned int               DISP_DYN_STOP_LAT : 1;
		unsigned int                 ACTIVE_HILO_LAT : 2;
		unsigned int              ENGINE_DYNCLK_MODE : 1;
		unsigned int                                 : 1;
		unsigned int                  GLOBAL_PMAN_EN : 1;
		unsigned int                       TEST_MODE : 1;
		unsigned int                      MC_CH_MODE : 1;
		unsigned int                   P2CLK_TURNOFF : 1;
		unsigned int                    PCLK_TURNOFF : 1;
		unsigned int                    SCLK_TURNOFF : 1;
		unsigned int                    MCLK_TURNOFF : 1;
		unsigned int                P2PLL_PWRMGT_OFF : 1;
		unsigned int                 PPLL_PWRMGT_OFF : 1;
		unsigned int                 SPLL_PWRMGT_OFF : 1;
		unsigned int                 MPLL_PWRMGT_OFF : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union PLL_PWRMGT_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    MPLL_TURNOFF : 1;
		unsigned int                    SPLL_TURNOFF : 1;
		unsigned int                    PPLL_TURNOFF : 1;
		unsigned int                   P2PLL_TURNOFF : 1;
		unsigned int                   TVPLL_TURNOFF : 1;
		unsigned int             AGPCLK_DYN_STOP_LAT : 4;
		unsigned int                 APM_POWER_STATE : 2;
		unsigned int                 APM_PWRSTATE_RD : 2;
		unsigned int                     PM_MODE_SEL : 1;
		unsigned int             EN_PWRSEQ_DONE_COND : 1;
		unsigned int             EN_DISP_PARKED_COND : 1;
		unsigned int                       MOBILE_SU : 1;
		unsigned int                SU_SCLK_USE_BCLK : 1;
		unsigned int                SU_MCLK_USE_BCLK : 1;
		unsigned int              SU_SUSTAIN_DISABLE : 1;
		unsigned int              TCL_BYPASS_DISABLE : 1;
		unsigned int             TCL_CLOCK_ACTIVE_RD : 1;
		unsigned int                                 : 2;
		unsigned int                    CG_NO2_DEBUG : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                    CG_NO2_DEBUG : 8;
		unsigned int                                 : 2;
		unsigned int             TCL_CLOCK_ACTIVE_RD : 1;
		unsigned int              TCL_BYPASS_DISABLE : 1;
		unsigned int              SU_SUSTAIN_DISABLE : 1;
		unsigned int                SU_MCLK_USE_BCLK : 1;
		unsigned int                SU_SCLK_USE_BCLK : 1;
		unsigned int                       MOBILE_SU : 1;
		unsigned int             EN_DISP_PARKED_COND : 1;
		unsigned int             EN_PWRSEQ_DONE_COND : 1;
		unsigned int                     PM_MODE_SEL : 1;
		unsigned int                 APM_PWRSTATE_RD : 2;
		unsigned int                 APM_POWER_STATE : 2;
		unsigned int             AGPCLK_DYN_STOP_LAT : 4;
		unsigned int                   TVPLL_TURNOFF : 1;
		unsigned int                   P2PLL_TURNOFF : 1;
		unsigned int                    PPLL_TURNOFF : 1;
		unsigned int                    SPLL_TURNOFF : 1;
		unsigned int                    MPLL_TURNOFF : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union M_SPLL_REF_FB_DIV {
	struct {
#if		defined(qLittleEndian)
		unsigned int                  M_SPLL_REF_DIV : 8;
		unsigned int                     MPLL_FB_DIV : 8;
		unsigned int                     SPLL_FB_DIV : 8;
		unsigned int                MPLL_REF_SRC_SEL : 2;
		unsigned int                                 : 6;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 6;
		unsigned int                MPLL_REF_SRC_SEL : 2;
		unsigned int                     SPLL_FB_DIV : 8;
		unsigned int                     MPLL_FB_DIV : 8;
		unsigned int                  M_SPLL_REF_DIV : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MPLL_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MPLL_RESET : 1;
		unsigned int                      MPLL_SLEEP : 1;
		unsigned int                     MPLL_TST_EN : 1;
		unsigned int                                 : 1;
		unsigned int                 MPLL_REFCLK_SEL : 1;
		unsigned int                  MPLL_FBCLK_SEL : 1;
		unsigned int                     MPLL_TCPOFF : 1;
		unsigned int                    MPLL_TVCOMAX : 1;
		unsigned int                        MPLL_PCP : 3;
		unsigned int                        MPLL_PVG : 3;
		unsigned int                        MPLL_PDC : 2;
		unsigned int                MPLL_X1_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                MPLL_X2_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                       MPLL_MODE : 4;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                       MPLL_MODE : 4;
		unsigned int                                 : 1;
		unsigned int                MPLL_X2_CLK_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                MPLL_X1_CLK_SKEW : 3;
		unsigned int                        MPLL_PDC : 2;
		unsigned int                        MPLL_PVG : 3;
		unsigned int                        MPLL_PCP : 3;
		unsigned int                    MPLL_TVCOMAX : 1;
		unsigned int                     MPLL_TCPOFF : 1;
		unsigned int                  MPLL_FBCLK_SEL : 1;
		unsigned int                 MPLL_REFCLK_SEL : 1;
		unsigned int                                 : 1;
		unsigned int                     MPLL_TST_EN : 1;
		unsigned int                      MPLL_SLEEP : 1;
		unsigned int                      MPLL_RESET : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MPLL_AUX_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                      MPLL_PDC_C : 2;
		unsigned int                     MPLL_CKINVA : 1;
		unsigned int                     MPLL_CKINVC : 1;
		unsigned int                MPLL_X3_CLK_SKEW : 3;
		unsigned int                      MPLL_MODEC : 2;
		unsigned int                                 : 15;
		unsigned int                 MPLL_TEST_COUNT : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                 MPLL_TEST_COUNT : 8;
		unsigned int                                 : 15;
		unsigned int                      MPLL_MODEC : 2;
		unsigned int                MPLL_X3_CLK_SKEW : 3;
		unsigned int                     MPLL_CKINVC : 1;
		unsigned int                     MPLL_CKINVA : 1;
		unsigned int                      MPLL_PDC_C : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MDLL_CKO {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     MCKOA_SLEEP : 1;
		unsigned int                     MCKOA_RESET : 1;
		unsigned int                     MCKOA_RANGE : 2;
		unsigned int                   ERSTA_SOUTSEL : 2;
		unsigned int                    MCKOA_FB_SEL : 2;
		unsigned int                  MCKOA_REF_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                   MCKOA_FB_SKEW : 3;
		unsigned int                    MCKOA_BP_SEL : 1;
		unsigned int                     MCKOB_SLEEP : 1;
		unsigned int                     MCKOB_RESET : 1;
		unsigned int                     MCKOB_RANGE : 2;
		unsigned int                   ERSTB_SOUTSEL : 2;
		unsigned int                    MCKOB_FB_SEL : 2;
		unsigned int                  MCKOB_REF_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                   MCKOB_FB_SKEW : 3;
		unsigned int                    MCKOB_BP_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                    MCKOB_BP_SEL : 1;
		unsigned int                   MCKOB_FB_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                  MCKOB_REF_SKEW : 3;
		unsigned int                    MCKOB_FB_SEL : 2;
		unsigned int                   ERSTB_SOUTSEL : 2;
		unsigned int                     MCKOB_RANGE : 2;
		unsigned int                     MCKOB_RESET : 1;
		unsigned int                     MCKOB_SLEEP : 1;
		unsigned int                    MCKOA_BP_SEL : 1;
		unsigned int                   MCKOA_FB_SKEW : 3;
		unsigned int                                 : 1;
		unsigned int                  MCKOA_REF_SKEW : 3;
		unsigned int                    MCKOA_FB_SEL : 2;
		unsigned int                   ERSTA_SOUTSEL : 2;
		unsigned int                     MCKOA_RANGE : 2;
		unsigned int                     MCKOA_RESET : 1;
		unsigned int                     MCKOA_SLEEP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MDLL_RDCKA {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MRDCKA0_SLEEP : 1;
		unsigned int                   MRDCKA0_RESET : 1;
		unsigned int                   MRDCKA0_RANGE : 2;
		unsigned int                 MRDCKA0_REF_SEL : 2;
		unsigned int                  MRDCKA0_FB_SEL : 2;
		unsigned int                MRDCKA0_REF_SKEW : 3;
		unsigned int                  MRDCKA0_SINSEL : 1;
		unsigned int                 MRDCKA0_FB_SKEW : 3;
		unsigned int                  MRDCKA0_BP_SEL : 1;
		unsigned int                   MRDCKA1_SLEEP : 1;
		unsigned int                   MRDCKA1_RESET : 1;
		unsigned int                   MRDCKA1_RANGE : 2;
		unsigned int                 MRDCKA1_REF_SEL : 2;
		unsigned int                  MRDCKA1_FB_SEL : 2;
		unsigned int                MRDCKA1_REF_SKEW : 3;
		unsigned int                  MRDCKA1_SINSEL : 1;
		unsigned int                 MRDCKA1_FB_SKEW : 3;
		unsigned int                  MRDCKA1_BP_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  MRDCKA1_BP_SEL : 1;
		unsigned int                 MRDCKA1_FB_SKEW : 3;
		unsigned int                  MRDCKA1_SINSEL : 1;
		unsigned int                MRDCKA1_REF_SKEW : 3;
		unsigned int                  MRDCKA1_FB_SEL : 2;
		unsigned int                 MRDCKA1_REF_SEL : 2;
		unsigned int                   MRDCKA1_RANGE : 2;
		unsigned int                   MRDCKA1_RESET : 1;
		unsigned int                   MRDCKA1_SLEEP : 1;
		unsigned int                  MRDCKA0_BP_SEL : 1;
		unsigned int                 MRDCKA0_FB_SKEW : 3;
		unsigned int                  MRDCKA0_SINSEL : 1;
		unsigned int                MRDCKA0_REF_SKEW : 3;
		unsigned int                  MRDCKA0_FB_SEL : 2;
		unsigned int                 MRDCKA0_REF_SEL : 2;
		unsigned int                   MRDCKA0_RANGE : 2;
		unsigned int                   MRDCKA0_RESET : 1;
		unsigned int                   MRDCKA0_SLEEP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MDLL_RDCKB {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MRDCKB0_SLEEP : 1;
		unsigned int                   MRDCKB0_RESET : 1;
		unsigned int                   MRDCKB0_RANGE : 2;
		unsigned int                 MRDCKB0_REF_SEL : 2;
		unsigned int                  MRDCKB0_FB_SEL : 2;
		unsigned int                MRDCKB0_REF_SKEW : 3;
		unsigned int                  MRDCKB0_SINSEL : 1;
		unsigned int                 MRDCKB0_FB_SKEW : 3;
		unsigned int                  MRDCKB0_BP_SEL : 1;
		unsigned int                   MRDCKB1_SLEEP : 1;
		unsigned int                   MRDCKB1_RESET : 1;
		unsigned int                   MRDCKB1_RANGE : 2;
		unsigned int                 MRDCKB1_REF_SEL : 2;
		unsigned int                  MRDCKB1_FB_SEL : 2;
		unsigned int                MRDCKB1_REF_SKEW : 3;
		unsigned int                  MRDCKB1_SINSEL : 1;
		unsigned int                 MRDCKB1_FB_SKEW : 3;
		unsigned int                  MRDCKB1_BP_SEL : 1;
#else		/* !defined(qLittleEndian) */
		unsigned int                  MRDCKB1_BP_SEL : 1;
		unsigned int                 MRDCKB1_FB_SKEW : 3;
		unsigned int                  MRDCKB1_SINSEL : 1;
		unsigned int                MRDCKB1_REF_SKEW : 3;
		unsigned int                  MRDCKB1_FB_SEL : 2;
		unsigned int                 MRDCKB1_REF_SEL : 2;
		unsigned int                   MRDCKB1_RANGE : 2;
		unsigned int                   MRDCKB1_RESET : 1;
		unsigned int                   MRDCKB1_SLEEP : 1;
		unsigned int                  MRDCKB0_BP_SEL : 1;
		unsigned int                 MRDCKB0_FB_SKEW : 3;
		unsigned int                  MRDCKB0_SINSEL : 1;
		unsigned int                MRDCKB0_REF_SKEW : 3;
		unsigned int                  MRDCKB0_FB_SEL : 2;
		unsigned int                 MRDCKB0_REF_SEL : 2;
		unsigned int                   MRDCKB0_RANGE : 2;
		unsigned int                   MRDCKB0_RESET : 1;
		unsigned int                   MRDCKB0_SLEEP : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MCLK_CNTL_M6 {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   MCLKA_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   YCLKA_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   MCLKB_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   YCLKB_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                     FORCE_MCLKA : 1;
		unsigned int                     FORCE_MCLKB : 1;
		unsigned int                     FORCE_YCLKA : 1;
		unsigned int                     FORCE_YCLKB : 1;
		unsigned int                        FORCE_MC : 1;
		unsigned int                       FORCE_AIC : 1;
		unsigned int                                 : 2;
		unsigned int                 MRDCKA0_SOUTSEL : 2;
		unsigned int                 MRDCKA1_SOUTSEL : 2;
		unsigned int                 MRDCKB0_SOUTSEL : 2;
		unsigned int                 MRDCKB1_SOUTSEL : 2;
#else		/* !defined(qLittleEndian) */
		unsigned int                 MRDCKB1_SOUTSEL : 2;
		unsigned int                 MRDCKB0_SOUTSEL : 2;
		unsigned int                 MRDCKA1_SOUTSEL : 2;
		unsigned int                 MRDCKA0_SOUTSEL : 2;
		unsigned int                                 : 2;
		unsigned int                       FORCE_AIC : 1;
		unsigned int                        FORCE_MC : 1;
		unsigned int                     FORCE_YCLKB : 1;
		unsigned int                     FORCE_YCLKA : 1;
		unsigned int                     FORCE_MCLKB : 1;
		unsigned int                     FORCE_MCLKA : 1;
		unsigned int                                 : 1;
		unsigned int                   YCLKB_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   MCLKB_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   YCLKA_SRC_SEL : 3;
		unsigned int                                 : 1;
		unsigned int                   MCLKA_SRC_SEL : 3;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union MCLK_MISC {
	struct {
#if		defined(qLittleEndian)
		unsigned int      SCLK_SOURCED_FROM_MPLL_SEL : 2;
		unsigned int          MCLK_FROM_SPLL_DIV_SEL : 1;
		unsigned int           ENABLE_SCLK_FROM_MPLL : 1;
		unsigned int      MPLL_MODEA_MODEC_HW_SEL_EN : 1;
		unsigned int                                 : 3;
		unsigned int                   DLL_READY_LAT : 1;
		unsigned int                                 : 3;
		unsigned int        MC_MCLK_MAX_DYN_STOP_LAT : 1;
		unsigned int        IO_MCLK_MAX_DYN_STOP_LAT : 1;
		unsigned int              MC_MCLK_DYN_ENABLE : 1;
		unsigned int              IO_MCLK_DYN_ENABLE : 1;
		unsigned int               CGM_CLK_TO_OUTPIN : 1;
		unsigned int                CLK_OR_COUNT_SEL : 1;
		unsigned int     EN_MCLK_TRISTATE_IN_SUSPEND : 1;
		unsigned int                                 : 1;
		unsigned int                    CGM_SPARE_RD : 2;
		unsigned int                  CGM_SPARE_A_RD : 2;
		unsigned int                TCLK_TO_YCLKB_EN : 1;
		unsigned int                     CGM_SPARE_A : 3;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int                     CGM_SPARE_A : 3;
		unsigned int                TCLK_TO_YCLKB_EN : 1;
		unsigned int                  CGM_SPARE_A_RD : 2;
		unsigned int                    CGM_SPARE_RD : 2;
		unsigned int                                 : 1;
		unsigned int     EN_MCLK_TRISTATE_IN_SUSPEND : 1;
		unsigned int                CLK_OR_COUNT_SEL : 1;
		unsigned int               CGM_CLK_TO_OUTPIN : 1;
		unsigned int              IO_MCLK_DYN_ENABLE : 1;
		unsigned int              MC_MCLK_DYN_ENABLE : 1;
		unsigned int        IO_MCLK_MAX_DYN_STOP_LAT : 1;
		unsigned int        MC_MCLK_MAX_DYN_STOP_LAT : 1;
		unsigned int                                 : 3;
		unsigned int                   DLL_READY_LAT : 1;
		unsigned int                                 : 3;
		unsigned int      MPLL_MODEA_MODEC_HW_SEL_EN : 1;
		unsigned int           ENABLE_SCLK_FROM_MPLL : 1;
		unsigned int          MCLK_FROM_SPLL_DIV_SEL : 1;
		unsigned int      SCLK_SOURCED_FROM_MPLL_SEL : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CG_TEST_MACRO_RW_WRITE {
	struct {
#if		defined(qLittleEndian)
		unsigned int            TEST_MACRO_RW_WRITE1 : 14;
		unsigned int            TEST_MACRO_RW_WRITE2 : 14;
		unsigned int                                 : 4;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 4;
		unsigned int            TEST_MACRO_RW_WRITE2 : 14;
		unsigned int            TEST_MACRO_RW_WRITE1 : 14;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CG_TEST_MACRO_RW_READ {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEST_MACRO_RW_READ1 : 16;
		unsigned int             TEST_MACRO_RW_READ2 : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int             TEST_MACRO_RW_READ2 : 16;
		unsigned int             TEST_MACRO_RW_READ1 : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CG_TEST_MACRO_RW_DATA {
	struct {
#if		defined(qLittleEndian)
		unsigned int              TEST_MACRO_RW_DATA : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int              TEST_MACRO_RW_DATA : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union CG_TEST_MACRO_RW_CNTL {
	struct {
#if		defined(qLittleEndian)
		unsigned int             TEST_MACRO_RW_START : 1;
		unsigned int                TEST_MACRO_RW_OP : 3;
		unsigned int              TEST_MACRO_RW_MODE : 2;
		unsigned int      TEST_MACRO_RW_MISMATCH_SEL : 9;
		unsigned int          TEST_MACRO_RW_MISMATCH : 1;
		unsigned int            TEST_MACRO_RW_ENABLE : 1;
		unsigned int   TEST_MACRO_RW_SCLK_NEG_ENABLE : 1;
		unsigned int                                 : 14;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 14;
		unsigned int   TEST_MACRO_RW_SCLK_NEG_ENABLE : 1;
		unsigned int            TEST_MACRO_RW_ENABLE : 1;
		unsigned int          TEST_MACRO_RW_MISMATCH : 1;
		unsigned int      TEST_MACRO_RW_MISMATCH_SEL : 9;
		unsigned int              TEST_MACRO_RW_MODE : 2;
		unsigned int                TEST_MACRO_RW_OP : 3;
		unsigned int             TEST_MACRO_RW_START : 1;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IDCT_RUNS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                     IDCT_RUNS_3 : 8;
		unsigned int                     IDCT_RUNS_2 : 8;
		unsigned int                     IDCT_RUNS_1 : 8;
		unsigned int                     IDCT_RUNS_0 : 8;
#else		/* !defined(qLittleEndian) */
		unsigned int                     IDCT_RUNS_0 : 8;
		unsigned int                     IDCT_RUNS_1 : 8;
		unsigned int                     IDCT_RUNS_2 : 8;
		unsigned int                     IDCT_RUNS_3 : 8;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IDCT_LEVELS {
	struct {
#if		defined(qLittleEndian)
		unsigned int                   IDCT_LEVEL_HI : 16;
		unsigned int                   IDCT_LEVEL_LO : 16;
#else		/* !defined(qLittleEndian) */
		unsigned int                   IDCT_LEVEL_LO : 16;
		unsigned int                   IDCT_LEVEL_HI : 16;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IDCT_CONTROL {
	struct {
#if		defined(qLittleEndian)
		unsigned int         IDCT_CTL_LUMA_RD_FORMAT : 2;
		unsigned int       IDCT_CTL_CHROMA_RD_FORMAT : 2;
		unsigned int           IDCT_CTL_SCAN_PATTERN : 1;
		unsigned int                  IDCT_CTL_INTRA : 1;
		unsigned int                  IDCT_CTL_FLUSH : 1;
		unsigned int               IDCT_CTL_PASSTHRU : 1;
		unsigned int               IDCT_CTL_SW_RESET : 1;
		unsigned int               IDCT_CTL_CONSTREQ : 1;
		unsigned int               IDCT_CTL_SCRAMBLE : 1;
		unsigned int                                 : 21;
#else		/* !defined(qLittleEndian) */
		unsigned int                                 : 21;
		unsigned int               IDCT_CTL_SCRAMBLE : 1;
		unsigned int               IDCT_CTL_CONSTREQ : 1;
		unsigned int               IDCT_CTL_SW_RESET : 1;
		unsigned int               IDCT_CTL_PASSTHRU : 1;
		unsigned int                  IDCT_CTL_FLUSH : 1;
		unsigned int                  IDCT_CTL_INTRA : 1;
		unsigned int           IDCT_CTL_SCAN_PATTERN : 1;
		unsigned int       IDCT_CTL_CHROMA_RD_FORMAT : 2;
		unsigned int         IDCT_CTL_LUMA_RD_FORMAT : 2;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IDCT_AUTH_CONTROL {
	struct {
#if		defined(qLittleEndian)
		unsigned int                    CONTROL_BITS : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                    CONTROL_BITS : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


	union IDCT_AUTH {
	struct {
#if		defined(qLittleEndian)
		unsigned int                            AUTH : 32;
#else		/* !defined(qLittleEndian) */
		unsigned int                            AUTH : 32;
#endif		/* defined(qLittleEndian) */
	} bitfields;
	unsigned int	u32All;
	signed int	i32All;
	float	f32All;
	};


#endif



