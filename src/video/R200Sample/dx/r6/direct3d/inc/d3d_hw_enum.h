

//    
//  Workfile: d3d_hw_enum.h
//
//  Description:
//
//  Trade secret of ATI Technologies, Inc.
//  Copyright 1999, 2000 ATI Technologies, Inc., (unpublished)
//
//  All rights reserved.
//  The year included in the foregoing notice is the year of creation of the work.
//
//

#ifndef _D3D_HW_ENUM_H_
#define _D3D_HW_ENUM_H_

// CHAPLIN_TODO: It would be nice to have this autogenerated!

// CHAPLIN_TODO: Even if this doesn't work out, the definitions
// CHAPLIN_TODO: should be grouped according to ASIC. May want to
// CHAPLIN_TODO: create separate files per ASIC.

/*****************************************************************************
 * PM4 Packets related defines are in common\ipt.h.                          *
 *****************************************************************************/

/************************   SE_VTX_FMT register **********************/
#define VF_CNTL_VTX_W0_PRESENT          0x00000001
#define VF_CNTL_VTX_FPCOLOR_PRESENT     0x00000002
#define VF_CNTL_VTX_FPALPHA_PRESENT     0x00000004
#define VF_CNTL_VTX_PKCOLOR_PRESENT     0x00000008
#define VF_CNTL_VTX_FPSPEC_PRESENT      0x00000010
#define VF_CNTL_VTX_FPFOG_PRESENT       0x00000020
#define VF_CNTL_VTX_PKSPEC_PRESENT      0x00000040
#define VF_CNTL_VTX_ST0_PRESENT         0x00000080
#define VF_CNTL_VTX_ST1_PRESENT         0x00000100
#define VF_CNTL_VTX_W1_PRESENT          0x00000200
#define VF_CNTL_VTX_ST2_PRESENT         0x00000400
#define VF_CNTL_VTX_W2_PRESENT          0x00000800
#define VF_CNTL_VTX_Z_PRESENT           0x80000000

/************************   SE_VF_CNTL register **********************/
typedef enum {
    VF_CNTL_VTX_FMT_MODE_EQU_RAGE4 = 0,
    VF_CNTL_VTX_FMT_MODE_RAGE5     = 1
} E_VF_CNTL_VTX_FMT_MODE, * PE_VF_CNTL_VTX_FMT_MODE;

typedef enum {
    VF_CNTL_EN_MAOS_EQU_RAGE4  = 0,
    VF_CNTL_EN_MAOS_RAGE5      = 1
} E_VF_CNTL_EN_MAOS, * PE_VF_CNTL_EN_MAOS;

typedef enum {
    VF_CNTL_PROG_STREAM_ENA  = 0x400,
    VF_CNTL_PROG_STREAM_DIS  = 0x000
} E_VF_CNTL_PROG_STREAM, * PE_VF_CNTL_PROG_STREAM;

typedef enum {
    VF_CNTL_INDEX_SIZE_16BIT = 0x00,
    VF_CNTL_INDEX_SIZE_32BIT = 0x800
} E_VF_CNTL_INDEX_SIZE, * PE_VF_CNTL_INDEX_SIZE;

typedef enum {
    VF_CNTL_FLOAT_COLOR_ORDER_BGR  = 0,
    VF_CNTL_FLOAT_COLOR_ORDER_RGB  = 1
} E_VF_CNTL_FLOAT_COLOR_ORDER, * PE_VF_CNTL_FLOAT_COLOR_ORDER;

typedef enum {
    VF_CNTL_PRIM_WALK_RESERVED    = 0x00,
    VF_CNTL_PRIM_WALK_VERTEX_INDEXES     = 0x10,
    VF_CNTL_PRIM_WALK_VERTEX_LIST  = 0x20,   // Vertex data to be fetched from memory
    VF_CNTL_PRIM_WALK_VERTEX_DATA  = 0x30    // Vertex Data embeded in command stream
} E_VF_CNTL_PRIM_WALK, * PE_VF_CNTL_PRIM_WALK;

typedef enum {
    VF_CNTL_PRIM_TYPE_NONE               = 0,
    VF_CNTL_PRIM_TYPE_POINT_LIST         = 1,
    VF_CNTL_PRIM_TYPE_LINE_LIST          = 2,   
    VF_CNTL_PRIM_TYPE_LINE_STRIP         = 3,  
    VF_CNTL_PRIM_TYPE_TRIANGLE_LIST      = 4,  
    VF_CNTL_PRIM_TYPE_TRIANGLE_FAN       = 5,  
    VF_CNTL_PRIM_TYPE_TRIANGLE_STRIP     = 6,  
    VF_CNTL_PRIM_TYPE_TRIANGLE_WITH_W    = 7,  
    VF_CNTL_PRIM_TYPE_RECTANGLE_LIST     = 8,  
    VF_CNTL_PRIM_TYPE_3VERTEX_POINT_LIST = 9,  
    VF_CNTL_PRIM_TYPE_3VERTEX_LINE_LIST  = 10,  
    VF_CNTL_PRIM_TYPE_POINT_SPRITE_LIST  = 11,   
    VF_CNTL_PRIM_TYPE_LINE_LOOP          = 12,   
    VF_CNTL_PRIM_TYPE_QUAD_LIST          = 13,   
    VF_CNTL_PRIM_TYPE_QUAD_STRIP         = 14,    
    VF_CNTL_PRIM_TYPE_POLYGON            = 15    
} E_VF_CNTL_PRIM_TYPE, * PE_VF_CNTL_PRIM_TYPE;

#define D3D_VF_CNTL_COMMON 0x00000000
         
//
// Define enumerals for depth formats.
//
typedef enum {
    ZSTENCILCNTL_DEPTH_FORMAT_16_FIXED  = 0,
    ZSTENCILCNTL_DEPTH_FORMAT_24_FIXED  = 2,
    ZSTENCILCNTL_DEPTH_FORMAT_24_FLOAT  = 3,
    ZSTENCILCNTL_DEPTH_FORMAT_32_FIXED  = 4,
    ZSTENCILCNTL_DEPTH_FORMAT_32_FLOAT  = 5,
    ZSTENCILCNTL_DEPTH_FORMAT_16_WFLOAT = 7,
    ZSTENCILCNTL_DEPTH_FORMAT_24_WFLOAT = 9,
    ZSTENCILCNTL_DEPTH_FORMAT_32_WFLOAT = 11,
} E_ZSTENCILCNTL_DEPTH_FORMAT;

//
// Define enumerals for Z functions
//
typedef enum {
	ZSTENCILCNTL_ZFUNC_NEVER = 0,
	ZSTENCILCNTL_ZFUNC_LT    = 1,
	ZSTENCILCNTL_ZFUNC_LE    = 2,
	ZSTENCILCNTL_ZFUNC_EQ    = 3,
	ZSTENCILCNTL_ZFUNC_GE    = 4,
	ZSTENCILCNTL_ZFUNC_GT    = 5,
	ZSTENCILCNTL_ZFUNC_NE    = 6,
	ZSTENCILCNTL_ZFUNC_ALWAYS= 7
} E_ZSTENCILCNTL_ZFUNCTION;

// Define enumerals for StencilFail
typedef enum {
    ZSTENCILCNTL_STENCIL_OP_KEEP      = 0,
    ZSTENCILCNTL_STENCIL_OP_ZERO      = 1,
    ZSTENCILCNTL_STENCIL_OP_REPLACE   = 2,
    ZSTENCILCNTL_STENCIL_OP_INCREMENT = 3,
    ZSTENCILCNTL_STENCIL_OP_DECREMENT = 4,
    ZSTENCILCNTL_STENCIL_OP_INVERT    = 5
} E_ZSTENCILCNTL_STENCIL_OP;

typedef enum {
    TXFILTER_NEAREST                 = 0,
    TXFILTER_LINEAR                  = 1,
    TXFILTER_NEARESTMIP_NEAREST      = 2,
    TXFILTER_NEARESTMIP_LINEAR       = 3,
    TXFILTER_LINEARMIP_NEAREST       = 6,
    TXFILTER_LINEARMIP_LINEAR        = 7,
    TXFILTER_ANIS_NEAREST            = 8,
    TXFILTER_ANIS_LINEAR             = 9,
    TXFILTER_ANIS_NEARESTMIP_NEAREST = 10,
    TXFILTER_ANIS_NEARESTMIP_LINEAR  = 11
} E_TXFILTER_MINFILTER;

typedef enum {
    TXFILTER_MAX_ANIS_1_TO_1  = 0,
    TXFILTER_MAX_ANIS_2_TO_1  = 1,
    TXFILTER_MAX_ANIS_4_TO_1  = 2,
    TXFILTER_MAX_ANIS_8_TO_1  = 3,
    TXFILTER_MAX_ANIS_16_TO_1 = 4,
} E_TXFILTER_MAXANISOTROPY;


// These are mainly used by supersample.c. Do we really need these defines?
#define DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__16BPP_1555   (3 << DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__SHIFT)
#define DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__16BPP_565    (4 << DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__SHIFT)
#define DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__32BPP_8888   (6 << DP_GUI_MASTER_CNTL__GMC_DST_DATATYPE__SHIFT)

#define PP_TXOFFSET_0__MICRO_TILE__X2                      (1 << PP_TXOFFSET_0__MICRO_TILE__SHIFT)
#define PP_TXFILTER_0__MAG_FILTER__NEAREST                 (0 << PP_TXFILTER_0__MAG_FILTER__SHIFT)
#define PP_TXFILTER_0__MAG_FILTER__LINEAR                  (1 << PP_TXFILTER_0__MAG_FILTER__SHIFT)

#define PP_TXFILTER_0__MIN_FILTER__NEAREST                          (0 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__LINEAR                           (1 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__NEAREST_MIP_NEAREST              (2 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__NEAREST_MIP_LINEAR               (3 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__LINEAR_MIP_NEAREST               (6 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__LINEAR_MIP_LINEAR                (7 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__ANISOTROPY_NEAREST               (8 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__ANISOTROPY_LINEAR                (9 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__ANISOTROPY_NEAREST_MIP_NEAREST   (10 << PP_TXFILTER_0__MIN_FILTER__SHIFT)
#define PP_TXFILTER_0__MIN_FILTER__ANISOTROPY_NEAREST_MIP_LINEAR    (11 << PP_TXFILTER_0__MIN_FILTER__SHIFT)

#define SE_CNTL__FFACE_CULL_DIR__CW                        (0 << SE_CNTL__FFACE_CULL_DIR__SHIFT)
#define SE_CNTL__FFACE_CULL_DIR__CCW                       (1 << SE_CNTL__FFACE_CULL_DIR__SHIFT)

#define SE_CNTL__BFACE_CULL_FCN__DONT_DRAW                 (0 << SE_CNTL__BFACE_CULL_FCN__SHIFT)
#define SE_CNTL__BFACE_CULL_FCN__DRAW                      (3 << SE_CNTL__BFACE_CULL_FCN__SHIFT)

#define SE_CNTL__FFACE_CULL_FCN__DONT_DRAW                 (0 << SE_CNTL__FFACE_CULL_FCN__SHIFT)
#define SE_CNTL__FFACE_CULL_FCN__DRAW                      (3 << SE_CNTL__FFACE_CULL_FCN__SHIFT)

#define SE_CNTL__VTX_PIXCENTER__AT_ZERO                    (0 << SE_CNTL__VTX_PIXCENTER__SHIFT)
#define SE_CNTL__VTX_PIXCENTER__AT_POINT_5                 (1 << SE_CNTL__VTX_PIXCENTER__SHIFT)

#define SE_CNTL__ROUND_MODE__TRUNCATE                      (0 << SE_CNTL__ROUND_MODE__SHIFT)
#define SE_CNTL__ROUND_MODE__ROUND                         (1 << SE_CNTL__ROUND_MODE__SHIFT)
#define SE_CNTL__ROUND_MODE__ROUND_TO_EVEN                 (2 << SE_CNTL__ROUND_MODE__SHIFT)
#define SE_CNTL__ROUND_MODE__ROUND_TO_ODD                  (3 << SE_CNTL__ROUND_MODE__SHIFT)

#define PP_TXFILTER_0__WRAPEN_S__DISABLE                   (0 << PP_TXFILTER_0__WRAPEN_S__SHIFT)
#define PP_TXFILTER_0__WRAPEN_S__ENABLE                    (1 << PP_TXFILTER_0__WRAPEN_S__SHIFT)

#define PP_TXFILTER_0__CLAMP_S__WRAP                       (0 << PP_TXFILTER_0__CLAMP_S__SHIFT)
#define PP_TXFILTER_0__CLAMP_S__MIRROR                     (1 << PP_TXFILTER_0__CLAMP_S__SHIFT)
#define PP_TXFILTER_0__CLAMP_S__CLAMP_LAST                 (2 << PP_TXFILTER_0__CLAMP_S__SHIFT)
#define PP_TXFILTER_0__CLAMP_S__CLAMP_BORDER               (3 << PP_TXFILTER_0__CLAMP_S__SHIFT)

#define PP_MISC__CHROMA_FUNC__CULL_ALL_PIXELS              (0 << PP_MISC__CHROMA_FUNC__SHIFT)
#define PP_MISC__CHROMA_FUNC__CULL_NO_PIXELS               (1 << PP_MISC__CHROMA_FUNC__SHIFT)
#define PP_MISC__CHROMA_FUNC__CULL_IF_NOT_EQUAL            (2 << PP_MISC__CHROMA_FUNC__SHIFT)
#define PP_MISC__CHROMA_FUNC__CULL_IF_EQUAL                (3 << PP_MISC__CHROMA_FUNC__SHIFT)

// Define enumerations for color blender arguments
typedef enum {
    PP_TXCBLEND_COLOR_ARG_ZERO              = 0x0,
    PP_TXCBLEND_COLOR_ARG_RESERVED          = 0x1,
    PP_TXCBLEND_COLOR_ARG_CURRENT_COLOR     = 0x2,
    PP_TXCBLEND_COLOR_ARG_CURRENT_ALPHA     = 0x3,
    PP_TXCBLEND_COLOR_ARG_DIFFUSE_COLOR     = 0x4,
    PP_TXCBLEND_COLOR_ARG_DIFFUSE_ALPHA     = 0x5,
    PP_TXCBLEND_COLOR_ARG_SPECULAR_COLOR    = 0x6,
    PP_TXCBLEND_COLOR_ARG_SPECULAR_ALPHA    = 0x7,
    PP_TXCBLEND_COLOR_ARG_TFACTOR_COLOR     = 0x8,
    PP_TXCBLEND_COLOR_ARG_TFACTOR_ALPHA     = 0x9
} E_PP_TXCBLEND_ARGS;

// Define enumerations for alpha blender arguments
typedef enum {
    PP_TXABLEND_ALPHA_ARG_ZERO              = 0x0,
    PP_TXABLEND_ALPHA_ARG_CURRENT_ALPHA     = 0x1,
    PP_TXABLEND_ALPHA_ARG_DIFFUSE_ALPHA     = 0x2,
    PP_TXABLEND_ALPHA_ARG_SPECULAR_ALPHA    = 0x3,
    PP_TXABLEND_ALPHA_ARG_TFACTOR_ALPHA     = 0x4
} E_PP_TXABLEND_ARGS;

#define PP_TXCBLEND_0__COLOR_ARG_C__ZERO                   (0 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__CURRENT_COLOR          (2 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__CURRENT_ALPHA          (3 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__DIFFUSE_COLOR          (4 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__DIFFUSE_ALPHA          (5 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__SPECULAR_COLOR         (6 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__SPECULAR_ALPHA         (7 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__TFACTOR_COLOR          (8 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__TFACTOR_ALPHA          (9 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T0_COLOR               (10 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T0_ALPHA               (11 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T1_COLOR               (12 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T1_ALPHA               (13 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T2_COLOR               (14 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_C__T2_ALPHA               (15 << PP_TXCBLEND_0__COLOR_ARG_C__SHIFT)

#define PP_TXCBLEND_0__COLOR_ARG_A__ZERO                   (0 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__CURRENT_COLOR          (2 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__CURRENT_ALPHA          (3 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__DIFFUSE_COLOR          (4 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__DIFFUSE_ALPHA          (5 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__SPECULAR_COLOR         (6 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__SPECULAR_ALPHA         (7 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__TFACTOR_COLOR          (8 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__TFACTOR_ALPHA          (9 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T0_COLOR               (10 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T0_ALPHA               (11 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T1_COLOR               (12 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T1_ALPHA               (13 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T2_COLOR               (14 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)
#define PP_TXCBLEND_0__COLOR_ARG_A__T2_ALPHA               (15 << PP_TXCBLEND_0__COLOR_ARG_A__SHIFT)

#define PP_TXOFFSET_0__MICRO_TILE__LINEAR                  (0 << PP_TXOFFSET_0__MICRO_TILE__SHIFT)
#define PP_TXOFFSET_0__MICRO_TILE__X2                      (1 << PP_TXOFFSET_0__MICRO_TILE__SHIFT)
#define PP_TXOFFSET_0__MICRO_TILE__OPTIMIZED               (2 << PP_TXOFFSET_0__MICRO_TILE__SHIFT)

#define SE_CNTL__ROUND_PRECISION__ONE_SIXTEENTH            (0 << SE_CNTL__ROUND_PRECISION__SHIFT)
#define SE_CNTL__ROUND_PRECISION__ONE_EIGHTH               (1 << SE_CNTL__ROUND_PRECISION__SHIFT)
#define SE_CNTL__ROUND_PRECISION__ONE_FOURTH               (2 << SE_CNTL__ROUND_PRECISION__SHIFT)
#define SE_CNTL__ROUND_PRECISION__ONE_HALF                 (3 << SE_CNTL__ROUND_PRECISION__SHIFT)

#define PP_TXFILTER_0__WRAPEN_T__DISABLE                   (0 << PP_TXFILTER_0__WRAPEN_T__SHIFT)
#define PP_TXFILTER_0__WRAPEN_T__ENABLE                    (1 << PP_TXFILTER_0__WRAPEN_T__SHIFT)

#define PP_TXFILTER_0__CLAMP_T__WRAP                       (0 << PP_TXFILTER_0__CLAMP_T__SHIFT)
#define PP_TXFILTER_0__CLAMP_T__MIRROR                     (1 << PP_TXFILTER_0__CLAMP_T__SHIFT)
#define PP_TXFILTER_0__CLAMP_T__CLAMP_LAST                 (2 << PP_TXFILTER_0__CLAMP_T__SHIFT)
#define PP_TXFILTER_0__CLAMP_T__CLAMP_BORDER               (3 << PP_TXFILTER_0__CLAMP_T__SHIFT)

#define PP_TXFILTER_0__BORDER_MODE__OPENGL                 (0 << PP_TXFILTER_0__BORDER_MODE__SHIFT)
#define PP_TXFILTER_0__BORDER_MODE__D3D                    (1 << PP_TXFILTER_0__BORDER_MODE__SHIFT)

#define PP_TXCBLEND_0__COLOR_ARG_B__ZERO                   (0 << PP_TXCBLEND_0__COLOR_ARG_B__SHIFT)
#define PP_TXCBLEND_0__BLEND_CTL__ADD                      (0 << PP_TXCBLEND_0__BLEND_CTL__SHIFT)
#define PP_TXCBLEND_0__BLEND_CTL__SUBTRACT                 (1 << PP_TXCBLEND_0__BLEND_CTL__SHIFT)

#define PP_MISC__CHROMA_KEY_MODE__NEAREST                  (0 << PP_MISC__CHROMA_KEY_MODE__SHIFT)

#define PP_TXFORMAT_0__TXFORMAT__16BPP_ARGB_4444           (5 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__32BPP_ARGB                (6 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__16BPP_ARGB_1555           (3 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__16BPP_ARGB_4444           (5 << PP_TXFORMAT_0__TXFORMAT__SHIFT)

#define PP_TXFORMAT_0__TXFORMAT__CCC_DXT1                  (12 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__CCC_DXT2                  (14 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__CCC_DXT3                  (14 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__CCC_DXT4                  (15 << PP_TXFORMAT_0__TXFORMAT__SHIFT)
#define PP_TXFORMAT_0__TXFORMAT__CCC_DXT5                  (15 << PP_TXFORMAT_0__TXFORMAT__SHIFT)


/////////////////////////////////////////////////////////////////////////////
// Chaplin-specific enumerations
/////////////////////////////////////////////////////////////////////////////

// E_COLOR_FMT
//   Enumerations for SE_TCL_OUTPUT_VTX_FMT_0 and SE_VTX_FMT_0 color formats
typedef enum
{
  E_COLOR_FMT_NOT_PRESENT  = 0,
  E_COLOR_FMT_PACKED       = 1,
  E_COLOR_FMT_FLOAT_RGB    = 2,
  E_COLOR_FMT_FLOAT_RGBA   = 3
} E_COLOR_FMT;

// E_TEX_COMP_CNT
//   Enumerations for SE_TCL_OUTPUT_VTX_FMT_1 and SE_VTX_FMT_1 texture component counts
typedef enum
{
  E_TEX_COMP_CNT_NOT_PRESENT = 0,
  E_TEX_COMP_CNT_1           = 1,
  E_TEX_COMP_CNT_2           = 2,
  E_TEX_COMP_CNT_3           = 3,
  E_TEX_COMP_CNT_4           = 4
} E_TEX_COMP_CNT;

//E_TEXCOORD_TYPE
// Enumerations for the PP_TXFORMAT_X_ TEX_COORD_TYPE
typedef enum _ETEXCOORDTYPE
{
  E_TEXCOORD_2D           = 0,
  E_TEXCOORD_CUBIC        = 1,
  E_TEXCOORD_VOLUME       = 2,
  E_TEXCOORD_2D_PROJECTED = 3,
  E_TEXCOORD_DEPTH        = 4,
  E_TEXCOORD_1D_PROJECTED = 5,
  E_TEXCOORD_1D           = 6,
  E_TEXCOORD_NONE         = 7
} E_TEXCOORD_TYPE;

typedef enum
{
    E_STQ_ROUTE_OGL         = 0,
    E_STQ_ROUTE_D3D         = 1,
    E_STQ_ROUTE_RESERVED1   = 2, 
    E_STQ_ROUTE_RESERVED2   = 3 
} E_STQ_ROUTING;

#define RE_CNTL__VTX_STQALL_ROUTE_MASK ( RE_CNTL__VTX_STQ0_ROUTE_MASK | \
                                         RE_CNTL__VTX_STQ1_ROUTE_MASK | \
                                         RE_CNTL__VTX_STQ2_ROUTE_MASK | \
                                         RE_CNTL__VTX_STQ3_ROUTE_MASK | \
                                         RE_CNTL__VTX_STQ4_ROUTE_MASK | \
                                         RE_CNTL__VTX_STQ5_ROUTE_MASK )  

// Enumerations for the PP_PIXSHADER_In_C0 Color Input Argument Selectors
typedef enum
{
    E_PS_INPUT_COLOR_DIFFUSE_COLOR  = 4,
    E_PS_INPUT_COLOR_DIFFUSE_ALPHA  = 5,
    E_PS_INPUT_COLOR_SPECULAR_COLOR = 6,
    E_PS_INPUT_COLOR_SPECULAR_ALPHA = 7

} E_PS_COLOR_INPUT_ARG_SELECTORS;

// Enumerations for the PP_PIXSHADER_In_A0 Alpha Input Argument Selectors
typedef enum
{
    E_PS_INPUT_ALPHA_DIFFUSE_ALPHA  = 4,
    E_PS_INPUT_ALPHA_DIFFUSE_BLUE   = 5,
    E_PS_INPUT_ALPHA_SPECULAR_ALPHA = 6,
    E_PS_INPUT_ALPHA_SPECULAR_BLUE  = 7

} E_PS_ALPHA_INPUT_ARG_SELECTORS;

// Enumerations for the PP_PIXSHADER_In_xx OUTPUT_CLAMP
typedef enum
{
    E_PS_OUTPUT_CLAMP_WRAP   = 0,
    E_PS_OUTPUT_CLAMP_SAT    = 1,
    E_PS_OUTPUT_CLAMP_CLAMP  = 2
} E_PS_OUTPUT_CLAMP;

// Enumerations for the PP_PIXSHADER_In_xx OUTPUT_SCALE
typedef enum
{
    E_PS_OUTPUT_SCALE_1X   = 0,
    E_PS_OUTPUT_SCALE_2X   = 1,
    E_PS_OUTPUT_SCALE_4X   = 2,
    E_PS_OUTPUT_SCALE_8X   = 3,
    E_PS_OUTPUT_SCALE_D2   = 5,
    E_PS_OUTPUT_SCALE_D4   = 6,
    E_PS_OUTPUT_SCALE_D8   = 7
} E_PS_OUTPUT_SCALE;

// Enumeration for the PP_PIXSHADER_IX_C1 and PP_ADRSHADER_IX_C1 REPLICATE_ARG
// These values represent Input Swizzles, and can be applied independ of the
// input argument (either A, B, or C).  Since they are independent of the 
// actual argument, a shift must be performed if HW format is needed.
typedef enum
{
    E_PS_REPLICATE_ARG_RGB = 0, // None
    E_PS_REPLICATE_ARG_RRR = 1, // Replicate the R Channel
    E_PS_REPLICATE_ARG_GGG = 2, // Replicate the G Channel
    E_PS_REPLICATE_ARG_BBB = 3  // Replicate the B Channel

} E_PS_REPLICATE_ARG;

#endif  //_D3D_HW_ENUM_H_

